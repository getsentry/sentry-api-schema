{
  "openapi": "3.0.3",
  "info": {
    "title": "API Reference",
    "version": "v0",
    "description": "Sentry Public API",
    "termsOfService": "http://sentry.io/terms/",
    "contact": {
      "email": "partners@sentry.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/api/0/organizations/{organization_slug}/events/": {
      "get": {
        "operationId": "Query Discover Events in Table Format",
        "description": "Retrieves discover (also known as events) data for a given organization.\n\n**Eventsv2 Deprecation Note**: Users who may be using the `eventsv2` endpoint should update their requests to the `events` endpoint outline in this document.\nThe `eventsv2` endpoint is not a public endpoint and has no guaranteed availability. If you are not making any API calls to `eventsv2`, you can safely ignore this.\nChanges between `eventsv2` and `events` include:\n- Field keys in the response now match the keys in the requested `field` param exactly.\n- The `meta` object in the response now shows types in the nested `field` object.\n\nAside from the url change, there are no changes to the request payload itself.\n\n**Note**: This endpoint is intended to get a table of results, and is not for doing a full export of data sent to\nSentry.\n\nThe `field` query parameter determines what fields will be selected in the `data` and `meta` keys of the endpoint response.\n- The `data` key contains a list of results row by row that match the `query` made\n- The `meta` key contains information about the response, including the unit or type of the fields requested",
        "parameters": [
          {
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The end of the period of time for the query, expected in ISO-8601 format. For example `2001-12-14T12:34:56.7890`."
          },
          {
            "in": "query",
            "name": "environment",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The name of environments to filter by."
          },
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "project",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "The ids of projects to filter by. `-1` means all available projects. If thisÂ parameter is omitted, the request will default to using 'My Projects'."
          },
          {
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The start of the period of time for the query, expected in ISO-8601 format. For example `2001-12-14T12:34:56.7890`."
          },
          {
            "in": "query",
            "name": "statsPeriod",
            "schema": {
              "type": "string"
            },
            "description": "The period of time for the query, will override the start & end parameters, a number followed by one of:\n- `d` for days\n- `h` for hours\n- `m` for minutes\n- `s` for seconds\n- `w` for weeks\n\nFor example `24h`, to mean query data starting from 24 hours ago to now."
          },
          {
            "in": "query",
            "name": "field",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The fields, functions, or equations to request for the query. At most 20 fields can be selected per request. Each field can be one of the following types:\n- A built-in key field. See possible fields in the [properties table](/product/sentry-basics/search/searchable-properties/#properties-table), under any field that is an event property.\n    - example: `field=transaction`\n- A tag. Tags should use the `tag[]` formatting to avoid ambiguity with any fields\n    - example: `field=tag[isEnterprise]`\n- A function which will be in the format of `function_name(parameters,...)`. See possible functions in the [query builder documentation](/product/discover-queries/query-builder/#stacking-functions).\n    - when a function is included, Discover will group by any tags or fields\n    - example: `field=count_if(transaction.duration,greater,300)`\n- An equation when prefixed with `equation|`. Read more about [equations here](https://docs.sentry.io/product/discover-queries/query-builder/query-equations/).\n    - example: `field=equation|count_if(transaction.duration,greater,300) / count() * 100`\n",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer"
            },
            "description": "Limit the number of rows to return in the result. Default and maximum allowed is 100."
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "The search filter for your query, read more about query syntax [here](https://docs.sentry.io/product/sentry-basics/search/).\n\nexample: `query=(transaction:foo AND release:abc) OR (transaction:[bar,baz] AND release:def)`\n"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "description": "What to order the results of the query by. Must be something in the `field` list, excluding equations."
          }
        ],
        "tags": [
          "Discover"
        ],
        "security": [
          {
            "auth_token": [
              "org:admin",
              "org:read",
              "org:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "fields"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "examples": {
                  "Success": {
                    "value": {
                      "data": [
                        {
                          "count_if(transaction.duration,greater,300)": 5,
                          "count()": 10,
                          "equation|count_if(transaction.duration,greater,300) / count() * 100": 50,
                          "transaction": "foo"
                        },
                        {
                          "count_if(transaction.duration,greater,300)": 3,
                          "count()": 20,
                          "equation|count_if(transaction.duration,greater,300) / count() * 100": 15,
                          "transaction": "bar"
                        },
                        {
                          "count_if(transaction.duration,greater,300)": 8,
                          "count()": 40,
                          "equation|count_if(transaction.duration,greater,300) / count() * 100": 20,
                          "transaction": "baz"
                        }
                      ],
                      "meta": {
                        "fields": {
                          "count_if(transaction.duration,greater,300)": "integer",
                          "count()": "integer",
                          "equation|count_if(transaction.duration,greater,300) / count() * 100": "number",
                          "transaction": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Invalid Query"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/members/{member_id}/": {
      "get": {
        "operationId": "Retrieve an Organization Member",
        "description": "Retrieve an organization member's details.\n\nWill return a pending invite as long as it's already approved.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "member_id",
            "schema": {
              "type": "string"
            },
            "description": "The member ID.",
            "required": true
          }
        ],
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "auth_token": [
              "member:admin",
              "member:read",
              "member:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "externalUsers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "externalId": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "teamId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "externalName": {
                            "type": "string"
                          },
                          "integrationId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "externalName",
                          "id",
                          "integrationId",
                          "provider"
                        ]
                      }
                    },
                    "groupOrgRoles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "desc": {
                            "type": "string"
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowed": {
                            "type": "boolean"
                          },
                          "isAllowed": {
                            "type": "boolean"
                          },
                          "isRetired": {
                            "type": "boolean"
                          },
                          "is_global": {
                            "type": "boolean"
                          },
                          "isGlobal": {
                            "type": "boolean"
                          },
                          "minimumTeamRole": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "allowed",
                          "desc",
                          "id",
                          "isAllowed",
                          "isGlobal",
                          "isRetired",
                          "is_global",
                          "minimumTeamRole",
                          "name",
                          "scopes"
                        ]
                      }
                    },
                    "role": {
                      "type": "string"
                    },
                    "roleName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "identities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "organization": {
                                "type": "object",
                                "properties": {
                                  "slug": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "slug"
                                ]
                              },
                              "provider": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              },
                              "dateVerified": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "dateSynced": {
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "required": [
                              "dateSynced",
                              "dateVerified",
                              "id",
                              "name",
                              "organization",
                              "provider"
                            ]
                          }
                        },
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "avatarType",
                            "avatarUuid"
                          ]
                        },
                        "authenticators": {
                          "type": "array",
                          "items": {}
                        },
                        "canReset2fa": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "avatarUrl": {
                          "type": "string"
                        },
                        "isActive": {
                          "type": "boolean"
                        },
                        "hasPasswordAuth": {
                          "type": "boolean"
                        },
                        "isManaged": {
                          "type": "boolean"
                        },
                        "dateJoined": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastLogin": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "has2fa": {
                          "type": "boolean"
                        },
                        "lastActive": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "isSuperuser": {
                          "type": "boolean"
                        },
                        "isStaff": {
                          "type": "boolean"
                        },
                        "experiments": {
                          "type": "object",
                          "additionalProperties": {}
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "is_verified": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "email",
                              "id",
                              "is_verified"
                            ]
                          }
                        }
                      },
                      "required": [
                        "avatarUrl",
                        "dateJoined",
                        "email",
                        "emails",
                        "experiments",
                        "has2fa",
                        "hasPasswordAuth",
                        "id",
                        "isActive",
                        "isManaged",
                        "isStaff",
                        "isSuperuser",
                        "lastActive",
                        "lastLogin",
                        "name",
                        "username"
                      ]
                    },
                    "orgRole": {
                      "type": "string"
                    },
                    "pending": {
                      "type": "boolean"
                    },
                    "expired": {
                      "type": "boolean"
                    },
                    "flags": {
                      "type": "object",
                      "properties": {
                        "idp:provisioned": {
                          "type": "boolean"
                        },
                        "idp:role-restricted": {
                          "type": "boolean"
                        },
                        "sso:linked": {
                          "type": "boolean"
                        },
                        "sso:invalid": {
                          "type": "boolean"
                        },
                        "member-limit:restricted": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "idp:provisioned",
                        "idp:role-restricted",
                        "member-limit:restricted",
                        "sso:invalid",
                        "sso:linked"
                      ]
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "inviteStatus": {
                      "type": "string"
                    },
                    "inviterName": {
                      "type": "string",
                      "nullable": true
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "teamRoles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "teamSlug": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "role",
                          "teamSlug"
                        ]
                      }
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "desc": {
                            "type": "string"
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowed": {
                            "type": "boolean"
                          },
                          "isAllowed": {
                            "type": "boolean"
                          },
                          "isRetired": {
                            "type": "boolean"
                          },
                          "is_global": {
                            "type": "boolean"
                          },
                          "isGlobal": {
                            "type": "boolean"
                          },
                          "minimumTeamRole": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "allowed",
                          "desc",
                          "id",
                          "isAllowed",
                          "isGlobal",
                          "isRetired",
                          "is_global",
                          "minimumTeamRole",
                          "name",
                          "scopes"
                        ]
                      }
                    },
                    "invite_link": {
                      "type": "string",
                      "nullable": true
                    },
                    "isOnlyOwner": {
                      "type": "boolean"
                    },
                    "orgRoleList": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "desc": {
                            "type": "string"
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowed": {
                            "type": "boolean"
                          },
                          "isAllowed": {
                            "type": "boolean"
                          },
                          "isRetired": {
                            "type": "boolean"
                          },
                          "is_global": {
                            "type": "boolean"
                          },
                          "isGlobal": {
                            "type": "boolean"
                          },
                          "minimumTeamRole": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "allowed",
                          "desc",
                          "id",
                          "isAllowed",
                          "isGlobal",
                          "isRetired",
                          "is_global",
                          "minimumTeamRole",
                          "name",
                          "scopes"
                        ]
                      }
                    },
                    "teamRoleList": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "desc": {
                            "type": "string"
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowed": {
                            "type": "boolean"
                          },
                          "isAllowed": {
                            "type": "boolean"
                          },
                          "isRetired": {
                            "type": "boolean"
                          },
                          "isMinimumRoleFor": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "allowed",
                          "desc",
                          "id",
                          "isAllowed",
                          "isMinimumRoleFor",
                          "isRetired",
                          "name",
                          "scopes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "dateCreated",
                    "email",
                    "expired",
                    "flags",
                    "id",
                    "inviteStatus",
                    "invite_link",
                    "inviterName",
                    "isOnlyOwner",
                    "name",
                    "orgRole",
                    "orgRoleList",
                    "pending",
                    "teamRoleList",
                    "teamRoles",
                    "teams",
                    "user"
                  ]
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "operationId": "Update an Organization Member's Roles",
        "description": "Update a member's organization and team-level roles.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "member_id",
            "schema": {
              "type": "string"
            },
            "description": "The member ID.",
            "required": true
          },
          {
            "in": "query",
            "name": "orgRole",
            "schema": {
              "type": "string"
            },
            "description": "\nThe organization role of the member. The options are:\n- `billing`: Can manage payment and compliance details.\n- `member`: Can view and act on events, as well as view most other data within the organization.\n- `manager`: Has full management access to all teams and projects. Can also manage the organization's membership.\n- `owner`: Has unrestricted access to the organization, its data, and its settings. Can add, modify, and\ndelete projects and members, as well as make billing and plan changes.\n"
          },
          {
            "in": "query",
            "name": "teamRoles",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {}
              }
            },
            "description": "\nConfigures the team role of the member. The two roles are:\n- `contributor`: Can view and act on issues. Depending on organization settings, they can also add team members.\n- `admin`: Has full management access to their team's membership and projects.\n```json\n{\n    \"teamRoles\": [\n        {\n            \"teamSlug\": \"ancient-gabelers\",\n            \"role\": \"admin\"\n        },\n        {\n            \"teamSlug\": \"powerful-abolitionist\",\n            \"role\": \"contributor\"\n        }\n    ]\n}\n```\n"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalUsers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "externalId": {
                          "type": "string"
                        },
                        "userId": {
                          "type": "string"
                        },
                        "teamId": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "externalName": {
                          "type": "string"
                        },
                        "integrationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "externalName",
                        "id",
                        "integrationId",
                        "provider"
                      ]
                    }
                  },
                  "groupOrgRoles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "desc": {
                          "type": "string"
                        },
                        "scopes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowed": {
                          "type": "boolean"
                        },
                        "isAllowed": {
                          "type": "boolean"
                        },
                        "isRetired": {
                          "type": "boolean"
                        },
                        "is_global": {
                          "type": "boolean"
                        },
                        "isGlobal": {
                          "type": "boolean"
                        },
                        "minimumTeamRole": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "allowed",
                        "desc",
                        "id",
                        "isAllowed",
                        "isGlobal",
                        "isRetired",
                        "is_global",
                        "minimumTeamRole",
                        "name",
                        "scopes"
                      ]
                    }
                  },
                  "role": {
                    "type": "string"
                  },
                  "roleName": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "identities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "organization": {
                              "type": "object",
                              "properties": {
                                "slug": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "slug"
                              ]
                            },
                            "provider": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            },
                            "dateVerified": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateSynced": {
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "dateSynced",
                            "dateVerified",
                            "id",
                            "name",
                            "organization",
                            "provider"
                          ]
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "avatarType": {
                            "type": "string"
                          },
                          "avatarUuid": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "avatarType",
                          "avatarUuid"
                        ]
                      },
                      "authenticators": {
                        "type": "array",
                        "items": {}
                      },
                      "canReset2fa": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "avatarUrl": {
                        "type": "string"
                      },
                      "isActive": {
                        "type": "boolean"
                      },
                      "hasPasswordAuth": {
                        "type": "boolean"
                      },
                      "isManaged": {
                        "type": "boolean"
                      },
                      "dateJoined": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastLogin": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "has2fa": {
                        "type": "boolean"
                      },
                      "lastActive": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "isSuperuser": {
                        "type": "boolean"
                      },
                      "isStaff": {
                        "type": "boolean"
                      },
                      "experiments": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "is_verified": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "email",
                            "id",
                            "is_verified"
                          ]
                        }
                      }
                    },
                    "required": [
                      "avatarUrl",
                      "dateJoined",
                      "email",
                      "emails",
                      "experiments",
                      "has2fa",
                      "hasPasswordAuth",
                      "id",
                      "isActive",
                      "isManaged",
                      "isStaff",
                      "isSuperuser",
                      "lastActive",
                      "lastLogin",
                      "name",
                      "username"
                    ]
                  },
                  "orgRole": {
                    "type": "string"
                  },
                  "pending": {
                    "type": "boolean"
                  },
                  "expired": {
                    "type": "boolean"
                  },
                  "flags": {
                    "type": "object",
                    "properties": {
                      "idp:provisioned": {
                        "type": "boolean"
                      },
                      "idp:role-restricted": {
                        "type": "boolean"
                      },
                      "sso:linked": {
                        "type": "boolean"
                      },
                      "sso:invalid": {
                        "type": "boolean"
                      },
                      "member-limit:restricted": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "idp:provisioned",
                      "idp:role-restricted",
                      "member-limit:restricted",
                      "sso:invalid",
                      "sso:linked"
                    ]
                  },
                  "dateCreated": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "inviteStatus": {
                    "type": "string"
                  },
                  "inviterName": {
                    "type": "string",
                    "nullable": true
                  },
                  "teams": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "teamRoles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "teamSlug": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "role",
                        "teamSlug"
                      ]
                    }
                  }
                },
                "required": [
                  "dateCreated",
                  "email",
                  "expired",
                  "flags",
                  "id",
                  "inviteStatus",
                  "inviterName",
                  "name",
                  "orgRole",
                  "pending",
                  "teamRoles",
                  "teams",
                  "user"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "auth_token": [
              "member:admin",
              "member:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "externalUsers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "externalId": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "teamId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "externalName": {
                            "type": "string"
                          },
                          "integrationId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "externalName",
                          "id",
                          "integrationId",
                          "provider"
                        ]
                      }
                    },
                    "groupOrgRoles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "desc": {
                            "type": "string"
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowed": {
                            "type": "boolean"
                          },
                          "isAllowed": {
                            "type": "boolean"
                          },
                          "isRetired": {
                            "type": "boolean"
                          },
                          "is_global": {
                            "type": "boolean"
                          },
                          "isGlobal": {
                            "type": "boolean"
                          },
                          "minimumTeamRole": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "allowed",
                          "desc",
                          "id",
                          "isAllowed",
                          "isGlobal",
                          "isRetired",
                          "is_global",
                          "minimumTeamRole",
                          "name",
                          "scopes"
                        ]
                      }
                    },
                    "role": {
                      "type": "string"
                    },
                    "roleName": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "identities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "organization": {
                                "type": "object",
                                "properties": {
                                  "slug": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "slug"
                                ]
                              },
                              "provider": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              },
                              "dateVerified": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "dateSynced": {
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "required": [
                              "dateSynced",
                              "dateVerified",
                              "id",
                              "name",
                              "organization",
                              "provider"
                            ]
                          }
                        },
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "avatarType",
                            "avatarUuid"
                          ]
                        },
                        "authenticators": {
                          "type": "array",
                          "items": {}
                        },
                        "canReset2fa": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "avatarUrl": {
                          "type": "string"
                        },
                        "isActive": {
                          "type": "boolean"
                        },
                        "hasPasswordAuth": {
                          "type": "boolean"
                        },
                        "isManaged": {
                          "type": "boolean"
                        },
                        "dateJoined": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastLogin": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "has2fa": {
                          "type": "boolean"
                        },
                        "lastActive": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "isSuperuser": {
                          "type": "boolean"
                        },
                        "isStaff": {
                          "type": "boolean"
                        },
                        "experiments": {
                          "type": "object",
                          "additionalProperties": {}
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "is_verified": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "email",
                              "id",
                              "is_verified"
                            ]
                          }
                        }
                      },
                      "required": [
                        "avatarUrl",
                        "dateJoined",
                        "email",
                        "emails",
                        "experiments",
                        "has2fa",
                        "hasPasswordAuth",
                        "id",
                        "isActive",
                        "isManaged",
                        "isStaff",
                        "isSuperuser",
                        "lastActive",
                        "lastLogin",
                        "name",
                        "username"
                      ]
                    },
                    "orgRole": {
                      "type": "string"
                    },
                    "pending": {
                      "type": "boolean"
                    },
                    "expired": {
                      "type": "boolean"
                    },
                    "flags": {
                      "type": "object",
                      "properties": {
                        "idp:provisioned": {
                          "type": "boolean"
                        },
                        "idp:role-restricted": {
                          "type": "boolean"
                        },
                        "sso:linked": {
                          "type": "boolean"
                        },
                        "sso:invalid": {
                          "type": "boolean"
                        },
                        "member-limit:restricted": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "idp:provisioned",
                        "idp:role-restricted",
                        "member-limit:restricted",
                        "sso:invalid",
                        "sso:linked"
                      ]
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "inviteStatus": {
                      "type": "string"
                    },
                    "inviterName": {
                      "type": "string",
                      "nullable": true
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "teamRoles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "teamSlug": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "role",
                          "teamSlug"
                        ]
                      }
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "desc": {
                            "type": "string"
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowed": {
                            "type": "boolean"
                          },
                          "isAllowed": {
                            "type": "boolean"
                          },
                          "isRetired": {
                            "type": "boolean"
                          },
                          "is_global": {
                            "type": "boolean"
                          },
                          "isGlobal": {
                            "type": "boolean"
                          },
                          "minimumTeamRole": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "allowed",
                          "desc",
                          "id",
                          "isAllowed",
                          "isGlobal",
                          "isRetired",
                          "is_global",
                          "minimumTeamRole",
                          "name",
                          "scopes"
                        ]
                      }
                    },
                    "invite_link": {
                      "type": "string",
                      "nullable": true
                    },
                    "isOnlyOwner": {
                      "type": "boolean"
                    },
                    "orgRoleList": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "desc": {
                            "type": "string"
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowed": {
                            "type": "boolean"
                          },
                          "isAllowed": {
                            "type": "boolean"
                          },
                          "isRetired": {
                            "type": "boolean"
                          },
                          "is_global": {
                            "type": "boolean"
                          },
                          "isGlobal": {
                            "type": "boolean"
                          },
                          "minimumTeamRole": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "allowed",
                          "desc",
                          "id",
                          "isAllowed",
                          "isGlobal",
                          "isRetired",
                          "is_global",
                          "minimumTeamRole",
                          "name",
                          "scopes"
                        ]
                      }
                    },
                    "teamRoleList": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "desc": {
                            "type": "string"
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowed": {
                            "type": "boolean"
                          },
                          "isAllowed": {
                            "type": "boolean"
                          },
                          "isRetired": {
                            "type": "boolean"
                          },
                          "isMinimumRoleFor": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "allowed",
                          "desc",
                          "id",
                          "isAllowed",
                          "isMinimumRoleFor",
                          "isRetired",
                          "name",
                          "scopes"
                        ]
                      }
                    }
                  },
                  "required": [
                    "dateCreated",
                    "email",
                    "expired",
                    "flags",
                    "id",
                    "inviteStatus",
                    "invite_link",
                    "inviterName",
                    "isOnlyOwner",
                    "name",
                    "orgRole",
                    "orgRoleList",
                    "pending",
                    "teamRoleList",
                    "teamRoles",
                    "teams",
                    "user"
                  ]
                },
                "examples": {
                  "UpdateSuccessful": {
                    "value": {
                      "id": "57377908164",
                      "email": "sirpenguin@antarcticarocks.com",
                      "name": "Sir Penguin",
                      "user": {
                        "id": "280094367316",
                        "name": "Sir Penguin",
                        "username": "sirpenguin@antarcticarocks.com",
                        "email": "sirpenguin@antarcticarocks.com",
                        "avatarUrl": "https://secure.gravatar.com/avatar/16aeb26c5fdba335c7078e9e9ddb5149?s=32&d=mm",
                        "isActive": true,
                        "hasPasswordAuth": true,
                        "isManaged": false,
                        "dateJoined": "2021-07-06T21:13:58.375239Z",
                        "lastLogin": "2021-08-02T18:25:00.051182Z",
                        "has2fa": false,
                        "lastActive": "2021-08-02T21:32:18.836829Z",
                        "isSuperuser": false,
                        "isStaff": false,
                        "experiments": {},
                        "emails": [
                          {
                            "id": "2153450836",
                            "email": "sirpenguin@antarcticarocks.com",
                            "is_verified": true
                          }
                        ],
                        "avatar": {
                          "avatarType": "letter_avatar",
                          "avatarUuid": null
                        },
                        "authenticators": [],
                        "canReset2fa": true
                      },
                      "role": "member",
                      "orgRole": "member",
                      "roleName": "Member",
                      "pending": false,
                      "expired": false,
                      "flags": {
                        "idp:provisioned": false,
                        "idp:role-restricted": false,
                        "sso:linked": false,
                        "sso:invalid": false,
                        "member-limit:restricted": false
                      },
                      "dateCreated": "2021-07-06T21:13:01.120263Z",
                      "inviteStatus": "approved",
                      "inviterName": "maininviter@antarcticarocks.com",
                      "teams": [
                        "cool-team",
                        "ancient-gabelers"
                      ],
                      "teamRoles": [
                        {
                          "teamSlug": "ancient-gabelers",
                          "role": "admin"
                        },
                        {
                          "teamSlug": "powerful-abolitionist",
                          "role": "contributor"
                        }
                      ],
                      "invite_link": null,
                      "isOnlyOwner": false,
                      "orgRoleList": [
                        {
                          "id": "billing",
                          "name": "Billing",
                          "desc": "Can manage subscription and billing details.",
                          "scopes": [
                            "org:billing"
                          ],
                          "allowed": true,
                          "isAllowed": true,
                          "isRetired": false,
                          "is_global": false,
                          "isGlobal": false,
                          "minimumTeamRole": "contributor"
                        },
                        {
                          "id": "member",
                          "name": "Member",
                          "desc": "Members can view and act on events, as well as view most other data within the organization.",
                          "scopes": [
                            "team:read",
                            "project:releases",
                            "org:read",
                            "event:read",
                            "alerts:write",
                            "member:read",
                            "alerts:read",
                            "event:admin",
                            "project:read",
                            "event:write"
                          ],
                          "allowed": true,
                          "isAllowed": true,
                          "isRetired": false,
                          "is_global": false,
                          "isGlobal": false,
                          "minimumTeamRole": "contributor"
                        },
                        {
                          "id": "admin",
                          "name": "Admin",
                          "desc": "Admin privileges on any teams of which they're a member. They can create new teams and projects, as well as remove teams and projects on which they already hold membership (or all teams, if open membership is enabled). Additionally, they can manage memberships of teams that they are members of. They cannot invite members to the organization.",
                          "scopes": [
                            "team:admin",
                            "org:integrations",
                            "project:admin",
                            "team:read",
                            "project:releases",
                            "org:read",
                            "team:write",
                            "event:read",
                            "alerts:write",
                            "member:read",
                            "alerts:read",
                            "event:admin",
                            "project:read",
                            "event:write",
                            "project:write"
                          ],
                          "allowed": true,
                          "isAllowed": true,
                          "isRetired": true,
                          "is_global": false,
                          "isGlobal": false,
                          "minimumTeamRole": "admin"
                        },
                        {
                          "id": "manager",
                          "name": "Manager",
                          "desc": "Gains admin access on all teams as well as the ability to add and remove members.",
                          "scopes": [
                            "team:admin",
                            "org:integrations",
                            "project:releases",
                            "team:write",
                            "member:read",
                            "org:write",
                            "project:write",
                            "project:admin",
                            "team:read",
                            "org:read",
                            "event:read",
                            "member:write",
                            "alerts:write",
                            "alerts:read",
                            "event:admin",
                            "project:read",
                            "event:write",
                            "member:admin"
                          ],
                          "allowed": true,
                          "isAllowed": true,
                          "isRetired": false,
                          "is_global": true,
                          "isGlobal": true,
                          "minimumTeamRole": "admin"
                        },
                        {
                          "id": "owner",
                          "name": "Owner",
                          "desc": "Unrestricted access to the organization, its data, and its settings. Can add, modify, and delete projects and members, as well as make billing and plan changes.",
                          "scopes": [
                            "team:admin",
                            "org:integrations",
                            "project:releases",
                            "org:admin",
                            "team:write",
                            "member:read",
                            "org:write",
                            "project:write",
                            "project:admin",
                            "team:read",
                            "org:read",
                            "event:read",
                            "member:write",
                            "alerts:write",
                            "org:billing",
                            "alerts:read",
                            "event:admin",
                            "project:read",
                            "event:write",
                            "member:admin"
                          ],
                          "allowed": true,
                          "isAllowed": true,
                          "isRetired": false,
                          "is_global": true,
                          "isGlobal": true,
                          "minimumTeamRole": "admin"
                        }
                      ],
                      "teamRoleList": [
                        {
                          "id": "contributor",
                          "name": "Contributor",
                          "desc": "Contributors can view and act on events, as well as view most other data within the team's projects.",
                          "scopes": [
                            "team:read",
                            "project:releases",
                            "org:read",
                            "event:read",
                            "member:read",
                            "alerts:read",
                            "project:read",
                            "event:write"
                          ],
                          "allowed": false,
                          "isAllowed": false,
                          "isRetired": false,
                          "isMinimumRoleFor": null
                        },
                        {
                          "id": "admin",
                          "name": "Team Admin",
                          "desc": "Admin privileges on the team. They can create and remove projects, and can manage the team's memberships. They cannot invite members to the organization.",
                          "scopes": [
                            "team:admin",
                            "org:integrations",
                            "project:admin",
                            "team:read",
                            "project:releases",
                            "org:read",
                            "team:write",
                            "event:read",
                            "alerts:write",
                            "member:read",
                            "alerts:read",
                            "event:admin",
                            "project:read",
                            "event:write",
                            "project:write"
                          ],
                          "allowed": false,
                          "isAllowed": false,
                          "isRetired": false,
                          "isMinimumRoleFor": "admin"
                        }
                      ]
                    },
                    "summary": "Update Successful"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "operationId": "Delete an Organization Member",
        "description": "Remove an organization member.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "member_id",
            "schema": {
              "type": "string"
            },
            "description": "The member ID.",
            "required": true
          }
        ],
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "auth_token": [
              "member:admin",
              "member:read",
              "member:write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/members/{member_id}/teams/{team_slug}/": {
      "post": {
        "operationId": "Add an Organization Member to a Team",
        "description": "This request can return various success codes depending on the context of the team:\n- **`201`**: The member has been successfully added.\n- **`202`**: The member needs permission to join the team and an access request\nhas been generated.\n- **`204`**: The member is already on the team.\n\nIf the team is provisioned through an identity provider, the member cannot join the\nteam through Sentry.\n\nNote the permission scopes vary depending on the organization setting `\"Open Membership\"`\nand the type of authorization token. The following table outlines the accepted scopes.\n<table style=\"width: 100%;\">\n<thead>\n    <tr>\n    <th style=\"width: 33%;\"></th>\n    <th colspan=\"2\" style=\"text-align: center; font-weight: bold; width: 33%;\">Open Membership</th>\n    </tr>\n</thead>\n<tbody>\n    <tr>\n    <td style=\"width: 34%;\"></td>\n    <td style=\"text-align: center; font-weight: bold; width: 33%;\">On</td>\n    <td style=\"text-align: center; font-weight: bold; width: 33%;\">Off</td>\n    </tr>\n    <tr>\n    <td style=\"text-align: center; font-weight: bold; vertical-align: middle;\"><a\n    href=\"https://docs.sentry.io/api/auth/#auth-tokens\">Org Auth Token</a></td>\n    <td style=\"text-align: left; width: 33%;\">\n        <ul style=\"list-style-type: none; padding-left: 0;\">\n        <li><strong style=\"color: #9c5f99;\">&bull; org:read</strong></li>\n        </ul>\n    </td>\n    <td style=\"text-align: left; width: 33%;\">\n        <ul style=\"list-style-type: none; padding-left: 0;\">\n        <li><strong style=\"color: #9c5f99;\">&bull; org:write</strong></li>\n        <li><strong style=\"color: #9c5f99;\">&bull; team:write</strong></li>\n        </ul>\n    </td>\n    </tr>\n    <tr>\n    <td style=\"text-align: center; font-weight: bold; vertical-align: middle;\"><a\n    href=\"https://docs.sentry.io/api/auth/#user-authentication-tokens\">User Auth Token</a></td>\n    <td style=\"text-align: left; width: 33%;\">\n        <ul style=\"list-style-type: none; padding-left: 0;\">\n        <li><strong style=\"color: #9c5f99;\">&bull; org:read</strong></li>\n        </ul>\n    </td>\n    <td style=\"text-align: left; width: 33%;\">\n        <ul style=\"list-style-type: none; padding-left: 0;\">\n        <li><strong style=\"color: #9c5f99;\">&bull; org:read*</strong></li>\n        <li><strong style=\"color: #9c5f99;\">&bull; org:write</strong></li>\n        <li><strong style=\"color: #9c5f99;\">&bull; org:read +</strong></li>\n        <li><strong style=\"color: #9c5f99;\">&nbsp; &nbsp;team:write**</strong></li>\n        </ul>\n    </td>\n    </tr>\n</tbody>\n</table>\n\n\n*Organization members are restricted to this scope. When sending a request, it will always\nreturn a 202 and request an invite to the team.\n\n\n\\*\\*Team Admins must have both **`org:read`** and **`team:write`** scopes in their user\nauthorization token to add members to their teams.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "member_id",
            "schema": {
              "type": "string"
            },
            "description": "The ID of the organization member to add to the team",
            "required": true
          },
          {
            "in": "path",
            "name": "team_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the team the resource belongs to.",
            "required": true
          }
        ],
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "auth_token": [
              "org:read",
              "org:write",
              "team:write"
            ]
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "teamRole": {
                      "type": "string",
                      "nullable": true
                    },
                    "flags": {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "isPending": {
                      "type": "boolean"
                    },
                    "memberCount": {
                      "type": "integer"
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "avatarType",
                        "avatarUuid"
                      ]
                    }
                  },
                  "required": [
                    "access",
                    "avatar",
                    "dateCreated",
                    "flags",
                    "hasAccess",
                    "id",
                    "isMember",
                    "isPending",
                    "memberCount",
                    "name",
                    "slug",
                    "teamRole"
                  ]
                },
                "examples": {
                  "Join,RequestAccessToOrAddAMemberToATeam": {
                    "value": {
                      "id": "4502349234123",
                      "slug": "ancient-gabelers",
                      "name": "Ancient Gabelers",
                      "dateCreated": "2023-05-31T19:47:53.621181Z",
                      "isMember": true,
                      "teamRole": "contributor",
                      "flags": {
                        "idp:provisioned": false
                      },
                      "access": [
                        "alerts:read",
                        "event:write",
                        "project:read",
                        "team:read",
                        "member:read",
                        "project:releases",
                        "event:read",
                        "org:read"
                      ],
                      "hasAccess": true,
                      "isPending": false,
                      "memberCount": 3,
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      }
                    },
                    "summary": "Join, request access to or add a member to a team"
                  }
                }
              }
            },
            "description": ""
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "This team is managed through your organization's identity provider"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "operationId": "Delete an Organization Member from a Team",
        "description": "Delete an organization member from a team.\n\nNote the permission scopes vary depending on the type of authorization token. The following\ntable outlines the accepted scopes.\n<table style=\"width: 100%;\">\n    <tr style=\"width: 50%;\">\n        <td style=\"width: 50%; text-align: center; font-weight: bold; vertical-align: middle;\"><a href=\"https://docs.sentry.io/api/auth/#auth-tokens\">Org Auth Token</a></td>\n        <td style=\"width: 50%; text-align: left;\">\n            <ul style=\"list-style-type: none; padding-left: 0;\">\n                <li><strong style=\"color: #9c5f99;\">&bull; org:write</strong></li>\n                <li><strong style=\"color: #9c5f99;\">&bull; org:admin</strong></li>\n                <li><strong style=\"color: #9c5f99;\">&bull; team:admin</strong></li>\n            </ul>\n        </td>\n    </tr>\n    <tr style=\"width: 50%;\">\n        <td style=\"width: 50%; text-align: center; font-weight: bold; vertical-align: middle;\"><a href=\"https://docs.sentry.io/api/auth/#user-authentication-tokens\">User Auth Token</a></td>\n        <td style=\"width: 50%; text-align: left;\">\n            <ul style=\"list-style-type: none; padding-left: 0;\">\n                <li><strong style=\"color: #9c5f99;\">&bull; org:read*</strong></li>\n                <li><strong style=\"color: #9c5f99;\">&bull; org:write</strong></li>\n                <li><strong style=\"color: #9c5f99;\">&bull; org:admin</strong></li>\n                <li><strong style=\"color: #9c5f99;\">&bull; team:admin</strong></li>\n                <li><strong style=\"color: #9c5f99;\">&bull; org:read + team:admin**</strong></li>\n            </ul>\n        </td>\n    </tr>\n</table>\n\n\n\\***`org:read`** can only be used to remove yourself from the teams you are a member of.\n\n\n\\*\\*Team Admins must have both **`org:read`** and **`team:admin`** scopes in their user\nauthorization token to delete members from their teams.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "member_id",
            "schema": {
              "type": "string"
            },
            "description": "The ID of the organization member to delete from the team",
            "required": true
          },
          {
            "in": "path",
            "name": "team_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the team the resource belongs to.",
            "required": true
          }
        ],
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "auth_token": [
              "org:admin",
              "org:read",
              "org:write",
              "team:admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "teamRole": {
                      "type": "string",
                      "nullable": true
                    },
                    "flags": {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "isPending": {
                      "type": "boolean"
                    },
                    "memberCount": {
                      "type": "integer"
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "avatarType",
                        "avatarUuid"
                      ]
                    }
                  },
                  "required": [
                    "access",
                    "avatar",
                    "dateCreated",
                    "flags",
                    "hasAccess",
                    "id",
                    "isMember",
                    "isPending",
                    "memberCount",
                    "name",
                    "slug",
                    "teamRole"
                  ]
                },
                "examples": {
                  "RemoveAMemberFromATeam": {
                    "value": {
                      "id": "4502349234123",
                      "slug": "ancient-gabelers",
                      "name": "Ancient Gabelers",
                      "dateCreated": "2023-05-31T19:47:53.621181Z",
                      "isMember": false,
                      "teamRole": null,
                      "flags": {
                        "idp:provisioned": false
                      },
                      "access": [
                        "alerts:read",
                        "event:write",
                        "project:read",
                        "team:read",
                        "member:read",
                        "project:releases",
                        "event:read",
                        "org:read"
                      ],
                      "hasAccess": true,
                      "isPending": false,
                      "memberCount": 3,
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      }
                    },
                    "summary": "Remove a member from a team"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "This team is managed through your organization's identity provider"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/monitors/": {
      "get": {
        "operationId": "Retrieve Monitors for an Organization",
        "description": "Lists monitors, including nested monitor enviroments. May be filtered to a project or environment.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "project",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "The ids of projects to filter by. `-1` means all available projects. If thisÂ parameter is omitted, the request will default to using 'My Projects'."
          },
          {
            "in": "query",
            "name": "environment",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The name of environments to filter by."
          }
        ],
        "tags": [
          "Crons"
        ],
        "security": [
          {
            "auth_token": [
              "org:admin",
              "org:read",
              "org:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "alertRule": {},
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "config": {},
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "project": {
                        "type": "object",
                        "properties": {
                          "stats": {},
                          "transactionStats": {},
                          "sessionStats": {},
                          "id": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "platform": {
                            "type": "string",
                            "nullable": true
                          },
                          "dateCreated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "isBookmarked": {
                            "type": "boolean"
                          },
                          "isMember": {
                            "type": "boolean"
                          },
                          "features": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "firstEvent": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "firstTransactionEvent": {
                            "type": "boolean"
                          },
                          "access": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "hasAccess": {
                            "type": "boolean"
                          },
                          "hasMinifiedStackTrace": {
                            "type": "boolean"
                          },
                          "hasMonitors": {
                            "type": "boolean"
                          },
                          "hasProfiles": {
                            "type": "boolean"
                          },
                          "hasReplays": {
                            "type": "boolean"
                          },
                          "hasSessions": {
                            "type": "boolean"
                          },
                          "isInternal": {
                            "type": "boolean"
                          },
                          "isPublic": {
                            "type": "boolean"
                          },
                          "avatar": {
                            "type": "object",
                            "properties": {
                              "avatarType": {
                                "type": "string"
                              },
                              "avatarUuid": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "avatarType",
                              "avatarUuid"
                            ]
                          },
                          "color": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "access",
                          "avatar",
                          "color",
                          "dateCreated",
                          "features",
                          "firstEvent",
                          "firstTransactionEvent",
                          "hasAccess",
                          "hasMinifiedStackTrace",
                          "hasMonitors",
                          "hasProfiles",
                          "hasReplays",
                          "hasSessions",
                          "id",
                          "isBookmarked",
                          "isInternal",
                          "isMember",
                          "isPublic",
                          "name",
                          "platform",
                          "slug",
                          "status"
                        ]
                      },
                      "environments": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "dateCreated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastCheckIn": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "nextCheckIn": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "dateCreated",
                          "lastCheckIn",
                          "name",
                          "nextCheckIn",
                          "status"
                        ]
                      }
                    },
                    "required": [
                      "config",
                      "dateCreated",
                      "environments",
                      "id",
                      "name",
                      "project",
                      "slug",
                      "status",
                      "type"
                    ]
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "operationId": "Create a Monitor",
        "description": "Create a new monitor.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          }
        ],
        "tags": [
          "Crons"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Allows parameters to be defined in snake case, but passed as camel case.\n\nErrors are output in camel case.",
                "properties": {
                  "project": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 128
                  },
                  "slug": {
                    "type": "string",
                    "maxLength": 50,
                    "pattern": "^[a-z0-9_\\-]+$"
                  },
                  "status": {
                    "enum": [
                      "active",
                      "disabled"
                    ],
                    "type": "string",
                    "description": "* `active` - active\n* `disabled` - disabled",
                    "default": "active"
                  },
                  "type": {
                    "enum": [
                      "cron_job"
                    ],
                    "type": "string",
                    "description": "* `cron_job` - cron_job"
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "schedule_type": {
                        "enum": [
                          "crontab",
                          "interval"
                        ],
                        "type": "string",
                        "description": "Currently supports \"crontab\" or \"interval\"\n\n* `crontab` - crontab\n* `interval` - interval"
                      },
                      "schedule": {
                        "description": "Varies depending on the schedule_type. Is either a crontab string, or a 2 element tuple for intervals (e.g. [1, 'day'])"
                      },
                      "checkin_margin": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "How long (in minutes) after the expected checkin time will we wait until we consider the checkin to have been missed."
                      },
                      "max_runtime": {
                        "type": "integer",
                        "maximum": 40320,
                        "minimum": 1,
                        "nullable": true,
                        "description": "How long (in minutes) is the checkin allowed to run for in CheckInStatus.IN_PROGRESS before it is considered failed."
                      },
                      "timezone": {
                        "enum": [
                          "Africa/Abidjan",
                          "Africa/Accra",
                          "Africa/Addis_Ababa",
                          "Africa/Algiers",
                          "Africa/Asmara",
                          "Africa/Asmera",
                          "Africa/Bamako",
                          "Africa/Bangui",
                          "Africa/Banjul",
                          "Africa/Bissau",
                          "Africa/Blantyre",
                          "Africa/Brazzaville",
                          "Africa/Bujumbura",
                          "Africa/Cairo",
                          "Africa/Casablanca",
                          "Africa/Ceuta",
                          "Africa/Conakry",
                          "Africa/Dakar",
                          "Africa/Dar_es_Salaam",
                          "Africa/Djibouti",
                          "Africa/Douala",
                          "Africa/El_Aaiun",
                          "Africa/Freetown",
                          "Africa/Gaborone",
                          "Africa/Harare",
                          "Africa/Johannesburg",
                          "Africa/Juba",
                          "Africa/Kampala",
                          "Africa/Khartoum",
                          "Africa/Kigali",
                          "Africa/Kinshasa",
                          "Africa/Lagos",
                          "Africa/Libreville",
                          "Africa/Lome",
                          "Africa/Luanda",
                          "Africa/Lubumbashi",
                          "Africa/Lusaka",
                          "Africa/Malabo",
                          "Africa/Maputo",
                          "Africa/Maseru",
                          "Africa/Mbabane",
                          "Africa/Mogadishu",
                          "Africa/Monrovia",
                          "Africa/Nairobi",
                          "Africa/Ndjamena",
                          "Africa/Niamey",
                          "Africa/Nouakchott",
                          "Africa/Ouagadougou",
                          "Africa/Porto-Novo",
                          "Africa/Sao_Tome",
                          "Africa/Timbuktu",
                          "Africa/Tripoli",
                          "Africa/Tunis",
                          "Africa/Windhoek",
                          "America/Adak",
                          "America/Anchorage",
                          "America/Anguilla",
                          "America/Antigua",
                          "America/Araguaina",
                          "America/Argentina/Buenos_Aires",
                          "America/Argentina/Catamarca",
                          "America/Argentina/ComodRivadavia",
                          "America/Argentina/Cordoba",
                          "America/Argentina/Jujuy",
                          "America/Argentina/La_Rioja",
                          "America/Argentina/Mendoza",
                          "America/Argentina/Rio_Gallegos",
                          "America/Argentina/Salta",
                          "America/Argentina/San_Juan",
                          "America/Argentina/San_Luis",
                          "America/Argentina/Tucuman",
                          "America/Argentina/Ushuaia",
                          "America/Aruba",
                          "America/Asuncion",
                          "America/Atikokan",
                          "America/Atka",
                          "America/Bahia",
                          "America/Bahia_Banderas",
                          "America/Barbados",
                          "America/Belem",
                          "America/Belize",
                          "America/Blanc-Sablon",
                          "America/Boa_Vista",
                          "America/Bogota",
                          "America/Boise",
                          "America/Buenos_Aires",
                          "America/Cambridge_Bay",
                          "America/Campo_Grande",
                          "America/Cancun",
                          "America/Caracas",
                          "America/Catamarca",
                          "America/Cayenne",
                          "America/Cayman",
                          "America/Chicago",
                          "America/Chihuahua",
                          "America/Coral_Harbour",
                          "America/Cordoba",
                          "America/Costa_Rica",
                          "America/Creston",
                          "America/Cuiaba",
                          "America/Curacao",
                          "America/Danmarkshavn",
                          "America/Dawson",
                          "America/Dawson_Creek",
                          "America/Denver",
                          "America/Detroit",
                          "America/Dominica",
                          "America/Edmonton",
                          "America/Eirunepe",
                          "America/El_Salvador",
                          "America/Ensenada",
                          "America/Fort_Nelson",
                          "America/Fort_Wayne",
                          "America/Fortaleza",
                          "America/Glace_Bay",
                          "America/Godthab",
                          "America/Goose_Bay",
                          "America/Grand_Turk",
                          "America/Grenada",
                          "America/Guadeloupe",
                          "America/Guatemala",
                          "America/Guayaquil",
                          "America/Guyana",
                          "America/Halifax",
                          "America/Havana",
                          "America/Hermosillo",
                          "America/Indiana/Indianapolis",
                          "America/Indiana/Knox",
                          "America/Indiana/Marengo",
                          "America/Indiana/Petersburg",
                          "America/Indiana/Tell_City",
                          "America/Indiana/Vevay",
                          "America/Indiana/Vincennes",
                          "America/Indiana/Winamac",
                          "America/Indianapolis",
                          "America/Inuvik",
                          "America/Iqaluit",
                          "America/Jamaica",
                          "America/Jujuy",
                          "America/Juneau",
                          "America/Kentucky/Louisville",
                          "America/Kentucky/Monticello",
                          "America/Knox_IN",
                          "America/Kralendijk",
                          "America/La_Paz",
                          "America/Lima",
                          "America/Los_Angeles",
                          "America/Louisville",
                          "America/Lower_Princes",
                          "America/Maceio",
                          "America/Managua",
                          "America/Manaus",
                          "America/Marigot",
                          "America/Martinique",
                          "America/Matamoros",
                          "America/Mazatlan",
                          "America/Mendoza",
                          "America/Menominee",
                          "America/Merida",
                          "America/Metlakatla",
                          "America/Mexico_City",
                          "America/Miquelon",
                          "America/Moncton",
                          "America/Monterrey",
                          "America/Montevideo",
                          "America/Montreal",
                          "America/Montserrat",
                          "America/Nassau",
                          "America/New_York",
                          "America/Nipigon",
                          "America/Nome",
                          "America/Noronha",
                          "America/North_Dakota/Beulah",
                          "America/North_Dakota/Center",
                          "America/North_Dakota/New_Salem",
                          "America/Ojinaga",
                          "America/Panama",
                          "America/Pangnirtung",
                          "America/Paramaribo",
                          "America/Phoenix",
                          "America/Port-au-Prince",
                          "America/Port_of_Spain",
                          "America/Porto_Acre",
                          "America/Porto_Velho",
                          "America/Puerto_Rico",
                          "America/Punta_Arenas",
                          "America/Rainy_River",
                          "America/Rankin_Inlet",
                          "America/Recife",
                          "America/Regina",
                          "America/Resolute",
                          "America/Rio_Branco",
                          "America/Rosario",
                          "America/Santa_Isabel",
                          "America/Santarem",
                          "America/Santiago",
                          "America/Santo_Domingo",
                          "America/Sao_Paulo",
                          "America/Scoresbysund",
                          "America/Shiprock",
                          "America/Sitka",
                          "America/St_Barthelemy",
                          "America/St_Johns",
                          "America/St_Kitts",
                          "America/St_Lucia",
                          "America/St_Thomas",
                          "America/St_Vincent",
                          "America/Swift_Current",
                          "America/Tegucigalpa",
                          "America/Thule",
                          "America/Thunder_Bay",
                          "America/Tijuana",
                          "America/Toronto",
                          "America/Tortola",
                          "America/Vancouver",
                          "America/Virgin",
                          "America/Whitehorse",
                          "America/Winnipeg",
                          "America/Yakutat",
                          "America/Yellowknife",
                          "Antarctica/Casey",
                          "Antarctica/Davis",
                          "Antarctica/DumontDUrville",
                          "Antarctica/Macquarie",
                          "Antarctica/Mawson",
                          "Antarctica/McMurdo",
                          "Antarctica/Palmer",
                          "Antarctica/Rothera",
                          "Antarctica/South_Pole",
                          "Antarctica/Syowa",
                          "Antarctica/Troll",
                          "Antarctica/Vostok",
                          "Arctic/Longyearbyen",
                          "Asia/Aden",
                          "Asia/Almaty",
                          "Asia/Amman",
                          "Asia/Anadyr",
                          "Asia/Aqtau",
                          "Asia/Aqtobe",
                          "Asia/Ashgabat",
                          "Asia/Ashkhabad",
                          "Asia/Atyrau",
                          "Asia/Baghdad",
                          "Asia/Bahrain",
                          "Asia/Baku",
                          "Asia/Bangkok",
                          "Asia/Barnaul",
                          "Asia/Beirut",
                          "Asia/Bishkek",
                          "Asia/Brunei",
                          "Asia/Calcutta",
                          "Asia/Chita",
                          "Asia/Choibalsan",
                          "Asia/Chongqing",
                          "Asia/Chungking",
                          "Asia/Colombo",
                          "Asia/Dacca",
                          "Asia/Damascus",
                          "Asia/Dhaka",
                          "Asia/Dili",
                          "Asia/Dubai",
                          "Asia/Dushanbe",
                          "Asia/Famagusta",
                          "Asia/Gaza",
                          "Asia/Harbin",
                          "Asia/Hebron",
                          "Asia/Ho_Chi_Minh",
                          "Asia/Hong_Kong",
                          "Asia/Hovd",
                          "Asia/Irkutsk",
                          "Asia/Istanbul",
                          "Asia/Jakarta",
                          "Asia/Jayapura",
                          "Asia/Jerusalem",
                          "Asia/Kabul",
                          "Asia/Kamchatka",
                          "Asia/Karachi",
                          "Asia/Kashgar",
                          "Asia/Kathmandu",
                          "Asia/Katmandu",
                          "Asia/Khandyga",
                          "Asia/Kolkata",
                          "Asia/Krasnoyarsk",
                          "Asia/Kuala_Lumpur",
                          "Asia/Kuching",
                          "Asia/Kuwait",
                          "Asia/Macao",
                          "Asia/Macau",
                          "Asia/Magadan",
                          "Asia/Makassar",
                          "Asia/Manila",
                          "Asia/Muscat",
                          "Asia/Nicosia",
                          "Asia/Novokuznetsk",
                          "Asia/Novosibirsk",
                          "Asia/Omsk",
                          "Asia/Oral",
                          "Asia/Phnom_Penh",
                          "Asia/Pontianak",
                          "Asia/Pyongyang",
                          "Asia/Qatar",
                          "Asia/Qostanay",
                          "Asia/Qyzylorda",
                          "Asia/Rangoon",
                          "Asia/Riyadh",
                          "Asia/Saigon",
                          "Asia/Sakhalin",
                          "Asia/Samarkand",
                          "Asia/Seoul",
                          "Asia/Shanghai",
                          "Asia/Singapore",
                          "Asia/Srednekolymsk",
                          "Asia/Taipei",
                          "Asia/Tashkent",
                          "Asia/Tbilisi",
                          "Asia/Tehran",
                          "Asia/Tel_Aviv",
                          "Asia/Thimbu",
                          "Asia/Thimphu",
                          "Asia/Tokyo",
                          "Asia/Tomsk",
                          "Asia/Ujung_Pandang",
                          "Asia/Ulaanbaatar",
                          "Asia/Ulan_Bator",
                          "Asia/Urumqi",
                          "Asia/Ust-Nera",
                          "Asia/Vientiane",
                          "Asia/Vladivostok",
                          "Asia/Yakutsk",
                          "Asia/Yangon",
                          "Asia/Yekaterinburg",
                          "Asia/Yerevan",
                          "Atlantic/Azores",
                          "Atlantic/Bermuda",
                          "Atlantic/Canary",
                          "Atlantic/Cape_Verde",
                          "Atlantic/Faeroe",
                          "Atlantic/Faroe",
                          "Atlantic/Jan_Mayen",
                          "Atlantic/Madeira",
                          "Atlantic/Reykjavik",
                          "Atlantic/South_Georgia",
                          "Atlantic/St_Helena",
                          "Atlantic/Stanley",
                          "Australia/ACT",
                          "Australia/Adelaide",
                          "Australia/Brisbane",
                          "Australia/Broken_Hill",
                          "Australia/Canberra",
                          "Australia/Currie",
                          "Australia/Darwin",
                          "Australia/Eucla",
                          "Australia/Hobart",
                          "Australia/LHI",
                          "Australia/Lindeman",
                          "Australia/Lord_Howe",
                          "Australia/Melbourne",
                          "Australia/NSW",
                          "Australia/North",
                          "Australia/Perth",
                          "Australia/Queensland",
                          "Australia/South",
                          "Australia/Sydney",
                          "Australia/Tasmania",
                          "Australia/Victoria",
                          "Australia/West",
                          "Australia/Yancowinna",
                          "Brazil/Acre",
                          "Brazil/DeNoronha",
                          "Brazil/East",
                          "Brazil/West",
                          "CET",
                          "CST6CDT",
                          "Canada/Atlantic",
                          "Canada/Central",
                          "Canada/Eastern",
                          "Canada/Mountain",
                          "Canada/Newfoundland",
                          "Canada/Pacific",
                          "Canada/Saskatchewan",
                          "Canada/Yukon",
                          "Chile/Continental",
                          "Chile/EasterIsland",
                          "Cuba",
                          "EET",
                          "EST",
                          "EST5EDT",
                          "Egypt",
                          "Eire",
                          "Etc/GMT",
                          "Etc/GMT+0",
                          "Etc/GMT+1",
                          "Etc/GMT+10",
                          "Etc/GMT+11",
                          "Etc/GMT+12",
                          "Etc/GMT+2",
                          "Etc/GMT+3",
                          "Etc/GMT+4",
                          "Etc/GMT+5",
                          "Etc/GMT+6",
                          "Etc/GMT+7",
                          "Etc/GMT+8",
                          "Etc/GMT+9",
                          "Etc/GMT-0",
                          "Etc/GMT-1",
                          "Etc/GMT-10",
                          "Etc/GMT-11",
                          "Etc/GMT-12",
                          "Etc/GMT-13",
                          "Etc/GMT-14",
                          "Etc/GMT-2",
                          "Etc/GMT-3",
                          "Etc/GMT-4",
                          "Etc/GMT-5",
                          "Etc/GMT-6",
                          "Etc/GMT-7",
                          "Etc/GMT-8",
                          "Etc/GMT-9",
                          "Etc/GMT0",
                          "Etc/Greenwich",
                          "Etc/UCT",
                          "Etc/UTC",
                          "Etc/Universal",
                          "Etc/Zulu",
                          "Europe/Amsterdam",
                          "Europe/Andorra",
                          "Europe/Astrakhan",
                          "Europe/Athens",
                          "Europe/Belfast",
                          "Europe/Belgrade",
                          "Europe/Berlin",
                          "Europe/Bratislava",
                          "Europe/Brussels",
                          "Europe/Bucharest",
                          "Europe/Budapest",
                          "Europe/Busingen",
                          "Europe/Chisinau",
                          "Europe/Copenhagen",
                          "Europe/Dublin",
                          "Europe/Gibraltar",
                          "Europe/Guernsey",
                          "Europe/Helsinki",
                          "Europe/Isle_of_Man",
                          "Europe/Istanbul",
                          "Europe/Jersey",
                          "Europe/Kaliningrad",
                          "Europe/Kiev",
                          "Europe/Kirov",
                          "Europe/Lisbon",
                          "Europe/Ljubljana",
                          "Europe/London",
                          "Europe/Luxembourg",
                          "Europe/Madrid",
                          "Europe/Malta",
                          "Europe/Mariehamn",
                          "Europe/Minsk",
                          "Europe/Monaco",
                          "Europe/Moscow",
                          "Europe/Nicosia",
                          "Europe/Oslo",
                          "Europe/Paris",
                          "Europe/Podgorica",
                          "Europe/Prague",
                          "Europe/Riga",
                          "Europe/Rome",
                          "Europe/Samara",
                          "Europe/San_Marino",
                          "Europe/Sarajevo",
                          "Europe/Saratov",
                          "Europe/Simferopol",
                          "Europe/Skopje",
                          "Europe/Sofia",
                          "Europe/Stockholm",
                          "Europe/Tallinn",
                          "Europe/Tirane",
                          "Europe/Tiraspol",
                          "Europe/Ulyanovsk",
                          "Europe/Uzhgorod",
                          "Europe/Vaduz",
                          "Europe/Vatican",
                          "Europe/Vienna",
                          "Europe/Vilnius",
                          "Europe/Volgograd",
                          "Europe/Warsaw",
                          "Europe/Zagreb",
                          "Europe/Zaporozhye",
                          "Europe/Zurich",
                          "GB",
                          "GB-Eire",
                          "GMT",
                          "GMT+0",
                          "GMT-0",
                          "GMT0",
                          "Greenwich",
                          "HST",
                          "Hongkong",
                          "Iceland",
                          "Indian/Antananarivo",
                          "Indian/Chagos",
                          "Indian/Christmas",
                          "Indian/Cocos",
                          "Indian/Comoro",
                          "Indian/Kerguelen",
                          "Indian/Mahe",
                          "Indian/Maldives",
                          "Indian/Mauritius",
                          "Indian/Mayotte",
                          "Indian/Reunion",
                          "Iran",
                          "Israel",
                          "Jamaica",
                          "Japan",
                          "Kwajalein",
                          "Libya",
                          "MET",
                          "MST",
                          "MST7MDT",
                          "Mexico/BajaNorte",
                          "Mexico/BajaSur",
                          "Mexico/General",
                          "NZ",
                          "NZ-CHAT",
                          "Navajo",
                          "PRC",
                          "PST8PDT",
                          "Pacific/Apia",
                          "Pacific/Auckland",
                          "Pacific/Bougainville",
                          "Pacific/Chatham",
                          "Pacific/Chuuk",
                          "Pacific/Easter",
                          "Pacific/Efate",
                          "Pacific/Enderbury",
                          "Pacific/Fakaofo",
                          "Pacific/Fiji",
                          "Pacific/Funafuti",
                          "Pacific/Galapagos",
                          "Pacific/Gambier",
                          "Pacific/Guadalcanal",
                          "Pacific/Guam",
                          "Pacific/Honolulu",
                          "Pacific/Johnston",
                          "Pacific/Kiritimati",
                          "Pacific/Kosrae",
                          "Pacific/Kwajalein",
                          "Pacific/Majuro",
                          "Pacific/Marquesas",
                          "Pacific/Midway",
                          "Pacific/Nauru",
                          "Pacific/Niue",
                          "Pacific/Norfolk",
                          "Pacific/Noumea",
                          "Pacific/Pago_Pago",
                          "Pacific/Palau",
                          "Pacific/Pitcairn",
                          "Pacific/Pohnpei",
                          "Pacific/Ponape",
                          "Pacific/Port_Moresby",
                          "Pacific/Rarotonga",
                          "Pacific/Saipan",
                          "Pacific/Samoa",
                          "Pacific/Tahiti",
                          "Pacific/Tarawa",
                          "Pacific/Tongatapu",
                          "Pacific/Truk",
                          "Pacific/Wake",
                          "Pacific/Wallis",
                          "Pacific/Yap",
                          "Poland",
                          "Portugal",
                          "ROC",
                          "ROK",
                          "Singapore",
                          "Turkey",
                          "UCT",
                          "US/Alaska",
                          "US/Aleutian",
                          "US/Arizona",
                          "US/Central",
                          "US/East-Indiana",
                          "US/Eastern",
                          "US/Hawaii",
                          "US/Indiana-Starke",
                          "US/Michigan",
                          "US/Mountain",
                          "US/Pacific",
                          "US/Samoa",
                          "UTC",
                          "Universal",
                          "W-SU",
                          "WET",
                          "Zulu"
                        ],
                        "type": "string",
                        "description": "tz database style timezone string\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"
                      },
                      "failure_issue_threshold": {
                        "type": "integer",
                        "minimum": 1,
                        "nullable": true,
                        "description": "How many consecutive missed or failed check-ins in a row before creating a new issue."
                      },
                      "recovery_threshold": {
                        "type": "integer",
                        "minimum": 1,
                        "nullable": true,
                        "description": "How many successful check-ins in a row before resolving an issue."
                      }
                    },
                    "required": [
                      "schedule"
                    ]
                  },
                  "alert_rule": {
                    "type": "object",
                    "properties": {
                      "environment": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the environment",
                        "maxLength": 64
                      },
                      "targets": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "target_identifier": {
                              "type": "integer",
                              "description": "ID of target object"
                            },
                            "target_type": {
                              "type": "string",
                              "description": "One of [Member, Team]"
                            }
                          },
                          "required": [
                            "target_identifier",
                            "target_type"
                          ]
                        },
                        "description": "Array of dictionaries with information of the user or team to be notified"
                      }
                    },
                    "required": [
                      "targets"
                    ]
                  }
                },
                "required": [
                  "config",
                  "name",
                  "project",
                  "type"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "auth_token": [
              "org:admin",
              "org:read",
              "org:write"
            ]
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alertRule": {},
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "config": {},
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "project": {
                      "type": "object",
                      "properties": {
                        "stats": {},
                        "transactionStats": {},
                        "sessionStats": {},
                        "id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "platform": {
                          "type": "string",
                          "nullable": true
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "isBookmarked": {
                          "type": "boolean"
                        },
                        "isMember": {
                          "type": "boolean"
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "firstEvent": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "firstTransactionEvent": {
                          "type": "boolean"
                        },
                        "access": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "hasAccess": {
                          "type": "boolean"
                        },
                        "hasMinifiedStackTrace": {
                          "type": "boolean"
                        },
                        "hasMonitors": {
                          "type": "boolean"
                        },
                        "hasProfiles": {
                          "type": "boolean"
                        },
                        "hasReplays": {
                          "type": "boolean"
                        },
                        "hasSessions": {
                          "type": "boolean"
                        },
                        "isInternal": {
                          "type": "boolean"
                        },
                        "isPublic": {
                          "type": "boolean"
                        },
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "avatarType",
                            "avatarUuid"
                          ]
                        },
                        "color": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "access",
                        "avatar",
                        "color",
                        "dateCreated",
                        "features",
                        "firstEvent",
                        "firstTransactionEvent",
                        "hasAccess",
                        "hasMinifiedStackTrace",
                        "hasMonitors",
                        "hasProfiles",
                        "hasReplays",
                        "hasSessions",
                        "id",
                        "isBookmarked",
                        "isInternal",
                        "isMember",
                        "isPublic",
                        "name",
                        "platform",
                        "slug",
                        "status"
                      ]
                    },
                    "environments": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCheckIn": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "nextCheckIn": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "dateCreated",
                        "lastCheckIn",
                        "name",
                        "nextCheckIn",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "config",
                    "dateCreated",
                    "environments",
                    "id",
                    "name",
                    "project",
                    "slug",
                    "status",
                    "type"
                  ]
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/monitors/{monitor_slug}/": {
      "get": {
        "operationId": "Retrieve a Monitor",
        "description": "Retrieves details for a monitor.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "monitor_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the monitor.",
            "required": true
          },
          {
            "in": "query",
            "name": "environment",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The name of environments to filter by."
          }
        ],
        "tags": [
          "Crons"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alertRule": {},
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "config": {},
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "project": {
                      "type": "object",
                      "properties": {
                        "stats": {},
                        "transactionStats": {},
                        "sessionStats": {},
                        "id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "platform": {
                          "type": "string",
                          "nullable": true
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "isBookmarked": {
                          "type": "boolean"
                        },
                        "isMember": {
                          "type": "boolean"
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "firstEvent": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "firstTransactionEvent": {
                          "type": "boolean"
                        },
                        "access": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "hasAccess": {
                          "type": "boolean"
                        },
                        "hasMinifiedStackTrace": {
                          "type": "boolean"
                        },
                        "hasMonitors": {
                          "type": "boolean"
                        },
                        "hasProfiles": {
                          "type": "boolean"
                        },
                        "hasReplays": {
                          "type": "boolean"
                        },
                        "hasSessions": {
                          "type": "boolean"
                        },
                        "isInternal": {
                          "type": "boolean"
                        },
                        "isPublic": {
                          "type": "boolean"
                        },
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "avatarType",
                            "avatarUuid"
                          ]
                        },
                        "color": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "access",
                        "avatar",
                        "color",
                        "dateCreated",
                        "features",
                        "firstEvent",
                        "firstTransactionEvent",
                        "hasAccess",
                        "hasMinifiedStackTrace",
                        "hasMonitors",
                        "hasProfiles",
                        "hasReplays",
                        "hasSessions",
                        "id",
                        "isBookmarked",
                        "isInternal",
                        "isMember",
                        "isPublic",
                        "name",
                        "platform",
                        "slug",
                        "status"
                      ]
                    },
                    "environments": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCheckIn": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "nextCheckIn": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "dateCreated",
                        "lastCheckIn",
                        "name",
                        "nextCheckIn",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "config",
                    "dateCreated",
                    "environments",
                    "id",
                    "name",
                    "project",
                    "slug",
                    "status",
                    "type"
                  ]
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "operationId": "Update a Monitor",
        "description": "Update a monitor.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "monitor_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the monitor.",
            "required": true
          }
        ],
        "tags": [
          "Crons"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Allows parameters to be defined in snake case, but passed as camel case.\n\nErrors are output in camel case.",
                "properties": {
                  "project": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 128
                  },
                  "slug": {
                    "type": "string",
                    "maxLength": 50,
                    "pattern": "^[a-z0-9_\\-]+$"
                  },
                  "status": {
                    "enum": [
                      "active",
                      "disabled"
                    ],
                    "type": "string",
                    "description": "* `active` - active\n* `disabled` - disabled",
                    "default": "active"
                  },
                  "type": {
                    "enum": [
                      "cron_job"
                    ],
                    "type": "string",
                    "description": "* `cron_job` - cron_job"
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "schedule_type": {
                        "enum": [
                          "crontab",
                          "interval"
                        ],
                        "type": "string",
                        "description": "Currently supports \"crontab\" or \"interval\"\n\n* `crontab` - crontab\n* `interval` - interval"
                      },
                      "schedule": {
                        "description": "Varies depending on the schedule_type. Is either a crontab string, or a 2 element tuple for intervals (e.g. [1, 'day'])"
                      },
                      "checkin_margin": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "How long (in minutes) after the expected checkin time will we wait until we consider the checkin to have been missed."
                      },
                      "max_runtime": {
                        "type": "integer",
                        "maximum": 40320,
                        "minimum": 1,
                        "nullable": true,
                        "description": "How long (in minutes) is the checkin allowed to run for in CheckInStatus.IN_PROGRESS before it is considered failed."
                      },
                      "timezone": {
                        "enum": [
                          "Africa/Abidjan",
                          "Africa/Accra",
                          "Africa/Addis_Ababa",
                          "Africa/Algiers",
                          "Africa/Asmara",
                          "Africa/Asmera",
                          "Africa/Bamako",
                          "Africa/Bangui",
                          "Africa/Banjul",
                          "Africa/Bissau",
                          "Africa/Blantyre",
                          "Africa/Brazzaville",
                          "Africa/Bujumbura",
                          "Africa/Cairo",
                          "Africa/Casablanca",
                          "Africa/Ceuta",
                          "Africa/Conakry",
                          "Africa/Dakar",
                          "Africa/Dar_es_Salaam",
                          "Africa/Djibouti",
                          "Africa/Douala",
                          "Africa/El_Aaiun",
                          "Africa/Freetown",
                          "Africa/Gaborone",
                          "Africa/Harare",
                          "Africa/Johannesburg",
                          "Africa/Juba",
                          "Africa/Kampala",
                          "Africa/Khartoum",
                          "Africa/Kigali",
                          "Africa/Kinshasa",
                          "Africa/Lagos",
                          "Africa/Libreville",
                          "Africa/Lome",
                          "Africa/Luanda",
                          "Africa/Lubumbashi",
                          "Africa/Lusaka",
                          "Africa/Malabo",
                          "Africa/Maputo",
                          "Africa/Maseru",
                          "Africa/Mbabane",
                          "Africa/Mogadishu",
                          "Africa/Monrovia",
                          "Africa/Nairobi",
                          "Africa/Ndjamena",
                          "Africa/Niamey",
                          "Africa/Nouakchott",
                          "Africa/Ouagadougou",
                          "Africa/Porto-Novo",
                          "Africa/Sao_Tome",
                          "Africa/Timbuktu",
                          "Africa/Tripoli",
                          "Africa/Tunis",
                          "Africa/Windhoek",
                          "America/Adak",
                          "America/Anchorage",
                          "America/Anguilla",
                          "America/Antigua",
                          "America/Araguaina",
                          "America/Argentina/Buenos_Aires",
                          "America/Argentina/Catamarca",
                          "America/Argentina/ComodRivadavia",
                          "America/Argentina/Cordoba",
                          "America/Argentina/Jujuy",
                          "America/Argentina/La_Rioja",
                          "America/Argentina/Mendoza",
                          "America/Argentina/Rio_Gallegos",
                          "America/Argentina/Salta",
                          "America/Argentina/San_Juan",
                          "America/Argentina/San_Luis",
                          "America/Argentina/Tucuman",
                          "America/Argentina/Ushuaia",
                          "America/Aruba",
                          "America/Asuncion",
                          "America/Atikokan",
                          "America/Atka",
                          "America/Bahia",
                          "America/Bahia_Banderas",
                          "America/Barbados",
                          "America/Belem",
                          "America/Belize",
                          "America/Blanc-Sablon",
                          "America/Boa_Vista",
                          "America/Bogota",
                          "America/Boise",
                          "America/Buenos_Aires",
                          "America/Cambridge_Bay",
                          "America/Campo_Grande",
                          "America/Cancun",
                          "America/Caracas",
                          "America/Catamarca",
                          "America/Cayenne",
                          "America/Cayman",
                          "America/Chicago",
                          "America/Chihuahua",
                          "America/Coral_Harbour",
                          "America/Cordoba",
                          "America/Costa_Rica",
                          "America/Creston",
                          "America/Cuiaba",
                          "America/Curacao",
                          "America/Danmarkshavn",
                          "America/Dawson",
                          "America/Dawson_Creek",
                          "America/Denver",
                          "America/Detroit",
                          "America/Dominica",
                          "America/Edmonton",
                          "America/Eirunepe",
                          "America/El_Salvador",
                          "America/Ensenada",
                          "America/Fort_Nelson",
                          "America/Fort_Wayne",
                          "America/Fortaleza",
                          "America/Glace_Bay",
                          "America/Godthab",
                          "America/Goose_Bay",
                          "America/Grand_Turk",
                          "America/Grenada",
                          "America/Guadeloupe",
                          "America/Guatemala",
                          "America/Guayaquil",
                          "America/Guyana",
                          "America/Halifax",
                          "America/Havana",
                          "America/Hermosillo",
                          "America/Indiana/Indianapolis",
                          "America/Indiana/Knox",
                          "America/Indiana/Marengo",
                          "America/Indiana/Petersburg",
                          "America/Indiana/Tell_City",
                          "America/Indiana/Vevay",
                          "America/Indiana/Vincennes",
                          "America/Indiana/Winamac",
                          "America/Indianapolis",
                          "America/Inuvik",
                          "America/Iqaluit",
                          "America/Jamaica",
                          "America/Jujuy",
                          "America/Juneau",
                          "America/Kentucky/Louisville",
                          "America/Kentucky/Monticello",
                          "America/Knox_IN",
                          "America/Kralendijk",
                          "America/La_Paz",
                          "America/Lima",
                          "America/Los_Angeles",
                          "America/Louisville",
                          "America/Lower_Princes",
                          "America/Maceio",
                          "America/Managua",
                          "America/Manaus",
                          "America/Marigot",
                          "America/Martinique",
                          "America/Matamoros",
                          "America/Mazatlan",
                          "America/Mendoza",
                          "America/Menominee",
                          "America/Merida",
                          "America/Metlakatla",
                          "America/Mexico_City",
                          "America/Miquelon",
                          "America/Moncton",
                          "America/Monterrey",
                          "America/Montevideo",
                          "America/Montreal",
                          "America/Montserrat",
                          "America/Nassau",
                          "America/New_York",
                          "America/Nipigon",
                          "America/Nome",
                          "America/Noronha",
                          "America/North_Dakota/Beulah",
                          "America/North_Dakota/Center",
                          "America/North_Dakota/New_Salem",
                          "America/Ojinaga",
                          "America/Panama",
                          "America/Pangnirtung",
                          "America/Paramaribo",
                          "America/Phoenix",
                          "America/Port-au-Prince",
                          "America/Port_of_Spain",
                          "America/Porto_Acre",
                          "America/Porto_Velho",
                          "America/Puerto_Rico",
                          "America/Punta_Arenas",
                          "America/Rainy_River",
                          "America/Rankin_Inlet",
                          "America/Recife",
                          "America/Regina",
                          "America/Resolute",
                          "America/Rio_Branco",
                          "America/Rosario",
                          "America/Santa_Isabel",
                          "America/Santarem",
                          "America/Santiago",
                          "America/Santo_Domingo",
                          "America/Sao_Paulo",
                          "America/Scoresbysund",
                          "America/Shiprock",
                          "America/Sitka",
                          "America/St_Barthelemy",
                          "America/St_Johns",
                          "America/St_Kitts",
                          "America/St_Lucia",
                          "America/St_Thomas",
                          "America/St_Vincent",
                          "America/Swift_Current",
                          "America/Tegucigalpa",
                          "America/Thule",
                          "America/Thunder_Bay",
                          "America/Tijuana",
                          "America/Toronto",
                          "America/Tortola",
                          "America/Vancouver",
                          "America/Virgin",
                          "America/Whitehorse",
                          "America/Winnipeg",
                          "America/Yakutat",
                          "America/Yellowknife",
                          "Antarctica/Casey",
                          "Antarctica/Davis",
                          "Antarctica/DumontDUrville",
                          "Antarctica/Macquarie",
                          "Antarctica/Mawson",
                          "Antarctica/McMurdo",
                          "Antarctica/Palmer",
                          "Antarctica/Rothera",
                          "Antarctica/South_Pole",
                          "Antarctica/Syowa",
                          "Antarctica/Troll",
                          "Antarctica/Vostok",
                          "Arctic/Longyearbyen",
                          "Asia/Aden",
                          "Asia/Almaty",
                          "Asia/Amman",
                          "Asia/Anadyr",
                          "Asia/Aqtau",
                          "Asia/Aqtobe",
                          "Asia/Ashgabat",
                          "Asia/Ashkhabad",
                          "Asia/Atyrau",
                          "Asia/Baghdad",
                          "Asia/Bahrain",
                          "Asia/Baku",
                          "Asia/Bangkok",
                          "Asia/Barnaul",
                          "Asia/Beirut",
                          "Asia/Bishkek",
                          "Asia/Brunei",
                          "Asia/Calcutta",
                          "Asia/Chita",
                          "Asia/Choibalsan",
                          "Asia/Chongqing",
                          "Asia/Chungking",
                          "Asia/Colombo",
                          "Asia/Dacca",
                          "Asia/Damascus",
                          "Asia/Dhaka",
                          "Asia/Dili",
                          "Asia/Dubai",
                          "Asia/Dushanbe",
                          "Asia/Famagusta",
                          "Asia/Gaza",
                          "Asia/Harbin",
                          "Asia/Hebron",
                          "Asia/Ho_Chi_Minh",
                          "Asia/Hong_Kong",
                          "Asia/Hovd",
                          "Asia/Irkutsk",
                          "Asia/Istanbul",
                          "Asia/Jakarta",
                          "Asia/Jayapura",
                          "Asia/Jerusalem",
                          "Asia/Kabul",
                          "Asia/Kamchatka",
                          "Asia/Karachi",
                          "Asia/Kashgar",
                          "Asia/Kathmandu",
                          "Asia/Katmandu",
                          "Asia/Khandyga",
                          "Asia/Kolkata",
                          "Asia/Krasnoyarsk",
                          "Asia/Kuala_Lumpur",
                          "Asia/Kuching",
                          "Asia/Kuwait",
                          "Asia/Macao",
                          "Asia/Macau",
                          "Asia/Magadan",
                          "Asia/Makassar",
                          "Asia/Manila",
                          "Asia/Muscat",
                          "Asia/Nicosia",
                          "Asia/Novokuznetsk",
                          "Asia/Novosibirsk",
                          "Asia/Omsk",
                          "Asia/Oral",
                          "Asia/Phnom_Penh",
                          "Asia/Pontianak",
                          "Asia/Pyongyang",
                          "Asia/Qatar",
                          "Asia/Qostanay",
                          "Asia/Qyzylorda",
                          "Asia/Rangoon",
                          "Asia/Riyadh",
                          "Asia/Saigon",
                          "Asia/Sakhalin",
                          "Asia/Samarkand",
                          "Asia/Seoul",
                          "Asia/Shanghai",
                          "Asia/Singapore",
                          "Asia/Srednekolymsk",
                          "Asia/Taipei",
                          "Asia/Tashkent",
                          "Asia/Tbilisi",
                          "Asia/Tehran",
                          "Asia/Tel_Aviv",
                          "Asia/Thimbu",
                          "Asia/Thimphu",
                          "Asia/Tokyo",
                          "Asia/Tomsk",
                          "Asia/Ujung_Pandang",
                          "Asia/Ulaanbaatar",
                          "Asia/Ulan_Bator",
                          "Asia/Urumqi",
                          "Asia/Ust-Nera",
                          "Asia/Vientiane",
                          "Asia/Vladivostok",
                          "Asia/Yakutsk",
                          "Asia/Yangon",
                          "Asia/Yekaterinburg",
                          "Asia/Yerevan",
                          "Atlantic/Azores",
                          "Atlantic/Bermuda",
                          "Atlantic/Canary",
                          "Atlantic/Cape_Verde",
                          "Atlantic/Faeroe",
                          "Atlantic/Faroe",
                          "Atlantic/Jan_Mayen",
                          "Atlantic/Madeira",
                          "Atlantic/Reykjavik",
                          "Atlantic/South_Georgia",
                          "Atlantic/St_Helena",
                          "Atlantic/Stanley",
                          "Australia/ACT",
                          "Australia/Adelaide",
                          "Australia/Brisbane",
                          "Australia/Broken_Hill",
                          "Australia/Canberra",
                          "Australia/Currie",
                          "Australia/Darwin",
                          "Australia/Eucla",
                          "Australia/Hobart",
                          "Australia/LHI",
                          "Australia/Lindeman",
                          "Australia/Lord_Howe",
                          "Australia/Melbourne",
                          "Australia/NSW",
                          "Australia/North",
                          "Australia/Perth",
                          "Australia/Queensland",
                          "Australia/South",
                          "Australia/Sydney",
                          "Australia/Tasmania",
                          "Australia/Victoria",
                          "Australia/West",
                          "Australia/Yancowinna",
                          "Brazil/Acre",
                          "Brazil/DeNoronha",
                          "Brazil/East",
                          "Brazil/West",
                          "CET",
                          "CST6CDT",
                          "Canada/Atlantic",
                          "Canada/Central",
                          "Canada/Eastern",
                          "Canada/Mountain",
                          "Canada/Newfoundland",
                          "Canada/Pacific",
                          "Canada/Saskatchewan",
                          "Canada/Yukon",
                          "Chile/Continental",
                          "Chile/EasterIsland",
                          "Cuba",
                          "EET",
                          "EST",
                          "EST5EDT",
                          "Egypt",
                          "Eire",
                          "Etc/GMT",
                          "Etc/GMT+0",
                          "Etc/GMT+1",
                          "Etc/GMT+10",
                          "Etc/GMT+11",
                          "Etc/GMT+12",
                          "Etc/GMT+2",
                          "Etc/GMT+3",
                          "Etc/GMT+4",
                          "Etc/GMT+5",
                          "Etc/GMT+6",
                          "Etc/GMT+7",
                          "Etc/GMT+8",
                          "Etc/GMT+9",
                          "Etc/GMT-0",
                          "Etc/GMT-1",
                          "Etc/GMT-10",
                          "Etc/GMT-11",
                          "Etc/GMT-12",
                          "Etc/GMT-13",
                          "Etc/GMT-14",
                          "Etc/GMT-2",
                          "Etc/GMT-3",
                          "Etc/GMT-4",
                          "Etc/GMT-5",
                          "Etc/GMT-6",
                          "Etc/GMT-7",
                          "Etc/GMT-8",
                          "Etc/GMT-9",
                          "Etc/GMT0",
                          "Etc/Greenwich",
                          "Etc/UCT",
                          "Etc/UTC",
                          "Etc/Universal",
                          "Etc/Zulu",
                          "Europe/Amsterdam",
                          "Europe/Andorra",
                          "Europe/Astrakhan",
                          "Europe/Athens",
                          "Europe/Belfast",
                          "Europe/Belgrade",
                          "Europe/Berlin",
                          "Europe/Bratislava",
                          "Europe/Brussels",
                          "Europe/Bucharest",
                          "Europe/Budapest",
                          "Europe/Busingen",
                          "Europe/Chisinau",
                          "Europe/Copenhagen",
                          "Europe/Dublin",
                          "Europe/Gibraltar",
                          "Europe/Guernsey",
                          "Europe/Helsinki",
                          "Europe/Isle_of_Man",
                          "Europe/Istanbul",
                          "Europe/Jersey",
                          "Europe/Kaliningrad",
                          "Europe/Kiev",
                          "Europe/Kirov",
                          "Europe/Lisbon",
                          "Europe/Ljubljana",
                          "Europe/London",
                          "Europe/Luxembourg",
                          "Europe/Madrid",
                          "Europe/Malta",
                          "Europe/Mariehamn",
                          "Europe/Minsk",
                          "Europe/Monaco",
                          "Europe/Moscow",
                          "Europe/Nicosia",
                          "Europe/Oslo",
                          "Europe/Paris",
                          "Europe/Podgorica",
                          "Europe/Prague",
                          "Europe/Riga",
                          "Europe/Rome",
                          "Europe/Samara",
                          "Europe/San_Marino",
                          "Europe/Sarajevo",
                          "Europe/Saratov",
                          "Europe/Simferopol",
                          "Europe/Skopje",
                          "Europe/Sofia",
                          "Europe/Stockholm",
                          "Europe/Tallinn",
                          "Europe/Tirane",
                          "Europe/Tiraspol",
                          "Europe/Ulyanovsk",
                          "Europe/Uzhgorod",
                          "Europe/Vaduz",
                          "Europe/Vatican",
                          "Europe/Vienna",
                          "Europe/Vilnius",
                          "Europe/Volgograd",
                          "Europe/Warsaw",
                          "Europe/Zagreb",
                          "Europe/Zaporozhye",
                          "Europe/Zurich",
                          "GB",
                          "GB-Eire",
                          "GMT",
                          "GMT+0",
                          "GMT-0",
                          "GMT0",
                          "Greenwich",
                          "HST",
                          "Hongkong",
                          "Iceland",
                          "Indian/Antananarivo",
                          "Indian/Chagos",
                          "Indian/Christmas",
                          "Indian/Cocos",
                          "Indian/Comoro",
                          "Indian/Kerguelen",
                          "Indian/Mahe",
                          "Indian/Maldives",
                          "Indian/Mauritius",
                          "Indian/Mayotte",
                          "Indian/Reunion",
                          "Iran",
                          "Israel",
                          "Jamaica",
                          "Japan",
                          "Kwajalein",
                          "Libya",
                          "MET",
                          "MST",
                          "MST7MDT",
                          "Mexico/BajaNorte",
                          "Mexico/BajaSur",
                          "Mexico/General",
                          "NZ",
                          "NZ-CHAT",
                          "Navajo",
                          "PRC",
                          "PST8PDT",
                          "Pacific/Apia",
                          "Pacific/Auckland",
                          "Pacific/Bougainville",
                          "Pacific/Chatham",
                          "Pacific/Chuuk",
                          "Pacific/Easter",
                          "Pacific/Efate",
                          "Pacific/Enderbury",
                          "Pacific/Fakaofo",
                          "Pacific/Fiji",
                          "Pacific/Funafuti",
                          "Pacific/Galapagos",
                          "Pacific/Gambier",
                          "Pacific/Guadalcanal",
                          "Pacific/Guam",
                          "Pacific/Honolulu",
                          "Pacific/Johnston",
                          "Pacific/Kiritimati",
                          "Pacific/Kosrae",
                          "Pacific/Kwajalein",
                          "Pacific/Majuro",
                          "Pacific/Marquesas",
                          "Pacific/Midway",
                          "Pacific/Nauru",
                          "Pacific/Niue",
                          "Pacific/Norfolk",
                          "Pacific/Noumea",
                          "Pacific/Pago_Pago",
                          "Pacific/Palau",
                          "Pacific/Pitcairn",
                          "Pacific/Pohnpei",
                          "Pacific/Ponape",
                          "Pacific/Port_Moresby",
                          "Pacific/Rarotonga",
                          "Pacific/Saipan",
                          "Pacific/Samoa",
                          "Pacific/Tahiti",
                          "Pacific/Tarawa",
                          "Pacific/Tongatapu",
                          "Pacific/Truk",
                          "Pacific/Wake",
                          "Pacific/Wallis",
                          "Pacific/Yap",
                          "Poland",
                          "Portugal",
                          "ROC",
                          "ROK",
                          "Singapore",
                          "Turkey",
                          "UCT",
                          "US/Alaska",
                          "US/Aleutian",
                          "US/Arizona",
                          "US/Central",
                          "US/East-Indiana",
                          "US/Eastern",
                          "US/Hawaii",
                          "US/Indiana-Starke",
                          "US/Michigan",
                          "US/Mountain",
                          "US/Pacific",
                          "US/Samoa",
                          "UTC",
                          "Universal",
                          "W-SU",
                          "WET",
                          "Zulu"
                        ],
                        "type": "string",
                        "description": "tz database style timezone string\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"
                      },
                      "failure_issue_threshold": {
                        "type": "integer",
                        "minimum": 1,
                        "nullable": true,
                        "description": "How many consecutive missed or failed check-ins in a row before creating a new issue."
                      },
                      "recovery_threshold": {
                        "type": "integer",
                        "minimum": 1,
                        "nullable": true,
                        "description": "How many successful check-ins in a row before resolving an issue."
                      }
                    },
                    "required": [
                      "schedule"
                    ]
                  },
                  "alert_rule": {
                    "type": "object",
                    "properties": {
                      "environment": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the environment",
                        "maxLength": 64
                      },
                      "targets": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "target_identifier": {
                              "type": "integer",
                              "description": "ID of target object"
                            },
                            "target_type": {
                              "type": "string",
                              "description": "One of [Member, Team]"
                            }
                          },
                          "required": [
                            "target_identifier",
                            "target_type"
                          ]
                        },
                        "description": "Array of dictionaries with information of the user or team to be notified"
                      }
                    },
                    "required": [
                      "targets"
                    ]
                  }
                },
                "required": [
                  "config",
                  "name",
                  "project",
                  "type"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alertRule": {},
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "config": {},
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "project": {
                      "type": "object",
                      "properties": {
                        "stats": {},
                        "transactionStats": {},
                        "sessionStats": {},
                        "id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "platform": {
                          "type": "string",
                          "nullable": true
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "isBookmarked": {
                          "type": "boolean"
                        },
                        "isMember": {
                          "type": "boolean"
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "firstEvent": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "firstTransactionEvent": {
                          "type": "boolean"
                        },
                        "access": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "hasAccess": {
                          "type": "boolean"
                        },
                        "hasMinifiedStackTrace": {
                          "type": "boolean"
                        },
                        "hasMonitors": {
                          "type": "boolean"
                        },
                        "hasProfiles": {
                          "type": "boolean"
                        },
                        "hasReplays": {
                          "type": "boolean"
                        },
                        "hasSessions": {
                          "type": "boolean"
                        },
                        "isInternal": {
                          "type": "boolean"
                        },
                        "isPublic": {
                          "type": "boolean"
                        },
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "avatarType",
                            "avatarUuid"
                          ]
                        },
                        "color": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "access",
                        "avatar",
                        "color",
                        "dateCreated",
                        "features",
                        "firstEvent",
                        "firstTransactionEvent",
                        "hasAccess",
                        "hasMinifiedStackTrace",
                        "hasMonitors",
                        "hasProfiles",
                        "hasReplays",
                        "hasSessions",
                        "id",
                        "isBookmarked",
                        "isInternal",
                        "isMember",
                        "isPublic",
                        "name",
                        "platform",
                        "slug",
                        "status"
                      ]
                    },
                    "environments": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastCheckIn": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "nextCheckIn": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "dateCreated",
                        "lastCheckIn",
                        "name",
                        "nextCheckIn",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "config",
                    "dateCreated",
                    "environments",
                    "id",
                    "name",
                    "project",
                    "slug",
                    "status",
                    "type"
                  ]
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "operationId": "Delete a Monitor or Monitor Environments",
        "description": "Delete a monitor or monitor environments.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "monitor_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the monitor.",
            "required": true
          },
          {
            "in": "query",
            "name": "environment",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "The name of environments to filter by."
          }
        ],
        "tags": [
          "Crons"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/monitors/{monitor_slug}/checkins/": {
      "get": {
        "operationId": "Retrieve Check-Ins for a Monitor",
        "description": "Retrieve a list of check-ins for a monitor",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "monitor_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the monitor.",
            "required": true
          },
          {
            "in": "path",
            "name": "checkin_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The id of the check-in.",
            "required": true
          }
        ],
        "tags": [
          "Crons"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "string"
                      },
                      "environment": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "duration": {
                        "type": "integer"
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "attachmentId": {
                        "type": "string"
                      },
                      "expectedTime": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "monitorConfig": {}
                    },
                    "required": [
                      "attachmentId",
                      "dateCreated",
                      "duration",
                      "environment",
                      "expectedTime",
                      "id",
                      "monitorConfig",
                      "status"
                    ]
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "operationId": "Create a New Check-In",
        "description": "Creates a new check-in for a monitor.\n\nIf `status` is not present, it will be assumed that the check-in is starting, and be marked as `in_progress`.\n\nTo achieve a ping-like behavior, you can simply define `status` and optionally `duration` and\nthis check-in will be automatically marked as finished.\n\nNote: If a DSN is utilized for authentication, the response will be limited in details.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "monitor_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the monitor.",
            "required": true
          }
        ],
        "tags": [
          "Crons"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "enum": [
                      "ok",
                      "error",
                      "in_progress"
                    ],
                    "type": "string",
                    "description": "* `ok` - 1\n* `error` - 2\n* `in_progress` - 3"
                  },
                  "duration": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "nullable": true
                  },
                  "environment": {
                    "type": "string",
                    "nullable": true
                  },
                  "monitor_config": {
                    "type": "object",
                    "properties": {
                      "schedule_type": {
                        "enum": [
                          "crontab",
                          "interval"
                        ],
                        "type": "string",
                        "description": "Currently supports \"crontab\" or \"interval\"\n\n* `crontab` - crontab\n* `interval` - interval"
                      },
                      "schedule": {
                        "description": "Varies depending on the schedule_type. Is either a crontab string, or a 2 element tuple for intervals (e.g. [1, 'day'])"
                      },
                      "checkin_margin": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "How long (in minutes) after the expected checkin time will we wait until we consider the checkin to have been missed."
                      },
                      "max_runtime": {
                        "type": "integer",
                        "maximum": 40320,
                        "minimum": 1,
                        "nullable": true,
                        "description": "How long (in minutes) is the checkin allowed to run for in CheckInStatus.IN_PROGRESS before it is considered failed."
                      },
                      "timezone": {
                        "enum": [
                          "Africa/Abidjan",
                          "Africa/Accra",
                          "Africa/Addis_Ababa",
                          "Africa/Algiers",
                          "Africa/Asmara",
                          "Africa/Asmera",
                          "Africa/Bamako",
                          "Africa/Bangui",
                          "Africa/Banjul",
                          "Africa/Bissau",
                          "Africa/Blantyre",
                          "Africa/Brazzaville",
                          "Africa/Bujumbura",
                          "Africa/Cairo",
                          "Africa/Casablanca",
                          "Africa/Ceuta",
                          "Africa/Conakry",
                          "Africa/Dakar",
                          "Africa/Dar_es_Salaam",
                          "Africa/Djibouti",
                          "Africa/Douala",
                          "Africa/El_Aaiun",
                          "Africa/Freetown",
                          "Africa/Gaborone",
                          "Africa/Harare",
                          "Africa/Johannesburg",
                          "Africa/Juba",
                          "Africa/Kampala",
                          "Africa/Khartoum",
                          "Africa/Kigali",
                          "Africa/Kinshasa",
                          "Africa/Lagos",
                          "Africa/Libreville",
                          "Africa/Lome",
                          "Africa/Luanda",
                          "Africa/Lubumbashi",
                          "Africa/Lusaka",
                          "Africa/Malabo",
                          "Africa/Maputo",
                          "Africa/Maseru",
                          "Africa/Mbabane",
                          "Africa/Mogadishu",
                          "Africa/Monrovia",
                          "Africa/Nairobi",
                          "Africa/Ndjamena",
                          "Africa/Niamey",
                          "Africa/Nouakchott",
                          "Africa/Ouagadougou",
                          "Africa/Porto-Novo",
                          "Africa/Sao_Tome",
                          "Africa/Timbuktu",
                          "Africa/Tripoli",
                          "Africa/Tunis",
                          "Africa/Windhoek",
                          "America/Adak",
                          "America/Anchorage",
                          "America/Anguilla",
                          "America/Antigua",
                          "America/Araguaina",
                          "America/Argentina/Buenos_Aires",
                          "America/Argentina/Catamarca",
                          "America/Argentina/ComodRivadavia",
                          "America/Argentina/Cordoba",
                          "America/Argentina/Jujuy",
                          "America/Argentina/La_Rioja",
                          "America/Argentina/Mendoza",
                          "America/Argentina/Rio_Gallegos",
                          "America/Argentina/Salta",
                          "America/Argentina/San_Juan",
                          "America/Argentina/San_Luis",
                          "America/Argentina/Tucuman",
                          "America/Argentina/Ushuaia",
                          "America/Aruba",
                          "America/Asuncion",
                          "America/Atikokan",
                          "America/Atka",
                          "America/Bahia",
                          "America/Bahia_Banderas",
                          "America/Barbados",
                          "America/Belem",
                          "America/Belize",
                          "America/Blanc-Sablon",
                          "America/Boa_Vista",
                          "America/Bogota",
                          "America/Boise",
                          "America/Buenos_Aires",
                          "America/Cambridge_Bay",
                          "America/Campo_Grande",
                          "America/Cancun",
                          "America/Caracas",
                          "America/Catamarca",
                          "America/Cayenne",
                          "America/Cayman",
                          "America/Chicago",
                          "America/Chihuahua",
                          "America/Coral_Harbour",
                          "America/Cordoba",
                          "America/Costa_Rica",
                          "America/Creston",
                          "America/Cuiaba",
                          "America/Curacao",
                          "America/Danmarkshavn",
                          "America/Dawson",
                          "America/Dawson_Creek",
                          "America/Denver",
                          "America/Detroit",
                          "America/Dominica",
                          "America/Edmonton",
                          "America/Eirunepe",
                          "America/El_Salvador",
                          "America/Ensenada",
                          "America/Fort_Nelson",
                          "America/Fort_Wayne",
                          "America/Fortaleza",
                          "America/Glace_Bay",
                          "America/Godthab",
                          "America/Goose_Bay",
                          "America/Grand_Turk",
                          "America/Grenada",
                          "America/Guadeloupe",
                          "America/Guatemala",
                          "America/Guayaquil",
                          "America/Guyana",
                          "America/Halifax",
                          "America/Havana",
                          "America/Hermosillo",
                          "America/Indiana/Indianapolis",
                          "America/Indiana/Knox",
                          "America/Indiana/Marengo",
                          "America/Indiana/Petersburg",
                          "America/Indiana/Tell_City",
                          "America/Indiana/Vevay",
                          "America/Indiana/Vincennes",
                          "America/Indiana/Winamac",
                          "America/Indianapolis",
                          "America/Inuvik",
                          "America/Iqaluit",
                          "America/Jamaica",
                          "America/Jujuy",
                          "America/Juneau",
                          "America/Kentucky/Louisville",
                          "America/Kentucky/Monticello",
                          "America/Knox_IN",
                          "America/Kralendijk",
                          "America/La_Paz",
                          "America/Lima",
                          "America/Los_Angeles",
                          "America/Louisville",
                          "America/Lower_Princes",
                          "America/Maceio",
                          "America/Managua",
                          "America/Manaus",
                          "America/Marigot",
                          "America/Martinique",
                          "America/Matamoros",
                          "America/Mazatlan",
                          "America/Mendoza",
                          "America/Menominee",
                          "America/Merida",
                          "America/Metlakatla",
                          "America/Mexico_City",
                          "America/Miquelon",
                          "America/Moncton",
                          "America/Monterrey",
                          "America/Montevideo",
                          "America/Montreal",
                          "America/Montserrat",
                          "America/Nassau",
                          "America/New_York",
                          "America/Nipigon",
                          "America/Nome",
                          "America/Noronha",
                          "America/North_Dakota/Beulah",
                          "America/North_Dakota/Center",
                          "America/North_Dakota/New_Salem",
                          "America/Ojinaga",
                          "America/Panama",
                          "America/Pangnirtung",
                          "America/Paramaribo",
                          "America/Phoenix",
                          "America/Port-au-Prince",
                          "America/Port_of_Spain",
                          "America/Porto_Acre",
                          "America/Porto_Velho",
                          "America/Puerto_Rico",
                          "America/Punta_Arenas",
                          "America/Rainy_River",
                          "America/Rankin_Inlet",
                          "America/Recife",
                          "America/Regina",
                          "America/Resolute",
                          "America/Rio_Branco",
                          "America/Rosario",
                          "America/Santa_Isabel",
                          "America/Santarem",
                          "America/Santiago",
                          "America/Santo_Domingo",
                          "America/Sao_Paulo",
                          "America/Scoresbysund",
                          "America/Shiprock",
                          "America/Sitka",
                          "America/St_Barthelemy",
                          "America/St_Johns",
                          "America/St_Kitts",
                          "America/St_Lucia",
                          "America/St_Thomas",
                          "America/St_Vincent",
                          "America/Swift_Current",
                          "America/Tegucigalpa",
                          "America/Thule",
                          "America/Thunder_Bay",
                          "America/Tijuana",
                          "America/Toronto",
                          "America/Tortola",
                          "America/Vancouver",
                          "America/Virgin",
                          "America/Whitehorse",
                          "America/Winnipeg",
                          "America/Yakutat",
                          "America/Yellowknife",
                          "Antarctica/Casey",
                          "Antarctica/Davis",
                          "Antarctica/DumontDUrville",
                          "Antarctica/Macquarie",
                          "Antarctica/Mawson",
                          "Antarctica/McMurdo",
                          "Antarctica/Palmer",
                          "Antarctica/Rothera",
                          "Antarctica/South_Pole",
                          "Antarctica/Syowa",
                          "Antarctica/Troll",
                          "Antarctica/Vostok",
                          "Arctic/Longyearbyen",
                          "Asia/Aden",
                          "Asia/Almaty",
                          "Asia/Amman",
                          "Asia/Anadyr",
                          "Asia/Aqtau",
                          "Asia/Aqtobe",
                          "Asia/Ashgabat",
                          "Asia/Ashkhabad",
                          "Asia/Atyrau",
                          "Asia/Baghdad",
                          "Asia/Bahrain",
                          "Asia/Baku",
                          "Asia/Bangkok",
                          "Asia/Barnaul",
                          "Asia/Beirut",
                          "Asia/Bishkek",
                          "Asia/Brunei",
                          "Asia/Calcutta",
                          "Asia/Chita",
                          "Asia/Choibalsan",
                          "Asia/Chongqing",
                          "Asia/Chungking",
                          "Asia/Colombo",
                          "Asia/Dacca",
                          "Asia/Damascus",
                          "Asia/Dhaka",
                          "Asia/Dili",
                          "Asia/Dubai",
                          "Asia/Dushanbe",
                          "Asia/Famagusta",
                          "Asia/Gaza",
                          "Asia/Harbin",
                          "Asia/Hebron",
                          "Asia/Ho_Chi_Minh",
                          "Asia/Hong_Kong",
                          "Asia/Hovd",
                          "Asia/Irkutsk",
                          "Asia/Istanbul",
                          "Asia/Jakarta",
                          "Asia/Jayapura",
                          "Asia/Jerusalem",
                          "Asia/Kabul",
                          "Asia/Kamchatka",
                          "Asia/Karachi",
                          "Asia/Kashgar",
                          "Asia/Kathmandu",
                          "Asia/Katmandu",
                          "Asia/Khandyga",
                          "Asia/Kolkata",
                          "Asia/Krasnoyarsk",
                          "Asia/Kuala_Lumpur",
                          "Asia/Kuching",
                          "Asia/Kuwait",
                          "Asia/Macao",
                          "Asia/Macau",
                          "Asia/Magadan",
                          "Asia/Makassar",
                          "Asia/Manila",
                          "Asia/Muscat",
                          "Asia/Nicosia",
                          "Asia/Novokuznetsk",
                          "Asia/Novosibirsk",
                          "Asia/Omsk",
                          "Asia/Oral",
                          "Asia/Phnom_Penh",
                          "Asia/Pontianak",
                          "Asia/Pyongyang",
                          "Asia/Qatar",
                          "Asia/Qostanay",
                          "Asia/Qyzylorda",
                          "Asia/Rangoon",
                          "Asia/Riyadh",
                          "Asia/Saigon",
                          "Asia/Sakhalin",
                          "Asia/Samarkand",
                          "Asia/Seoul",
                          "Asia/Shanghai",
                          "Asia/Singapore",
                          "Asia/Srednekolymsk",
                          "Asia/Taipei",
                          "Asia/Tashkent",
                          "Asia/Tbilisi",
                          "Asia/Tehran",
                          "Asia/Tel_Aviv",
                          "Asia/Thimbu",
                          "Asia/Thimphu",
                          "Asia/Tokyo",
                          "Asia/Tomsk",
                          "Asia/Ujung_Pandang",
                          "Asia/Ulaanbaatar",
                          "Asia/Ulan_Bator",
                          "Asia/Urumqi",
                          "Asia/Ust-Nera",
                          "Asia/Vientiane",
                          "Asia/Vladivostok",
                          "Asia/Yakutsk",
                          "Asia/Yangon",
                          "Asia/Yekaterinburg",
                          "Asia/Yerevan",
                          "Atlantic/Azores",
                          "Atlantic/Bermuda",
                          "Atlantic/Canary",
                          "Atlantic/Cape_Verde",
                          "Atlantic/Faeroe",
                          "Atlantic/Faroe",
                          "Atlantic/Jan_Mayen",
                          "Atlantic/Madeira",
                          "Atlantic/Reykjavik",
                          "Atlantic/South_Georgia",
                          "Atlantic/St_Helena",
                          "Atlantic/Stanley",
                          "Australia/ACT",
                          "Australia/Adelaide",
                          "Australia/Brisbane",
                          "Australia/Broken_Hill",
                          "Australia/Canberra",
                          "Australia/Currie",
                          "Australia/Darwin",
                          "Australia/Eucla",
                          "Australia/Hobart",
                          "Australia/LHI",
                          "Australia/Lindeman",
                          "Australia/Lord_Howe",
                          "Australia/Melbourne",
                          "Australia/NSW",
                          "Australia/North",
                          "Australia/Perth",
                          "Australia/Queensland",
                          "Australia/South",
                          "Australia/Sydney",
                          "Australia/Tasmania",
                          "Australia/Victoria",
                          "Australia/West",
                          "Australia/Yancowinna",
                          "Brazil/Acre",
                          "Brazil/DeNoronha",
                          "Brazil/East",
                          "Brazil/West",
                          "CET",
                          "CST6CDT",
                          "Canada/Atlantic",
                          "Canada/Central",
                          "Canada/Eastern",
                          "Canada/Mountain",
                          "Canada/Newfoundland",
                          "Canada/Pacific",
                          "Canada/Saskatchewan",
                          "Canada/Yukon",
                          "Chile/Continental",
                          "Chile/EasterIsland",
                          "Cuba",
                          "EET",
                          "EST",
                          "EST5EDT",
                          "Egypt",
                          "Eire",
                          "Etc/GMT",
                          "Etc/GMT+0",
                          "Etc/GMT+1",
                          "Etc/GMT+10",
                          "Etc/GMT+11",
                          "Etc/GMT+12",
                          "Etc/GMT+2",
                          "Etc/GMT+3",
                          "Etc/GMT+4",
                          "Etc/GMT+5",
                          "Etc/GMT+6",
                          "Etc/GMT+7",
                          "Etc/GMT+8",
                          "Etc/GMT+9",
                          "Etc/GMT-0",
                          "Etc/GMT-1",
                          "Etc/GMT-10",
                          "Etc/GMT-11",
                          "Etc/GMT-12",
                          "Etc/GMT-13",
                          "Etc/GMT-14",
                          "Etc/GMT-2",
                          "Etc/GMT-3",
                          "Etc/GMT-4",
                          "Etc/GMT-5",
                          "Etc/GMT-6",
                          "Etc/GMT-7",
                          "Etc/GMT-8",
                          "Etc/GMT-9",
                          "Etc/GMT0",
                          "Etc/Greenwich",
                          "Etc/UCT",
                          "Etc/UTC",
                          "Etc/Universal",
                          "Etc/Zulu",
                          "Europe/Amsterdam",
                          "Europe/Andorra",
                          "Europe/Astrakhan",
                          "Europe/Athens",
                          "Europe/Belfast",
                          "Europe/Belgrade",
                          "Europe/Berlin",
                          "Europe/Bratislava",
                          "Europe/Brussels",
                          "Europe/Bucharest",
                          "Europe/Budapest",
                          "Europe/Busingen",
                          "Europe/Chisinau",
                          "Europe/Copenhagen",
                          "Europe/Dublin",
                          "Europe/Gibraltar",
                          "Europe/Guernsey",
                          "Europe/Helsinki",
                          "Europe/Isle_of_Man",
                          "Europe/Istanbul",
                          "Europe/Jersey",
                          "Europe/Kaliningrad",
                          "Europe/Kiev",
                          "Europe/Kirov",
                          "Europe/Lisbon",
                          "Europe/Ljubljana",
                          "Europe/London",
                          "Europe/Luxembourg",
                          "Europe/Madrid",
                          "Europe/Malta",
                          "Europe/Mariehamn",
                          "Europe/Minsk",
                          "Europe/Monaco",
                          "Europe/Moscow",
                          "Europe/Nicosia",
                          "Europe/Oslo",
                          "Europe/Paris",
                          "Europe/Podgorica",
                          "Europe/Prague",
                          "Europe/Riga",
                          "Europe/Rome",
                          "Europe/Samara",
                          "Europe/San_Marino",
                          "Europe/Sarajevo",
                          "Europe/Saratov",
                          "Europe/Simferopol",
                          "Europe/Skopje",
                          "Europe/Sofia",
                          "Europe/Stockholm",
                          "Europe/Tallinn",
                          "Europe/Tirane",
                          "Europe/Tiraspol",
                          "Europe/Ulyanovsk",
                          "Europe/Uzhgorod",
                          "Europe/Vaduz",
                          "Europe/Vatican",
                          "Europe/Vienna",
                          "Europe/Vilnius",
                          "Europe/Volgograd",
                          "Europe/Warsaw",
                          "Europe/Zagreb",
                          "Europe/Zaporozhye",
                          "Europe/Zurich",
                          "GB",
                          "GB-Eire",
                          "GMT",
                          "GMT+0",
                          "GMT-0",
                          "GMT0",
                          "Greenwich",
                          "HST",
                          "Hongkong",
                          "Iceland",
                          "Indian/Antananarivo",
                          "Indian/Chagos",
                          "Indian/Christmas",
                          "Indian/Cocos",
                          "Indian/Comoro",
                          "Indian/Kerguelen",
                          "Indian/Mahe",
                          "Indian/Maldives",
                          "Indian/Mauritius",
                          "Indian/Mayotte",
                          "Indian/Reunion",
                          "Iran",
                          "Israel",
                          "Jamaica",
                          "Japan",
                          "Kwajalein",
                          "Libya",
                          "MET",
                          "MST",
                          "MST7MDT",
                          "Mexico/BajaNorte",
                          "Mexico/BajaSur",
                          "Mexico/General",
                          "NZ",
                          "NZ-CHAT",
                          "Navajo",
                          "PRC",
                          "PST8PDT",
                          "Pacific/Apia",
                          "Pacific/Auckland",
                          "Pacific/Bougainville",
                          "Pacific/Chatham",
                          "Pacific/Chuuk",
                          "Pacific/Easter",
                          "Pacific/Efate",
                          "Pacific/Enderbury",
                          "Pacific/Fakaofo",
                          "Pacific/Fiji",
                          "Pacific/Funafuti",
                          "Pacific/Galapagos",
                          "Pacific/Gambier",
                          "Pacific/Guadalcanal",
                          "Pacific/Guam",
                          "Pacific/Honolulu",
                          "Pacific/Johnston",
                          "Pacific/Kiritimati",
                          "Pacific/Kosrae",
                          "Pacific/Kwajalein",
                          "Pacific/Majuro",
                          "Pacific/Marquesas",
                          "Pacific/Midway",
                          "Pacific/Nauru",
                          "Pacific/Niue",
                          "Pacific/Norfolk",
                          "Pacific/Noumea",
                          "Pacific/Pago_Pago",
                          "Pacific/Palau",
                          "Pacific/Pitcairn",
                          "Pacific/Pohnpei",
                          "Pacific/Ponape",
                          "Pacific/Port_Moresby",
                          "Pacific/Rarotonga",
                          "Pacific/Saipan",
                          "Pacific/Samoa",
                          "Pacific/Tahiti",
                          "Pacific/Tarawa",
                          "Pacific/Tongatapu",
                          "Pacific/Truk",
                          "Pacific/Wake",
                          "Pacific/Wallis",
                          "Pacific/Yap",
                          "Poland",
                          "Portugal",
                          "ROC",
                          "ROK",
                          "Singapore",
                          "Turkey",
                          "UCT",
                          "US/Alaska",
                          "US/Aleutian",
                          "US/Arizona",
                          "US/Central",
                          "US/East-Indiana",
                          "US/Eastern",
                          "US/Hawaii",
                          "US/Indiana-Starke",
                          "US/Michigan",
                          "US/Mountain",
                          "US/Pacific",
                          "US/Samoa",
                          "UTC",
                          "Universal",
                          "W-SU",
                          "WET",
                          "Zulu"
                        ],
                        "type": "string",
                        "description": "tz database style timezone string\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"
                      },
                      "failure_issue_threshold": {
                        "type": "integer",
                        "minimum": 1,
                        "nullable": true,
                        "description": "How many consecutive missed or failed check-ins in a row before creating a new issue."
                      },
                      "recovery_threshold": {
                        "type": "integer",
                        "minimum": 1,
                        "nullable": true,
                        "description": "How many successful check-ins in a row before resolving an issue."
                      }
                    },
                    "required": [
                      "schedule"
                    ]
                  },
                  "contexts": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "trace": {
                            "type": "object",
                            "properties": {
                              "trace_id": {
                                "type": "string",
                                "format": "uuid"
                              }
                            },
                            "required": [
                              "trace_id"
                            ]
                          }
                        }
                      }
                    ],
                    "nullable": true
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "integer"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "attachmentId": {
                      "type": "string"
                    },
                    "expectedTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "monitorConfig": {}
                  },
                  "required": [
                    "attachmentId",
                    "dateCreated",
                    "duration",
                    "environment",
                    "expectedTime",
                    "id",
                    "monitorConfig",
                    "status"
                  ]
                }
              }
            },
            "description": ""
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "integer"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "attachmentId": {
                      "type": "string"
                    },
                    "expectedTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "monitorConfig": {}
                  },
                  "required": [
                    "attachmentId",
                    "dateCreated",
                    "duration",
                    "environment",
                    "expectedTime",
                    "id",
                    "monitorConfig",
                    "status"
                  ]
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/monitors/{monitor_slug}/checkins/{checkin_id}/": {
      "put": {
        "operationId": "Update a Check-In",
        "description": "Updates a check-in.\n\nOnce a check-in is finished (indicated via an `ok` or `error` status) it can no longer be changed.\n\nIf you simply wish to update that the task is still running, you can simply send an empty payload.\n\nYou may use `latest` for the `checkin_id` parameter in order to retrieve\nthe most recent (by creation date) check-in which is still mutable (not marked as finished).",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "monitor_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the monitor.",
            "required": true
          },
          {
            "in": "path",
            "name": "checkin_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The id of the check-in.",
            "required": true
          }
        ],
        "tags": [
          "Crons"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "enum": [
                      "ok",
                      "error",
                      "in_progress"
                    ],
                    "type": "string",
                    "description": "* `ok` - 1\n* `error` - 2\n* `in_progress` - 3"
                  },
                  "duration": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "nullable": true
                  },
                  "environment": {
                    "type": "string",
                    "nullable": true
                  },
                  "monitor_config": {
                    "type": "object",
                    "properties": {
                      "schedule_type": {
                        "enum": [
                          "crontab",
                          "interval"
                        ],
                        "type": "string",
                        "description": "Currently supports \"crontab\" or \"interval\"\n\n* `crontab` - crontab\n* `interval` - interval"
                      },
                      "schedule": {
                        "description": "Varies depending on the schedule_type. Is either a crontab string, or a 2 element tuple for intervals (e.g. [1, 'day'])"
                      },
                      "checkin_margin": {
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "description": "How long (in minutes) after the expected checkin time will we wait until we consider the checkin to have been missed."
                      },
                      "max_runtime": {
                        "type": "integer",
                        "maximum": 40320,
                        "minimum": 1,
                        "nullable": true,
                        "description": "How long (in minutes) is the checkin allowed to run for in CheckInStatus.IN_PROGRESS before it is considered failed."
                      },
                      "timezone": {
                        "enum": [
                          "Africa/Abidjan",
                          "Africa/Accra",
                          "Africa/Addis_Ababa",
                          "Africa/Algiers",
                          "Africa/Asmara",
                          "Africa/Asmera",
                          "Africa/Bamako",
                          "Africa/Bangui",
                          "Africa/Banjul",
                          "Africa/Bissau",
                          "Africa/Blantyre",
                          "Africa/Brazzaville",
                          "Africa/Bujumbura",
                          "Africa/Cairo",
                          "Africa/Casablanca",
                          "Africa/Ceuta",
                          "Africa/Conakry",
                          "Africa/Dakar",
                          "Africa/Dar_es_Salaam",
                          "Africa/Djibouti",
                          "Africa/Douala",
                          "Africa/El_Aaiun",
                          "Africa/Freetown",
                          "Africa/Gaborone",
                          "Africa/Harare",
                          "Africa/Johannesburg",
                          "Africa/Juba",
                          "Africa/Kampala",
                          "Africa/Khartoum",
                          "Africa/Kigali",
                          "Africa/Kinshasa",
                          "Africa/Lagos",
                          "Africa/Libreville",
                          "Africa/Lome",
                          "Africa/Luanda",
                          "Africa/Lubumbashi",
                          "Africa/Lusaka",
                          "Africa/Malabo",
                          "Africa/Maputo",
                          "Africa/Maseru",
                          "Africa/Mbabane",
                          "Africa/Mogadishu",
                          "Africa/Monrovia",
                          "Africa/Nairobi",
                          "Africa/Ndjamena",
                          "Africa/Niamey",
                          "Africa/Nouakchott",
                          "Africa/Ouagadougou",
                          "Africa/Porto-Novo",
                          "Africa/Sao_Tome",
                          "Africa/Timbuktu",
                          "Africa/Tripoli",
                          "Africa/Tunis",
                          "Africa/Windhoek",
                          "America/Adak",
                          "America/Anchorage",
                          "America/Anguilla",
                          "America/Antigua",
                          "America/Araguaina",
                          "America/Argentina/Buenos_Aires",
                          "America/Argentina/Catamarca",
                          "America/Argentina/ComodRivadavia",
                          "America/Argentina/Cordoba",
                          "America/Argentina/Jujuy",
                          "America/Argentina/La_Rioja",
                          "America/Argentina/Mendoza",
                          "America/Argentina/Rio_Gallegos",
                          "America/Argentina/Salta",
                          "America/Argentina/San_Juan",
                          "America/Argentina/San_Luis",
                          "America/Argentina/Tucuman",
                          "America/Argentina/Ushuaia",
                          "America/Aruba",
                          "America/Asuncion",
                          "America/Atikokan",
                          "America/Atka",
                          "America/Bahia",
                          "America/Bahia_Banderas",
                          "America/Barbados",
                          "America/Belem",
                          "America/Belize",
                          "America/Blanc-Sablon",
                          "America/Boa_Vista",
                          "America/Bogota",
                          "America/Boise",
                          "America/Buenos_Aires",
                          "America/Cambridge_Bay",
                          "America/Campo_Grande",
                          "America/Cancun",
                          "America/Caracas",
                          "America/Catamarca",
                          "America/Cayenne",
                          "America/Cayman",
                          "America/Chicago",
                          "America/Chihuahua",
                          "America/Coral_Harbour",
                          "America/Cordoba",
                          "America/Costa_Rica",
                          "America/Creston",
                          "America/Cuiaba",
                          "America/Curacao",
                          "America/Danmarkshavn",
                          "America/Dawson",
                          "America/Dawson_Creek",
                          "America/Denver",
                          "America/Detroit",
                          "America/Dominica",
                          "America/Edmonton",
                          "America/Eirunepe",
                          "America/El_Salvador",
                          "America/Ensenada",
                          "America/Fort_Nelson",
                          "America/Fort_Wayne",
                          "America/Fortaleza",
                          "America/Glace_Bay",
                          "America/Godthab",
                          "America/Goose_Bay",
                          "America/Grand_Turk",
                          "America/Grenada",
                          "America/Guadeloupe",
                          "America/Guatemala",
                          "America/Guayaquil",
                          "America/Guyana",
                          "America/Halifax",
                          "America/Havana",
                          "America/Hermosillo",
                          "America/Indiana/Indianapolis",
                          "America/Indiana/Knox",
                          "America/Indiana/Marengo",
                          "America/Indiana/Petersburg",
                          "America/Indiana/Tell_City",
                          "America/Indiana/Vevay",
                          "America/Indiana/Vincennes",
                          "America/Indiana/Winamac",
                          "America/Indianapolis",
                          "America/Inuvik",
                          "America/Iqaluit",
                          "America/Jamaica",
                          "America/Jujuy",
                          "America/Juneau",
                          "America/Kentucky/Louisville",
                          "America/Kentucky/Monticello",
                          "America/Knox_IN",
                          "America/Kralendijk",
                          "America/La_Paz",
                          "America/Lima",
                          "America/Los_Angeles",
                          "America/Louisville",
                          "America/Lower_Princes",
                          "America/Maceio",
                          "America/Managua",
                          "America/Manaus",
                          "America/Marigot",
                          "America/Martinique",
                          "America/Matamoros",
                          "America/Mazatlan",
                          "America/Mendoza",
                          "America/Menominee",
                          "America/Merida",
                          "America/Metlakatla",
                          "America/Mexico_City",
                          "America/Miquelon",
                          "America/Moncton",
                          "America/Monterrey",
                          "America/Montevideo",
                          "America/Montreal",
                          "America/Montserrat",
                          "America/Nassau",
                          "America/New_York",
                          "America/Nipigon",
                          "America/Nome",
                          "America/Noronha",
                          "America/North_Dakota/Beulah",
                          "America/North_Dakota/Center",
                          "America/North_Dakota/New_Salem",
                          "America/Ojinaga",
                          "America/Panama",
                          "America/Pangnirtung",
                          "America/Paramaribo",
                          "America/Phoenix",
                          "America/Port-au-Prince",
                          "America/Port_of_Spain",
                          "America/Porto_Acre",
                          "America/Porto_Velho",
                          "America/Puerto_Rico",
                          "America/Punta_Arenas",
                          "America/Rainy_River",
                          "America/Rankin_Inlet",
                          "America/Recife",
                          "America/Regina",
                          "America/Resolute",
                          "America/Rio_Branco",
                          "America/Rosario",
                          "America/Santa_Isabel",
                          "America/Santarem",
                          "America/Santiago",
                          "America/Santo_Domingo",
                          "America/Sao_Paulo",
                          "America/Scoresbysund",
                          "America/Shiprock",
                          "America/Sitka",
                          "America/St_Barthelemy",
                          "America/St_Johns",
                          "America/St_Kitts",
                          "America/St_Lucia",
                          "America/St_Thomas",
                          "America/St_Vincent",
                          "America/Swift_Current",
                          "America/Tegucigalpa",
                          "America/Thule",
                          "America/Thunder_Bay",
                          "America/Tijuana",
                          "America/Toronto",
                          "America/Tortola",
                          "America/Vancouver",
                          "America/Virgin",
                          "America/Whitehorse",
                          "America/Winnipeg",
                          "America/Yakutat",
                          "America/Yellowknife",
                          "Antarctica/Casey",
                          "Antarctica/Davis",
                          "Antarctica/DumontDUrville",
                          "Antarctica/Macquarie",
                          "Antarctica/Mawson",
                          "Antarctica/McMurdo",
                          "Antarctica/Palmer",
                          "Antarctica/Rothera",
                          "Antarctica/South_Pole",
                          "Antarctica/Syowa",
                          "Antarctica/Troll",
                          "Antarctica/Vostok",
                          "Arctic/Longyearbyen",
                          "Asia/Aden",
                          "Asia/Almaty",
                          "Asia/Amman",
                          "Asia/Anadyr",
                          "Asia/Aqtau",
                          "Asia/Aqtobe",
                          "Asia/Ashgabat",
                          "Asia/Ashkhabad",
                          "Asia/Atyrau",
                          "Asia/Baghdad",
                          "Asia/Bahrain",
                          "Asia/Baku",
                          "Asia/Bangkok",
                          "Asia/Barnaul",
                          "Asia/Beirut",
                          "Asia/Bishkek",
                          "Asia/Brunei",
                          "Asia/Calcutta",
                          "Asia/Chita",
                          "Asia/Choibalsan",
                          "Asia/Chongqing",
                          "Asia/Chungking",
                          "Asia/Colombo",
                          "Asia/Dacca",
                          "Asia/Damascus",
                          "Asia/Dhaka",
                          "Asia/Dili",
                          "Asia/Dubai",
                          "Asia/Dushanbe",
                          "Asia/Famagusta",
                          "Asia/Gaza",
                          "Asia/Harbin",
                          "Asia/Hebron",
                          "Asia/Ho_Chi_Minh",
                          "Asia/Hong_Kong",
                          "Asia/Hovd",
                          "Asia/Irkutsk",
                          "Asia/Istanbul",
                          "Asia/Jakarta",
                          "Asia/Jayapura",
                          "Asia/Jerusalem",
                          "Asia/Kabul",
                          "Asia/Kamchatka",
                          "Asia/Karachi",
                          "Asia/Kashgar",
                          "Asia/Kathmandu",
                          "Asia/Katmandu",
                          "Asia/Khandyga",
                          "Asia/Kolkata",
                          "Asia/Krasnoyarsk",
                          "Asia/Kuala_Lumpur",
                          "Asia/Kuching",
                          "Asia/Kuwait",
                          "Asia/Macao",
                          "Asia/Macau",
                          "Asia/Magadan",
                          "Asia/Makassar",
                          "Asia/Manila",
                          "Asia/Muscat",
                          "Asia/Nicosia",
                          "Asia/Novokuznetsk",
                          "Asia/Novosibirsk",
                          "Asia/Omsk",
                          "Asia/Oral",
                          "Asia/Phnom_Penh",
                          "Asia/Pontianak",
                          "Asia/Pyongyang",
                          "Asia/Qatar",
                          "Asia/Qostanay",
                          "Asia/Qyzylorda",
                          "Asia/Rangoon",
                          "Asia/Riyadh",
                          "Asia/Saigon",
                          "Asia/Sakhalin",
                          "Asia/Samarkand",
                          "Asia/Seoul",
                          "Asia/Shanghai",
                          "Asia/Singapore",
                          "Asia/Srednekolymsk",
                          "Asia/Taipei",
                          "Asia/Tashkent",
                          "Asia/Tbilisi",
                          "Asia/Tehran",
                          "Asia/Tel_Aviv",
                          "Asia/Thimbu",
                          "Asia/Thimphu",
                          "Asia/Tokyo",
                          "Asia/Tomsk",
                          "Asia/Ujung_Pandang",
                          "Asia/Ulaanbaatar",
                          "Asia/Ulan_Bator",
                          "Asia/Urumqi",
                          "Asia/Ust-Nera",
                          "Asia/Vientiane",
                          "Asia/Vladivostok",
                          "Asia/Yakutsk",
                          "Asia/Yangon",
                          "Asia/Yekaterinburg",
                          "Asia/Yerevan",
                          "Atlantic/Azores",
                          "Atlantic/Bermuda",
                          "Atlantic/Canary",
                          "Atlantic/Cape_Verde",
                          "Atlantic/Faeroe",
                          "Atlantic/Faroe",
                          "Atlantic/Jan_Mayen",
                          "Atlantic/Madeira",
                          "Atlantic/Reykjavik",
                          "Atlantic/South_Georgia",
                          "Atlantic/St_Helena",
                          "Atlantic/Stanley",
                          "Australia/ACT",
                          "Australia/Adelaide",
                          "Australia/Brisbane",
                          "Australia/Broken_Hill",
                          "Australia/Canberra",
                          "Australia/Currie",
                          "Australia/Darwin",
                          "Australia/Eucla",
                          "Australia/Hobart",
                          "Australia/LHI",
                          "Australia/Lindeman",
                          "Australia/Lord_Howe",
                          "Australia/Melbourne",
                          "Australia/NSW",
                          "Australia/North",
                          "Australia/Perth",
                          "Australia/Queensland",
                          "Australia/South",
                          "Australia/Sydney",
                          "Australia/Tasmania",
                          "Australia/Victoria",
                          "Australia/West",
                          "Australia/Yancowinna",
                          "Brazil/Acre",
                          "Brazil/DeNoronha",
                          "Brazil/East",
                          "Brazil/West",
                          "CET",
                          "CST6CDT",
                          "Canada/Atlantic",
                          "Canada/Central",
                          "Canada/Eastern",
                          "Canada/Mountain",
                          "Canada/Newfoundland",
                          "Canada/Pacific",
                          "Canada/Saskatchewan",
                          "Canada/Yukon",
                          "Chile/Continental",
                          "Chile/EasterIsland",
                          "Cuba",
                          "EET",
                          "EST",
                          "EST5EDT",
                          "Egypt",
                          "Eire",
                          "Etc/GMT",
                          "Etc/GMT+0",
                          "Etc/GMT+1",
                          "Etc/GMT+10",
                          "Etc/GMT+11",
                          "Etc/GMT+12",
                          "Etc/GMT+2",
                          "Etc/GMT+3",
                          "Etc/GMT+4",
                          "Etc/GMT+5",
                          "Etc/GMT+6",
                          "Etc/GMT+7",
                          "Etc/GMT+8",
                          "Etc/GMT+9",
                          "Etc/GMT-0",
                          "Etc/GMT-1",
                          "Etc/GMT-10",
                          "Etc/GMT-11",
                          "Etc/GMT-12",
                          "Etc/GMT-13",
                          "Etc/GMT-14",
                          "Etc/GMT-2",
                          "Etc/GMT-3",
                          "Etc/GMT-4",
                          "Etc/GMT-5",
                          "Etc/GMT-6",
                          "Etc/GMT-7",
                          "Etc/GMT-8",
                          "Etc/GMT-9",
                          "Etc/GMT0",
                          "Etc/Greenwich",
                          "Etc/UCT",
                          "Etc/UTC",
                          "Etc/Universal",
                          "Etc/Zulu",
                          "Europe/Amsterdam",
                          "Europe/Andorra",
                          "Europe/Astrakhan",
                          "Europe/Athens",
                          "Europe/Belfast",
                          "Europe/Belgrade",
                          "Europe/Berlin",
                          "Europe/Bratislava",
                          "Europe/Brussels",
                          "Europe/Bucharest",
                          "Europe/Budapest",
                          "Europe/Busingen",
                          "Europe/Chisinau",
                          "Europe/Copenhagen",
                          "Europe/Dublin",
                          "Europe/Gibraltar",
                          "Europe/Guernsey",
                          "Europe/Helsinki",
                          "Europe/Isle_of_Man",
                          "Europe/Istanbul",
                          "Europe/Jersey",
                          "Europe/Kaliningrad",
                          "Europe/Kiev",
                          "Europe/Kirov",
                          "Europe/Lisbon",
                          "Europe/Ljubljana",
                          "Europe/London",
                          "Europe/Luxembourg",
                          "Europe/Madrid",
                          "Europe/Malta",
                          "Europe/Mariehamn",
                          "Europe/Minsk",
                          "Europe/Monaco",
                          "Europe/Moscow",
                          "Europe/Nicosia",
                          "Europe/Oslo",
                          "Europe/Paris",
                          "Europe/Podgorica",
                          "Europe/Prague",
                          "Europe/Riga",
                          "Europe/Rome",
                          "Europe/Samara",
                          "Europe/San_Marino",
                          "Europe/Sarajevo",
                          "Europe/Saratov",
                          "Europe/Simferopol",
                          "Europe/Skopje",
                          "Europe/Sofia",
                          "Europe/Stockholm",
                          "Europe/Tallinn",
                          "Europe/Tirane",
                          "Europe/Tiraspol",
                          "Europe/Ulyanovsk",
                          "Europe/Uzhgorod",
                          "Europe/Vaduz",
                          "Europe/Vatican",
                          "Europe/Vienna",
                          "Europe/Vilnius",
                          "Europe/Volgograd",
                          "Europe/Warsaw",
                          "Europe/Zagreb",
                          "Europe/Zaporozhye",
                          "Europe/Zurich",
                          "GB",
                          "GB-Eire",
                          "GMT",
                          "GMT+0",
                          "GMT-0",
                          "GMT0",
                          "Greenwich",
                          "HST",
                          "Hongkong",
                          "Iceland",
                          "Indian/Antananarivo",
                          "Indian/Chagos",
                          "Indian/Christmas",
                          "Indian/Cocos",
                          "Indian/Comoro",
                          "Indian/Kerguelen",
                          "Indian/Mahe",
                          "Indian/Maldives",
                          "Indian/Mauritius",
                          "Indian/Mayotte",
                          "Indian/Reunion",
                          "Iran",
                          "Israel",
                          "Jamaica",
                          "Japan",
                          "Kwajalein",
                          "Libya",
                          "MET",
                          "MST",
                          "MST7MDT",
                          "Mexico/BajaNorte",
                          "Mexico/BajaSur",
                          "Mexico/General",
                          "NZ",
                          "NZ-CHAT",
                          "Navajo",
                          "PRC",
                          "PST8PDT",
                          "Pacific/Apia",
                          "Pacific/Auckland",
                          "Pacific/Bougainville",
                          "Pacific/Chatham",
                          "Pacific/Chuuk",
                          "Pacific/Easter",
                          "Pacific/Efate",
                          "Pacific/Enderbury",
                          "Pacific/Fakaofo",
                          "Pacific/Fiji",
                          "Pacific/Funafuti",
                          "Pacific/Galapagos",
                          "Pacific/Gambier",
                          "Pacific/Guadalcanal",
                          "Pacific/Guam",
                          "Pacific/Honolulu",
                          "Pacific/Johnston",
                          "Pacific/Kiritimati",
                          "Pacific/Kosrae",
                          "Pacific/Kwajalein",
                          "Pacific/Majuro",
                          "Pacific/Marquesas",
                          "Pacific/Midway",
                          "Pacific/Nauru",
                          "Pacific/Niue",
                          "Pacific/Norfolk",
                          "Pacific/Noumea",
                          "Pacific/Pago_Pago",
                          "Pacific/Palau",
                          "Pacific/Pitcairn",
                          "Pacific/Pohnpei",
                          "Pacific/Ponape",
                          "Pacific/Port_Moresby",
                          "Pacific/Rarotonga",
                          "Pacific/Saipan",
                          "Pacific/Samoa",
                          "Pacific/Tahiti",
                          "Pacific/Tarawa",
                          "Pacific/Tongatapu",
                          "Pacific/Truk",
                          "Pacific/Wake",
                          "Pacific/Wallis",
                          "Pacific/Yap",
                          "Poland",
                          "Portugal",
                          "ROC",
                          "ROK",
                          "Singapore",
                          "Turkey",
                          "UCT",
                          "US/Alaska",
                          "US/Aleutian",
                          "US/Arizona",
                          "US/Central",
                          "US/East-Indiana",
                          "US/Eastern",
                          "US/Hawaii",
                          "US/Indiana-Starke",
                          "US/Michigan",
                          "US/Mountain",
                          "US/Pacific",
                          "US/Samoa",
                          "UTC",
                          "Universal",
                          "W-SU",
                          "WET",
                          "Zulu"
                        ],
                        "type": "string",
                        "description": "tz database style timezone string\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"
                      },
                      "failure_issue_threshold": {
                        "type": "integer",
                        "minimum": 1,
                        "nullable": true,
                        "description": "How many consecutive missed or failed check-ins in a row before creating a new issue."
                      },
                      "recovery_threshold": {
                        "type": "integer",
                        "minimum": 1,
                        "nullable": true,
                        "description": "How many successful check-ins in a row before resolving an issue."
                      }
                    },
                    "required": [
                      "schedule"
                    ]
                  },
                  "contexts": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "trace": {
                            "type": "object",
                            "properties": {
                              "trace_id": {
                                "type": "string",
                                "format": "uuid"
                              }
                            },
                            "required": [
                              "trace_id"
                            ]
                          }
                        }
                      }
                    ],
                    "nullable": true
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "integer"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "attachmentId": {
                      "type": "string"
                    },
                    "expectedTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "monitorConfig": {}
                  },
                  "required": [
                    "attachmentId",
                    "dateCreated",
                    "duration",
                    "environment",
                    "expectedTime",
                    "id",
                    "monitorConfig",
                    "status"
                  ]
                }
              }
            },
            "description": ""
          },
          "208": {
            "description": "Already Reported"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/projects/": {
      "get": {
        "operationId": "List an Organization's Projects",
        "description": "Return a list of projects bound to a organization.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results."
          }
        ],
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "auth_token": [
              "org:admin",
              "org:read",
              "org:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "latestDeploys": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "nullable": true
                      },
                      "stats": {},
                      "transactionStats": {},
                      "sessionStats": {},
                      "id": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "platform": {
                        "type": "string",
                        "nullable": true
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "isBookmarked": {
                        "type": "boolean"
                      },
                      "isMember": {
                        "type": "boolean"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "firstEvent": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "firstTransactionEvent": {
                        "type": "boolean"
                      },
                      "access": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "hasAccess": {
                        "type": "boolean"
                      },
                      "hasMinifiedStackTrace": {
                        "type": "boolean"
                      },
                      "hasMonitors": {
                        "type": "boolean"
                      },
                      "hasProfiles": {
                        "type": "boolean"
                      },
                      "hasReplays": {
                        "type": "boolean"
                      },
                      "hasSessions": {
                        "type": "boolean"
                      },
                      "team": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "slug"
                        ],
                        "nullable": true
                      },
                      "teams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "slug"
                          ]
                        }
                      },
                      "eventProcessing": {
                        "type": "object",
                        "properties": {
                          "symbolicationDegraded": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "symbolicationDegraded"
                        ]
                      },
                      "platforms": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "hasUserReports": {
                        "type": "boolean"
                      },
                      "environments": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "latestRelease": {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "version"
                        ],
                        "nullable": true
                      }
                    },
                    "required": [
                      "access",
                      "dateCreated",
                      "environments",
                      "eventProcessing",
                      "features",
                      "firstEvent",
                      "firstTransactionEvent",
                      "hasAccess",
                      "hasMinifiedStackTrace",
                      "hasMonitors",
                      "hasProfiles",
                      "hasReplays",
                      "hasSessions",
                      "hasUserReports",
                      "id",
                      "isBookmarked",
                      "isMember",
                      "latestRelease",
                      "name",
                      "platform",
                      "platforms",
                      "slug",
                      "team",
                      "teams"
                    ]
                  }
                },
                "examples": {
                  "Success": {
                    "value": [
                      {
                        "dateCreated": "2018-11-06T21:19:58.536Z",
                        "firstEvent": null,
                        "access": [],
                        "hasAccess": true,
                        "id": "3",
                        "isBookmarked": false,
                        "isMember": true,
                        "name": "Prime Mover",
                        "platform": "",
                        "platforms": [],
                        "slug": "prime-mover",
                        "team": {
                          "id": "2",
                          "name": "Powerful Abolitionist",
                          "slug": "powerful-abolitionist"
                        },
                        "teams": [
                          {
                            "id": "2",
                            "name": "Powerful Abolitionist",
                            "slug": "powerful-abolitionist"
                          }
                        ],
                        "environments": [
                          "local"
                        ],
                        "eventProcessing": {
                          "symbolicationDegraded": false
                        },
                        "features": [
                          "releases"
                        ],
                        "firstTransactionEvent": true,
                        "hasSessions": true,
                        "hasProfiles": true,
                        "hasReplays": true,
                        "hasMinifiedStackTrace": false,
                        "hasMonitors": true,
                        "hasUserReports": false,
                        "latestRelease": null
                      }
                    ]
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/replays/": {
      "get": {
        "operationId": "List an Organization's Replays",
        "description": "Return a list of replays belonging to an organization.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "statsPeriod",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "\nThis defines the range of the time series, relative to now. The range is given in a\n`<number><unit>` format. For example `1d` for a one day range. Possible units are `m` for\nminutes, `h` for hours, `d` for days and `w` for weeks. You must either provide a\n`statsPeriod`, or a `start` and `end`.\n"
          },
          {
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nThis defines the start of the time series range as an explicit datetime, either in UTC\nISO8601 or epoch seconds. Use along with `end` instead of `statsPeriod`.\n"
          },
          {
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nThis defines the inclusive end of the time series range as an explicit datetime, either in\nUTC ISO8601 or epoch seconds. Use along with `start` instead of `statsPeriod`.\n"
          },
          {
            "in": "query",
            "name": "field",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "activity",
                  "browser",
                  "count_dead_clicks",
                  "count_errors",
                  "count_rage_clicks",
                  "count_segments",
                  "count_urls",
                  "device",
                  "dist",
                  "duration",
                  "environment",
                  "error_ids",
                  "finished_at",
                  "id",
                  "is_archived",
                  "os",
                  "platform",
                  "project_id",
                  "releases",
                  "sdk",
                  "started_at",
                  "tags",
                  "trace_ids",
                  "urls",
                  "user",
                  "clicks"
                ],
                "type": "string",
                "description": "* `activity` - activity\n* `browser` - browser\n* `count_dead_clicks` - count_dead_clicks\n* `count_errors` - count_errors\n* `count_rage_clicks` - count_rage_clicks\n* `count_segments` - count_segments\n* `count_urls` - count_urls\n* `device` - device\n* `dist` - dist\n* `duration` - duration\n* `environment` - environment\n* `error_ids` - error_ids\n* `finished_at` - finished_at\n* `id` - id\n* `is_archived` - is_archived\n* `os` - os\n* `platform` - platform\n* `project_id` - project_id\n* `releases` - releases\n* `sdk` - sdk\n* `started_at` - started_at\n* `tags` - tags\n* `trace_ids` - trace_ids\n* `urls` - urls\n* `user` - user\n* `clicks` - clicks"
              }
            },
            "description": "Specifies a field that should be marshaled in the output. Invalid fields will be rejected."
          },
          {
            "in": "query",
            "name": "project",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "The ID of the projects to filter by."
          },
          {
            "in": "query",
            "name": "environment",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "The environment to filter by."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "The field to sort the output by."
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "A structured query string to filter the output by."
          }
        ],
        "tags": [
          "Replays"
        ],
        "security": [
          {
            "auth_token": [
              "org:admin",
              "org:read",
              "org:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "string"
                      },
                      "trace_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "error_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "environment": {
                        "type": "string",
                        "nullable": true
                      },
                      "tags": {
                        "oneOf": [
                          {
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "array",
                            "items": {}
                          }
                        ]
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "nullable": true
                          },
                          "username": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "ip": {
                            "type": "string",
                            "nullable": true
                          },
                          "display_name": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "sdk": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "version": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "os": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "version": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "browser": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "version": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "device": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "brand": {
                            "type": "string",
                            "nullable": true
                          },
                          "model": {
                            "type": "string",
                            "nullable": true
                          },
                          "family": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "is_archived": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "urls": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true
                      },
                      "clicks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {}
                        }
                      },
                      "count_dead_clicks": {
                        "type": "integer",
                        "nullable": true
                      },
                      "count_rage_clicks": {
                        "type": "integer",
                        "nullable": true
                      },
                      "count_errors": {
                        "type": "integer",
                        "nullable": true
                      },
                      "duration": {
                        "type": "integer",
                        "nullable": true
                      },
                      "finished_at": {
                        "type": "string",
                        "nullable": true
                      },
                      "started_at": {
                        "type": "string",
                        "nullable": true
                      },
                      "activity": {
                        "type": "integer",
                        "nullable": true
                      },
                      "count_urls": {
                        "type": "integer",
                        "nullable": true
                      },
                      "replay_type": {
                        "type": "string"
                      },
                      "count_segments": {
                        "type": "integer",
                        "nullable": true
                      },
                      "platform": {
                        "type": "string",
                        "nullable": true
                      },
                      "releases": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "dist": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "examples": {
                  "Success": {
                    "value": [
                      {
                        "activity": 5,
                        "browser": {
                          "name": "Chome",
                          "version": "103.0.38"
                        },
                        "count_dead_clicks": 6,
                        "count_rage_clicks": 1,
                        "count_errors": 1,
                        "count_segments": 0,
                        "count_urls": 1,
                        "device": {
                          "brand": "Apple",
                          "family": "iPhone",
                          "model": "11",
                          "name": "iPhone 11"
                        },
                        "dist": null,
                        "duration": 576,
                        "environment": "production",
                        "error_ids": [
                          "7e07485f-12f9-416b-8b14-26260799b51f"
                        ],
                        "finished_at": "2022-07-07T14:15:33.201019",
                        "id": "7e07485f-12f9-416b-8b14-26260799b51f",
                        "is_archived": null,
                        "os": {
                          "name": "iOS",
                          "version": "16.2"
                        },
                        "platform": "Sentry",
                        "project_id": "639195",
                        "releases": [
                          "version@1.4"
                        ],
                        "sdk": {
                          "name": "Thundercat",
                          "version": "27.1"
                        },
                        "started_at": "2022-07-07T14:05:57.909921",
                        "tags": {
                          "hello": [
                            "world",
                            "Lionel Richie"
                          ]
                        },
                        "trace_ids": [
                          "7e07485f-12f9-416b-8b14-26260799b51f"
                        ],
                        "urls": [
                          "/organizations/abc123/issues"
                        ],
                        "user": {
                          "display_name": "John Doe",
                          "email": "john.doe@example.com",
                          "id": "30246326",
                          "ip": "213.164.1.114",
                          "username": "John Doe"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/replays/{replay_id}/": {
      "get": {
        "operationId": "Retrieve a Replay Instance",
        "description": "Return details on an individual replay.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "replay_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The id of the replay you'd like to retrieve.",
            "required": true
          },
          {
            "in": "query",
            "name": "statsPeriod",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "\nThis defines the range of the time series, relative to now. The range is given in a\n`<number><unit>` format. For example `1d` for a one day range. Possible units are `m` for\nminutes, `h` for hours, `d` for days and `w` for weeks. You must either provide a\n`statsPeriod`, or a `start` and `end`.\n"
          },
          {
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nThis defines the start of the time series range as an explicit datetime, either in UTC\nISO8601 or epoch seconds. Use along with `end` instead of `statsPeriod`.\n"
          },
          {
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "\nThis defines the inclusive end of the time series range as an explicit datetime, either in\nUTC ISO8601 or epoch seconds. Use along with `start` instead of `statsPeriod`.\n"
          },
          {
            "in": "query",
            "name": "field",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "activity",
                  "browser",
                  "count_dead_clicks",
                  "count_errors",
                  "count_rage_clicks",
                  "count_segments",
                  "count_urls",
                  "device",
                  "dist",
                  "duration",
                  "environment",
                  "error_ids",
                  "finished_at",
                  "id",
                  "is_archived",
                  "os",
                  "platform",
                  "project_id",
                  "releases",
                  "sdk",
                  "started_at",
                  "tags",
                  "trace_ids",
                  "urls",
                  "user",
                  "clicks"
                ],
                "type": "string",
                "description": "* `activity` - activity\n* `browser` - browser\n* `count_dead_clicks` - count_dead_clicks\n* `count_errors` - count_errors\n* `count_rage_clicks` - count_rage_clicks\n* `count_segments` - count_segments\n* `count_urls` - count_urls\n* `device` - device\n* `dist` - dist\n* `duration` - duration\n* `environment` - environment\n* `error_ids` - error_ids\n* `finished_at` - finished_at\n* `id` - id\n* `is_archived` - is_archived\n* `os` - os\n* `platform` - platform\n* `project_id` - project_id\n* `releases` - releases\n* `sdk` - sdk\n* `started_at` - started_at\n* `tags` - tags\n* `trace_ids` - trace_ids\n* `urls` - urls\n* `user` - user\n* `clicks` - clicks"
              }
            },
            "description": "Specifies a field that should be marshaled in the output. Invalid fields will be rejected."
          },
          {
            "in": "query",
            "name": "project",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "The ID of the projects to filter by."
          },
          {
            "in": "query",
            "name": "environment",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "The environment to filter by."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "The field to sort the output by."
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "A structured query string to filter the output by."
          }
        ],
        "tags": [
          "Replays"
        ],
        "security": [
          {
            "auth_token": [
              "org:admin",
              "org:read",
              "org:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "string"
                      },
                      "trace_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "error_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "environment": {
                        "type": "string",
                        "nullable": true
                      },
                      "tags": {
                        "oneOf": [
                          {
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "array",
                            "items": {}
                          }
                        ]
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "nullable": true
                          },
                          "username": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "ip": {
                            "type": "string",
                            "nullable": true
                          },
                          "display_name": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "sdk": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "version": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "os": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "version": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "browser": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "version": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "device": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "brand": {
                            "type": "string",
                            "nullable": true
                          },
                          "model": {
                            "type": "string",
                            "nullable": true
                          },
                          "family": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "is_archived": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "urls": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true
                      },
                      "clicks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {}
                        }
                      },
                      "count_dead_clicks": {
                        "type": "integer",
                        "nullable": true
                      },
                      "count_rage_clicks": {
                        "type": "integer",
                        "nullable": true
                      },
                      "count_errors": {
                        "type": "integer",
                        "nullable": true
                      },
                      "duration": {
                        "type": "integer",
                        "nullable": true
                      },
                      "finished_at": {
                        "type": "string",
                        "nullable": true
                      },
                      "started_at": {
                        "type": "string",
                        "nullable": true
                      },
                      "activity": {
                        "type": "integer",
                        "nullable": true
                      },
                      "count_urls": {
                        "type": "integer",
                        "nullable": true
                      },
                      "replay_type": {
                        "type": "string"
                      },
                      "count_segments": {
                        "type": "integer",
                        "nullable": true
                      },
                      "platform": {
                        "type": "string",
                        "nullable": true
                      },
                      "releases": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "dist": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "examples": {
                  "Success": {
                    "value": [
                      {
                        "activity": 5,
                        "browser": {
                          "name": "Chome",
                          "version": "103.0.38"
                        },
                        "count_dead_clicks": 6,
                        "count_rage_clicks": 1,
                        "count_errors": 1,
                        "count_segments": 0,
                        "count_urls": 1,
                        "device": {
                          "brand": "Apple",
                          "family": "iPhone",
                          "model": "11",
                          "name": "iPhone 11"
                        },
                        "dist": null,
                        "duration": 576,
                        "environment": "production",
                        "error_ids": [
                          "7e07485f-12f9-416b-8b14-26260799b51f"
                        ],
                        "finished_at": "2022-07-07T14:15:33.201019",
                        "id": "7e07485f-12f9-416b-8b14-26260799b51f",
                        "os": {
                          "name": "iOS",
                          "version": "16.2"
                        },
                        "platform": "Sentry",
                        "project_id": "639195",
                        "releases": [
                          "version@1.4"
                        ],
                        "sdk": {
                          "name": "Thundercat",
                          "version": "27.1"
                        },
                        "started_at": "2022-07-07T14:05:57.909921",
                        "tags": {
                          "hello": [
                            "world",
                            "Lionel Richie"
                          ]
                        },
                        "trace_ids": [
                          "7e07485f-12f9-416b-8b14-26260799b51f"
                        ],
                        "urls": [
                          "/organizations/abc123/issues"
                        ],
                        "user": {
                          "display_name": "John Doe",
                          "email": "john.doe@example.com",
                          "id": "30246326",
                          "ip": "213.164.1.114",
                          "username": "John Doe"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/scim/v2/Groups": {
      "get": {
        "tags": [
          "SCIM"
        ],
        "description": "Returns a paginated list of teams bound to a organization with a SCIM Groups GET Request.\n- Note that the members field will only contain up to 10000 members.",
        "operationId": "List an Organization's Paginated Teams",
        "parameters": [
          {
            "name": "organization_slug",
            "description": "The slug of the organization.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "description": "SCIM 1-offset based index for pagination.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "A SCIM filter expression. The only operator currently supported is `eq`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "description": "The maximum number of results the query should return, maximum of 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "excludedAttributes",
            "in": "query",
            "required": false,
            "description": "Fields that should be left off of return values. Right now the only supported field for this query is `members`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "totalResults",
                    "itemsPerPage",
                    "startIndex",
                    "Resources"
                  ],
                  "properties": {
                    "schemas": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "totalResults": {
                      "type": "integer"
                    },
                    "itemsPerPage": {
                      "type": "integer"
                    },
                    "startIndex": {
                      "type": "integer"
                    },
                    "Resources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "schemas",
                          "id",
                          "displayName",
                          "members",
                          "meta"
                        ],
                        "properties": {
                          "schemas": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "id": {
                            "type": "string"
                          },
                          "displayName": {
                            "type": "string"
                          },
                          "members": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "value",
                                "display"
                              ],
                              "properties": {
                                "value": {
                                  "type": "string"
                                },
                                "display": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "meta": {
                            "type": "object",
                            "properties": {
                              "resourceType": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "schemas": [
                    "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                  ],
                  "totalResults": 1,
                  "startIndex": 1,
                  "itemsPerPage": 1,
                  "Resources": [
                    {
                      "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:Group"
                      ],
                      "id": "23232",
                      "displayName": "test-scimv2",
                      "members": [],
                      "meta": {
                        "resourceType": "Group"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Permission Denied"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "team:read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "SCIM"
        ],
        "description": "Create a new team bound to an organization via a SCIM Groups POST Request. Note that teams are always created with an empty member set. The endpoint will also do a normalization of uppercase / spaces to lowercase and dashes.",
        "operationId": "Provision a New Team",
        "parameters": [
          {
            "name": "organization_slug",
            "description": "The slug of the organization.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "schemas",
                  "displayName"
                ],
                "type": "object",
                "properties": {
                  "schemas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "value",
                        "display"
                      ],
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "display": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "schemas": [
                  "urn:ietf:params:scim:schemas:core:2.0:Group"
                ],
                "displayName": "Test SCIMv2",
                "members": []
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "schemas",
                    "id",
                    "displayName",
                    "members",
                    "meta"
                  ],
                  "properties": {
                    "schemas": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "value",
                          "display"
                        ],
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "display": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "resourceType": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "schemas": [
                    "urn:ietf:params:scim:schemas:core:2.0:Group"
                  ],
                  "displayName": "Test SCIMv2",
                  "members": [],
                  "meta": {
                    "resourceType": "Group"
                  },
                  "id": "123"
                }
              }
            }
          },
          "400": {
            "description": "Bad input"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Team slug already exists"
          }
        },
        "security": [
          {
            "auth_token": [
              "team:write"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/scim/v2/Groups/{team_id}": {
      "get": {
        "operationId": "Query an Individual Team",
        "description": "Query an individual team with a SCIM Group GET Request.\n- Note that the members field will only contain up to 10000 members.",
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "schema": {
              "type": "integer"
            },
            "description": "The id of the team you'd like to query / update.",
            "required": true
          },
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          }
        ],
        "tags": [
          "SCIM"
        ],
        "security": [
          {
            "auth_token": [
              "team:admin",
              "team:read",
              "team:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "schemas": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "resourceType": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "resourceType"
                      ]
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "display": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "display",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "displayName",
                    "id",
                    "meta",
                    "schemas"
                  ]
                },
                "examples": {
                  "SuccessfulResponse": {
                    "value": {
                      "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:Group"
                      ],
                      "id": "23232",
                      "displayName": "test-scimv2",
                      "members": [],
                      "meta": {
                        "resourceType": "Group"
                      }
                    },
                    "summary": "Successful response"
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "operationId": "Update a Team's Attributes",
        "description": "Update a team's attributes with a SCIM Group PATCH Request. Valid operations are:\n\n* Renaming a team:\n```json\n{\n    \"Operations\": [{\n        \"op\": \"replace\",\n        \"value\": {\n            \"id\": 23,\n            \"displayName\": \"newName\"\n        }\n    }]\n}\n```\n* Adding a member to a team:\n```json\n{\n    \"Operations\": [{\n        \"op\": \"add\",\n        \"path\": \"members\",\n        \"value\": [\n            {\n                \"value\": 23,\n                \"display\": \"testexample@example.com\"\n            }\n        ]\n    }]\n}\n```\n* Removing a member from a team:\n```json\n{\n    \"Operations\": [{\n        \"op\": \"remove\",\n        \"path\": \"members[value eq \"23\"]\"\n    }]\n}\n```\n* Replacing an entire member set of a team:\n```json\n{\n    \"Operations\": [{\n        \"op\": \"replace\",\n        \"path\": \"members\",\n        \"value\": [\n            {\n                \"value\": 23,\n                \"display\": \"testexample2@sentry.io\"\n            },\n            {\n                \"value\": 24,\n                \"display\": \"testexample3@sentry.io\"\n            }\n        ]\n    }]\n}\n```",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "team_id",
            "schema": {
              "type": "integer"
            },
            "description": "The id of the team you'd like to query / update.",
            "required": true
          }
        ],
        "tags": [
          "SCIM"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schemas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "Operations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "op": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object",
                          "additionalProperties": {}
                        },
                        "path": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "op"
                      ]
                    }
                  }
                },
                "required": [
                  "Operations",
                  "schemas"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "auth_token": [
              "team:admin",
              "team:write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "operationId": "Delete an Individual Team",
        "description": "Delete a team with a SCIM Group DELETE Request.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "team_id",
            "schema": {
              "type": "integer"
            },
            "description": "The id of the team you'd like to query / update.",
            "required": true
          }
        ],
        "tags": [
          "SCIM"
        ],
        "security": [
          {
            "auth_token": [
              "team:admin"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/scim/v2/Users": {
      "get": {
        "operationId": "List an Organization's Members",
        "description": "Returns a paginated list of members bound to a organization with a SCIM Users GET Request.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "startIndex",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "SCIM 1-offset based index for pagination."
          },
          {
            "in": "query",
            "name": "count",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 100
            },
            "description": "The maximum number of results the query should return, maximum of 100."
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "A SCIM filter expression. The only operator currently supported is `eq`."
          },
          {
            "in": "query",
            "name": "excludedAttributes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "description": "Fields that should be left off of return values. Right now the only supported field for this query is members."
          }
        ],
        "tags": [
          "SCIM"
        ],
        "security": [
          {
            "auth_token": [
              "member:admin",
              "member:read",
              "member:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "schemas": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "totalResults": {
                      "type": "integer"
                    },
                    "startIndex": {
                      "type": "integer"
                    },
                    "itemsPerPage": {
                      "type": "integer"
                    },
                    "Resources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Conforming to the SCIM RFC, this represents a Sentry Org Member\nas a SCIM user object.",
                        "properties": {
                          "active": {
                            "type": "boolean"
                          },
                          "schemas": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "id": {
                            "type": "string"
                          },
                          "userName": {
                            "type": "string"
                          },
                          "name": {
                            "type": "object",
                            "properties": {
                              "givenName": {
                                "type": "string"
                              },
                              "familyName": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "familyName",
                              "givenName"
                            ]
                          },
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "primary": {
                                  "type": "boolean"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "primary",
                                "type",
                                "value"
                              ]
                            }
                          },
                          "meta": {
                            "type": "object",
                            "properties": {
                              "resourceType": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "resourceType"
                            ]
                          },
                          "sentryOrgRole": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "emails",
                          "id",
                          "meta",
                          "name",
                          "schemas",
                          "sentryOrgRole",
                          "userName"
                        ]
                      }
                    }
                  },
                  "required": [
                    "Resources",
                    "itemsPerPage",
                    "schemas",
                    "startIndex",
                    "totalResults"
                  ]
                },
                "examples": {
                  "ListAnOrganization'sMembers": {
                    "value": {
                      "schemas": [
                        "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                      ],
                      "totalResults": 1,
                      "startIndex": 1,
                      "itemsPerPage": 1,
                      "Resources": [
                        {
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                          ],
                          "id": "102",
                          "userName": "test.user@okta.local",
                          "emails": [
                            {
                              "primary": true,
                              "value": "test.user@okta.local",
                              "type": "work"
                            }
                          ],
                          "name": {
                            "familyName": "N/A",
                            "givenName": "N/A"
                          },
                          "active": true,
                          "meta": {
                            "resourceType": "User"
                          },
                          "sentryOrgRole": "member"
                        }
                      ]
                    },
                    "summary": "List an Organization's Members"
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "operationId": "Provision a New Organization Member",
        "description": "Create a new Organization Member via a SCIM Users POST Request.\n- `userName` should be set to the SAML field used for email, and active should be set to `true`.\n- `sentryOrgRole` can only be `admin`, `manager`, `billing`, or `member`.\n- Sentry's SCIM API doesn't currently support setting users to inactive,\nand the member will be deleted if active is set to `false`.\n- The API also does not support setting secondary emails.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          }
        ],
        "tags": [
          "SCIM"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string",
                    "format": "email"
                  },
                  "sentryOrgRole": {
                    "type": "string"
                  }
                },
                "required": [
                  "userName"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "auth_token": [
              "member:admin",
              "member:write"
            ]
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Conforming to the SCIM RFC, this represents a Sentry Org Member\nas a SCIM user object.",
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "schemas": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "userName": {
                      "type": "string"
                    },
                    "name": {
                      "type": "object",
                      "properties": {
                        "givenName": {
                          "type": "string"
                        },
                        "familyName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "familyName",
                        "givenName"
                      ]
                    },
                    "emails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "primary": {
                            "type": "boolean"
                          },
                          "value": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "primary",
                          "type",
                          "value"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "resourceType": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "resourceType"
                      ]
                    },
                    "sentryOrgRole": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "emails",
                    "id",
                    "meta",
                    "name",
                    "schemas",
                    "sentryOrgRole",
                    "userName"
                  ]
                },
                "examples": {
                  "ProvisionNewMember": {
                    "value": {
                      "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                      ],
                      "id": "242",
                      "userName": "test.user@okta.local",
                      "emails": [
                        {
                          "primary": true,
                          "value": "test.user@okta.local",
                          "type": "work"
                        }
                      ],
                      "active": true,
                      "name": {
                        "familyName": "N/A",
                        "givenName": "N/A"
                      },
                      "meta": {
                        "resourceType": "User"
                      },
                      "sentryOrgRole": "member"
                    },
                    "summary": "Provision new member"
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/scim/v2/Users/{member_id}": {
      "get": {
        "operationId": "Query an Individual Organization Member",
        "description": "Query an individual organization member with a SCIM User GET Request.\n- The `name` object will contain fields `firstName` and `lastName` with the values of `N/A`.\nSentry's SCIM API does not currently support these fields but returns them for compatibility purposes.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "member_id",
            "schema": {
              "type": "integer"
            },
            "description": "The id of the member you'd like to query.",
            "required": true
          }
        ],
        "tags": [
          "SCIM"
        ],
        "security": [
          {
            "auth_token": [
              "member:admin",
              "member:read",
              "member:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Conforming to the SCIM RFC, this represents a Sentry Org Member\nas a SCIM user object.",
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "schemas": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "userName": {
                      "type": "string"
                    },
                    "name": {
                      "type": "object",
                      "properties": {
                        "givenName": {
                          "type": "string"
                        },
                        "familyName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "familyName",
                        "givenName"
                      ]
                    },
                    "emails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "primary": {
                            "type": "boolean"
                          },
                          "value": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "primary",
                          "type",
                          "value"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "resourceType": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "resourceType"
                      ]
                    },
                    "sentryOrgRole": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "emails",
                    "id",
                    "meta",
                    "name",
                    "schemas",
                    "sentryOrgRole",
                    "userName"
                  ]
                },
                "examples": {
                  "SuccessfulResponse": {
                    "value": {
                      "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                      ],
                      "id": "102",
                      "userName": "test.user@okta.local",
                      "emails": [
                        {
                          "primary": true,
                          "value": "test.user@okta.local",
                          "type": "work"
                        }
                      ],
                      "name": {
                        "familyName": "N/A",
                        "givenName": "N/A"
                      },
                      "active": true,
                      "meta": {
                        "resourceType": "User"
                      },
                      "sentryOrgRole": "member"
                    },
                    "summary": "Successful response"
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "operationId": "Update an Organization Member's Attributes",
        "description": "Update an organization member's attributes with a SCIM PATCH Request.\nThe only supported attribute is `active`. After setting `active` to false\nSentry will permanently delete the Organization Member.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "member_id",
            "schema": {
              "type": "integer"
            },
            "description": "The id of the member you'd like to query.",
            "required": true
          }
        ],
        "tags": [
          "SCIM"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schemas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "Operations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "op": {
                          "type": "string"
                        },
                        "value": {},
                        "path": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "op",
                        "value"
                      ]
                    },
                    "maxItems": 100
                  }
                },
                "required": [
                  "Operations"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "auth_token": [
              "member:admin",
              "member:write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "operationId": "Delete an Organization Member via SCIM",
        "description": "Delete an organization member with a SCIM User DELETE Request.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "member_id",
            "schema": {
              "type": "integer"
            },
            "description": "The id of the member you'd like to query.",
            "required": true
          }
        ],
        "tags": [
          "SCIM"
        ],
        "security": [
          {
            "auth_token": [
              "member:admin"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/stats_v2/": {
      "get": {
        "operationId": "Retrieve Event Counts for an Organization (v2)",
        "description": "Query event counts for your Organization.\nSelect a field, define a date range, and group or filter by columns.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "statsPeriod",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "This defines the range of the time series, relative to now. The range is given in a `<number><unit>` format. For example `1d` for a one day range. Possible units are `m` for minutes, `h` for hours, `d` for days and `w` for weeks.You must either provide a `statsPeriod`, or a `start` and `end`."
          },
          {
            "in": "query",
            "name": "interval",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "This is the resolution of the time series, given in the same format as `statsPeriod`. The default resolution is `1h` and the minimum resolution is currently restricted to `1h` as well. Intervals larger than `1d` are not supported, and the interval has to cleanly divide one day."
          },
          {
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "This defines the start of the time series range as an explicit datetime, either in UTC ISO8601 or epoch seconds.Use along with `end` instead of `statsPeriod`."
          },
          {
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "This defines the inclusive end of the time series range as an explicit datetime, either in UTC ISO8601 or epoch seconds.Use along with `start` instead of `statsPeriod`."
          },
          {
            "in": "query",
            "name": "groupBy",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "outcome",
                  "category",
                  "reason",
                  "project"
                ],
                "type": "string",
                "description": "* `outcome` - outcome\n* `category` - category\n* `reason` - reason\n* `project` - project"
              }
            },
            "description": "can pass multiple groupBy parameters to group by multiple, e.g.Â `groupBy=project&groupBy=outcome`Â to group by multiple dimensions. Note that grouping by project can cause missing rows if the number of projects / interval is large. If you have a large number of projects, we recommend filtering and querying by them individually.Also note that grouping by projects does not currently support timeseries interval responses and will instead be a sum of the projectover the entire period specified.",
            "required": true
          },
          {
            "in": "query",
            "name": "field",
            "schema": {
              "enum": [
                "sum(quantity)",
                "sum(times_seen)"
              ],
              "type": "string",
              "minLength": 1
            },
            "description": "the `sum(quantity)` field is bytes for attachments, and all others the 'event' count for those types of events.\n\n`sum(times_seen)` sums the number of times an event has been seen. For 'normal' event types, this will be equal toÂ `sum(quantity)`Â for now. For sessions, quantity will sum the total number of events seen in a session, while `times_seen` will be the unique number of sessions. and for attachments, `times_seen` will be the total number of attachments, while quantity will be the total sum of attachment bytes.\n\n* `sum(quantity)` - sum(quantity)\n* `sum(times_seen)` - sum(times_seen)",
            "required": true
          },
          {
            "in": "query",
            "name": "project",
            "schema": {
              "type": "array",
              "items": {}
            },
            "description": "The ID of the projects to filter by.\n\nUse `-1` to include all accessible projects."
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "enum": [
                "error",
                "transaction",
                "attachment",
                "replays",
                "profiles"
              ],
              "type": "string",
              "minLength": 1
            },
            "description": "If filtering by attachments, you cannot filter by any other category due to quantity values becoming nonsensical (combining bytes and event counts).\n\nIf filtering byÂ `error`, it will automatically addÂ `default`Â andÂ `security`Â as we currently roll those two categories intoÂ `error`Â for displaying.\n\n* `error` - error\n* `transaction` - transaction\n* `attachment` - attachment\n* `replays` - replays\n* `profiles` - profiles"
          },
          {
            "in": "query",
            "name": "outcome",
            "schema": {
              "enum": [
                "accepted",
                "filtered",
                "rate_limited",
                "invalid",
                "abuse",
                "client_discard"
              ],
              "type": "string",
              "minLength": 1
            },
            "description": "See https://docs.sentry.io/product/stats/ for more information on outcome statuses.\n\n* `accepted` - accepted\n* `filtered` - filtered\n* `rate_limited` - rate_limited\n* `invalid` - invalid\n* `abuse` - abuse\n* `client_discard` - client_discard"
          },
          {
            "in": "query",
            "name": "reason",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "The reason field will contain why an event was filtered/dropped."
          }
        ],
        "tags": [
          "Organizations"
        ],
        "security": [
          {
            "auth_token": [
              "org:admin",
              "org:read",
              "org:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string"
                    },
                    "end": {
                      "type": "string"
                    },
                    "intervals": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "by": {
                            "type": "object",
                            "additionalProperties": {}
                          },
                          "totals": {
                            "type": "object",
                            "additionalProperties": {}
                          },
                          "series": {
                            "type": "object",
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "by",
                          "series",
                          "totals"
                        ]
                      }
                    }
                  },
                  "required": [
                    "end",
                    "groups",
                    "intervals",
                    "start"
                  ]
                },
                "examples": {
                  "SuccessfulResponse": {
                    "value": {
                      "start": "2022-02-14T19:00:00Z",
                      "end": "2022-02-28T18:03:00Z",
                      "intervals": [
                        "2022-02-28T00:00:00Z"
                      ],
                      "groups": [
                        {
                          "by": {
                            "outcome": "invalid"
                          },
                          "totals": {
                            "sum(quantity)": 165665
                          },
                          "series": {
                            "sum(quantity)": [
                              165665
                            ]
                          }
                        }
                      ]
                    },
                    "summary": "Successful response"
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/organizations/{organization_slug}/teams/": {
      "get": {
        "operationId": "List an Organization's Teams",
        "description": "Returns a list of teams bound to a organization.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "detailed",
            "schema": {
              "type": "string"
            },
            "description": "\nSpecify `\"0\"` to return team details that do not include projects.\n"
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results."
          }
        ],
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "auth_token": [
              "org:admin",
              "org:read",
              "org:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "isMember": {
                        "type": "boolean"
                      },
                      "teamRole": {
                        "type": "string",
                        "nullable": true
                      },
                      "flags": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "access": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "hasAccess": {
                        "type": "boolean"
                      },
                      "isPending": {
                        "type": "boolean"
                      },
                      "memberCount": {
                        "type": "integer"
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "avatarType": {
                            "type": "string"
                          },
                          "avatarUuid": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "avatarType",
                          "avatarUuid"
                        ]
                      },
                      "externalTeams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "externalId": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "teamId": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "externalName": {
                              "type": "string"
                            },
                            "integrationId": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "externalName",
                            "id",
                            "integrationId",
                            "provider"
                          ]
                        }
                      },
                      "organization": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "status": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "dateCreated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "isEarlyAdopter": {
                            "type": "boolean"
                          },
                          "require2FA": {
                            "type": "boolean"
                          },
                          "requireEmailVerification": {
                            "type": "boolean"
                          },
                          "avatar": {
                            "type": "object",
                            "properties": {
                              "avatarType": {
                                "type": "string"
                              },
                              "avatarUuid": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "avatarType",
                              "avatarUuid"
                            ]
                          },
                          "features": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "organizationUrl": {
                                "type": "string"
                              },
                              "regionUrl": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "organizationUrl",
                              "regionUrl"
                            ]
                          },
                          "hasAuthProvider": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "avatar",
                          "dateCreated",
                          "features",
                          "hasAuthProvider",
                          "id",
                          "isEarlyAdopter",
                          "links",
                          "name",
                          "require2FA",
                          "requireEmailVerification",
                          "slug",
                          "status"
                        ]
                      },
                      "projects": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "stats": {},
                            "transactionStats": {},
                            "sessionStats": {},
                            "id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "platform": {
                              "type": "string",
                              "nullable": true
                            },
                            "dateCreated": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "isBookmarked": {
                              "type": "boolean"
                            },
                            "isMember": {
                              "type": "boolean"
                            },
                            "features": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "firstEvent": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "firstTransactionEvent": {
                              "type": "boolean"
                            },
                            "access": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "hasAccess": {
                              "type": "boolean"
                            },
                            "hasMinifiedStackTrace": {
                              "type": "boolean"
                            },
                            "hasMonitors": {
                              "type": "boolean"
                            },
                            "hasProfiles": {
                              "type": "boolean"
                            },
                            "hasReplays": {
                              "type": "boolean"
                            },
                            "hasSessions": {
                              "type": "boolean"
                            },
                            "isInternal": {
                              "type": "boolean"
                            },
                            "isPublic": {
                              "type": "boolean"
                            },
                            "avatar": {
                              "type": "object",
                              "properties": {
                                "avatarType": {
                                  "type": "string"
                                },
                                "avatarUuid": {
                                  "type": "string",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "avatarType",
                                "avatarUuid"
                              ]
                            },
                            "color": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "access",
                            "avatar",
                            "color",
                            "dateCreated",
                            "features",
                            "firstEvent",
                            "firstTransactionEvent",
                            "hasAccess",
                            "hasMinifiedStackTrace",
                            "hasMonitors",
                            "hasProfiles",
                            "hasReplays",
                            "hasSessions",
                            "id",
                            "isBookmarked",
                            "isInternal",
                            "isMember",
                            "isPublic",
                            "name",
                            "platform",
                            "slug",
                            "status"
                          ]
                        }
                      },
                      "orgRole": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "access",
                      "avatar",
                      "dateCreated",
                      "flags",
                      "hasAccess",
                      "id",
                      "isMember",
                      "isPending",
                      "memberCount",
                      "name",
                      "slug",
                      "teamRole"
                    ]
                  }
                },
                "examples": {
                  "GetListOfOrganization'sTeams": {
                    "value": [
                      {
                        "id": "48531",
                        "slug": "ancient-gabelers",
                        "name": "Ancient Gabelers",
                        "dateCreated": "2018-11-06T21:20:08.115Z",
                        "isMember": false,
                        "teamRole": null,
                        "flags": {
                          "idp:provisioned": false
                        },
                        "access": [
                          "member:read",
                          "alerts:read",
                          "org:read",
                          "event:read",
                          "project:read",
                          "project:releases",
                          "event:write",
                          "team:read"
                        ],
                        "hasAccess": true,
                        "isPending": false,
                        "memberCount": 2,
                        "avatar": {
                          "avatarType": "letter_avatar",
                          "avatarUuid": null
                        }
                      },
                      {
                        "id": "100253",
                        "slug": "powerful-abolitionist",
                        "name": "Powerful Abolitionist",
                        "dateCreated": "2018-10-03T17:47:50.745447Z",
                        "isMember": false,
                        "teamRole": null,
                        "flags": {
                          "idp:provisioned": false
                        },
                        "access": [
                          "member:read",
                          "alerts:read",
                          "org:read",
                          "event:read",
                          "project:read",
                          "project:releases",
                          "event:write",
                          "team:read"
                        ],
                        "hasAccess": true,
                        "isPending": false,
                        "memberCount": 5,
                        "avatar": {
                          "avatarType": "letter_avatar",
                          "avatarUuid": null
                        },
                        "projects": [
                          {
                            "id": "6403534",
                            "slug": "prime-mover",
                            "name": "Prime Mover",
                            "platform": null,
                            "dateCreated": "2019-04-06T00:02:40.468175Z",
                            "isBookmarked": false,
                            "isMember": false,
                            "features": [
                              "alert-filters",
                              "custom-inbound-filters",
                              "data-forwarding",
                              "discard-groups",
                              "minidump",
                              "race-free-group-creation",
                              "rate-limits",
                              "servicehooks",
                              "similarity-indexing",
                              "similarity-indexing-v2",
                              "similarity-view",
                              "similarity-view-v2",
                              "releases"
                            ],
                            "firstEvent": "2019-04-06T02:00:21Z",
                            "firstTransactionEvent": true,
                            "access": [
                              "alerts:read",
                              "event:write",
                              "org:read",
                              "project:read",
                              "member:read",
                              "team:read",
                              "event:read",
                              "project:releases"
                            ],
                            "hasAccess": true,
                            "hasMinifiedStackTrace": false,
                            "hasMonitors": true,
                            "hasProfiles": false,
                            "hasReplays": false,
                            "hasSessions": true,
                            "isInternal": false,
                            "isPublic": false,
                            "avatar": {
                              "avatarType": "letter_avatar",
                              "avatarUuid": null
                            },
                            "color": "#6d3fbf",
                            "status": "active"
                          },
                          {
                            "id": "6403599",
                            "slug": "the-spoiled-yoghurt",
                            "name": "The Spoiled Yoghurt",
                            "platform": "",
                            "dateCreated": "2022-06-24T17:55:27.304367Z",
                            "isBookmarked": false,
                            "isMember": false,
                            "features": [
                              "alert-filters",
                              "custom-inbound-filters",
                              "data-forwarding",
                              "discard-groups",
                              "minidump",
                              "race-free-group-creation",
                              "rate-limits",
                              "servicehooks",
                              "similarity-indexing",
                              "similarity-indexing-v2",
                              "similarity-view",
                              "similarity-view-v2"
                            ],
                            "firstEvent": "2022-07-13T18:17:56.197351Z",
                            "firstTransactionEvent": false,
                            "access": [
                              "alerts:read",
                              "event:write",
                              "org:read",
                              "project:read",
                              "member:read",
                              "team:read",
                              "event:read",
                              "project:releases"
                            ],
                            "hasAccess": true,
                            "hasMinifiedStackTrace": false,
                            "hasMonitors": true,
                            "hasProfiles": false,
                            "hasReplays": false,
                            "hasSessions": false,
                            "isInternal": false,
                            "isPublic": false,
                            "avatar": {
                              "avatarType": "letter_avatar",
                              "avatarUuid": null
                            },
                            "color": "#6e3fbf",
                            "status": "active"
                          }
                        ]
                      }
                    ],
                    "summary": "Get list of organization's teams"
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "operationId": "Create a New Team",
        "description": "Create a new team bound to an organization.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "The name for the team.",
            "required": true
          },
          {
            "in": "query",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "description": "Optional slug for the team. If not provided a slug is generated from the name."
          }
        ],
        "tags": [
          "Teams"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 64
                  },
                  "slug": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 50,
                    "pattern": "^[a-z0-9_\\-]+$"
                  },
                  "idp_provisioned": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_token": [
              "org:admin",
              "org:write",
              "team:write"
            ]
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "teamRole": {
                      "type": "string",
                      "nullable": true
                    },
                    "flags": {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "isPending": {
                      "type": "boolean"
                    },
                    "memberCount": {
                      "type": "integer"
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "avatarType",
                        "avatarUuid"
                      ]
                    },
                    "externalTeams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "externalId": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "teamId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "externalName": {
                            "type": "string"
                          },
                          "integrationId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "externalName",
                          "id",
                          "integrationId",
                          "provider"
                        ]
                      }
                    },
                    "organization": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        },
                        "name": {
                          "type": "string"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "isEarlyAdopter": {
                          "type": "boolean"
                        },
                        "require2FA": {
                          "type": "boolean"
                        },
                        "requireEmailVerification": {
                          "type": "boolean"
                        },
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "avatarType",
                            "avatarUuid"
                          ]
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "organizationUrl": {
                              "type": "string"
                            },
                            "regionUrl": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "organizationUrl",
                            "regionUrl"
                          ]
                        },
                        "hasAuthProvider": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "avatar",
                        "dateCreated",
                        "features",
                        "hasAuthProvider",
                        "id",
                        "isEarlyAdopter",
                        "links",
                        "name",
                        "require2FA",
                        "requireEmailVerification",
                        "slug",
                        "status"
                      ]
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stats": {},
                          "transactionStats": {},
                          "sessionStats": {},
                          "id": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "platform": {
                            "type": "string",
                            "nullable": true
                          },
                          "dateCreated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "isBookmarked": {
                            "type": "boolean"
                          },
                          "isMember": {
                            "type": "boolean"
                          },
                          "features": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "firstEvent": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "firstTransactionEvent": {
                            "type": "boolean"
                          },
                          "access": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "hasAccess": {
                            "type": "boolean"
                          },
                          "hasMinifiedStackTrace": {
                            "type": "boolean"
                          },
                          "hasMonitors": {
                            "type": "boolean"
                          },
                          "hasProfiles": {
                            "type": "boolean"
                          },
                          "hasReplays": {
                            "type": "boolean"
                          },
                          "hasSessions": {
                            "type": "boolean"
                          },
                          "isInternal": {
                            "type": "boolean"
                          },
                          "isPublic": {
                            "type": "boolean"
                          },
                          "avatar": {
                            "type": "object",
                            "properties": {
                              "avatarType": {
                                "type": "string"
                              },
                              "avatarUuid": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "avatarType",
                              "avatarUuid"
                            ]
                          },
                          "color": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "access",
                          "avatar",
                          "color",
                          "dateCreated",
                          "features",
                          "firstEvent",
                          "firstTransactionEvent",
                          "hasAccess",
                          "hasMinifiedStackTrace",
                          "hasMonitors",
                          "hasProfiles",
                          "hasReplays",
                          "hasSessions",
                          "id",
                          "isBookmarked",
                          "isInternal",
                          "isMember",
                          "isPublic",
                          "name",
                          "platform",
                          "slug",
                          "status"
                        ]
                      }
                    },
                    "orgRole": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "access",
                    "avatar",
                    "dateCreated",
                    "flags",
                    "hasAccess",
                    "id",
                    "isMember",
                    "isPending",
                    "memberCount",
                    "name",
                    "slug",
                    "teamRole"
                  ]
                },
                "examples": {
                  "CreateANewTeam": {
                    "value": {
                      "id": "5151492858",
                      "slug": "ancient-gabelers",
                      "name": "Ancient Gabelers",
                      "dateCreated": "2021-06-12T23:38:54.168307Z",
                      "isMember": true,
                      "teamRole": "admin",
                      "flags": {
                        "idp:provisioned": false
                      },
                      "access": [
                        "project:write",
                        "member:read",
                        "event:write",
                        "team:admin",
                        "alerts:read",
                        "project:releases",
                        "alerts:write",
                        "org:read",
                        "team:read",
                        "project:admin",
                        "project:read",
                        "org:integrations",
                        "event:read",
                        "event:admin",
                        "team:write"
                      ],
                      "hasAccess": true,
                      "isPending": false,
                      "memberCount": 1,
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      }
                    },
                    "summary": "Create a new team"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "A team with this slug already exists."
          }
        }
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/": {
      "get": {
        "operationId": "Retrieve a Project",
        "description": "Return details on an individual project.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          }
        ],
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stats": {},
                    "transactionStats": {},
                    "sessionStats": {},
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "firstEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "firstTransactionEvent": {
                      "type": "boolean"
                    },
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "hasMinifiedStackTrace": {
                      "type": "boolean"
                    },
                    "hasMonitors": {
                      "type": "boolean"
                    },
                    "hasProfiles": {
                      "type": "boolean"
                    },
                    "hasReplays": {
                      "type": "boolean"
                    },
                    "hasSessions": {
                      "type": "boolean"
                    },
                    "isInternal": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "avatarType",
                        "avatarUuid"
                      ]
                    },
                    "color": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "team": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "slug"
                      ]
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "slug"
                        ]
                      }
                    },
                    "latestRelease": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "version"
                      ],
                      "nullable": true
                    },
                    "options": {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "digestsMinDelay": {
                      "type": "integer"
                    },
                    "digestsMaxDelay": {
                      "type": "integer"
                    },
                    "subjectPrefix": {
                      "type": "string"
                    },
                    "allowedDomains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "resolveAge": {
                      "type": "integer"
                    },
                    "dataScrubber": {
                      "type": "boolean"
                    },
                    "dataScrubberDefaults": {
                      "type": "boolean"
                    },
                    "safeFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storeCrashReports": {
                      "type": "integer",
                      "nullable": true
                    },
                    "sensitiveFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "subjectTemplate": {
                      "type": "string"
                    },
                    "securityToken": {
                      "type": "string"
                    },
                    "securityTokenHeader": {
                      "type": "string",
                      "nullable": true
                    },
                    "verifySSL": {
                      "type": "boolean"
                    },
                    "scrubIPAddresses": {
                      "type": "boolean"
                    },
                    "scrapeJavaScript": {
                      "type": "boolean"
                    },
                    "groupingConfig": {
                      "type": "string"
                    },
                    "groupingEnhancements": {
                      "type": "string"
                    },
                    "groupingEnhancementsBase": {
                      "type": "string",
                      "nullable": true
                    },
                    "secondaryGroupingExpiry": {
                      "type": "integer"
                    },
                    "secondaryGroupingConfig": {
                      "type": "string",
                      "nullable": true
                    },
                    "groupingAutoUpdate": {
                      "type": "boolean"
                    },
                    "fingerprintingRules": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        },
                        "name": {
                          "type": "string"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "isEarlyAdopter": {
                          "type": "boolean"
                        },
                        "require2FA": {
                          "type": "boolean"
                        },
                        "requireEmailVerification": {
                          "type": "boolean"
                        },
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "avatarType",
                            "avatarUuid"
                          ]
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "organizationUrl": {
                              "type": "string"
                            },
                            "regionUrl": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "organizationUrl",
                            "regionUrl"
                          ]
                        },
                        "hasAuthProvider": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "avatar",
                        "dateCreated",
                        "features",
                        "hasAuthProvider",
                        "id",
                        "isEarlyAdopter",
                        "links",
                        "name",
                        "require2FA",
                        "requireEmailVerification",
                        "slug",
                        "status"
                      ]
                    },
                    "plugins": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "shortName": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "canDisable": {
                            "type": "boolean"
                          },
                          "isTestable": {
                            "type": "boolean"
                          },
                          "hasConfiguration": {
                            "type": "boolean"
                          },
                          "metadata": {
                            "type": "object",
                            "additionalProperties": {}
                          },
                          "contexts": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "status": {
                            "type": "string"
                          },
                          "assets": {
                            "type": "array",
                            "items": {}
                          },
                          "doc": {
                            "type": "string"
                          },
                          "firstPartyAlternative": {},
                          "deprecationDate": {},
                          "altIsSentryApp": {},
                          "enabled": {
                            "type": "boolean"
                          },
                          "version": {
                            "type": "string"
                          },
                          "author": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "isDeprecated": {
                            "type": "boolean"
                          },
                          "isHidden": {
                            "type": "boolean"
                          },
                          "description": {
                            "type": "string"
                          },
                          "features": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "featureDescriptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "resourceLinks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "required": [
                          "altIsSentryApp",
                          "assets",
                          "author",
                          "canDisable",
                          "contexts",
                          "deprecationDate",
                          "description",
                          "doc",
                          "enabled",
                          "featureDescriptions",
                          "features",
                          "firstPartyAlternative",
                          "hasConfiguration",
                          "id",
                          "isDeprecated",
                          "isHidden",
                          "isTestable",
                          "metadata",
                          "name",
                          "resourceLinks",
                          "shortName",
                          "slug",
                          "status",
                          "type",
                          "version"
                        ]
                      }
                    },
                    "platforms": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "processingIssues": {
                      "type": "integer"
                    },
                    "defaultEnvironment": {
                      "type": "string",
                      "nullable": true
                    },
                    "relayPiiConfig": {
                      "type": "string",
                      "nullable": true
                    },
                    "builtinSymbolSources": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dynamicSamplingBiases": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      }
                    },
                    "eventProcessing": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "boolean"
                      }
                    },
                    "symbolSources": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "access",
                    "allowedDomains",
                    "avatar",
                    "builtinSymbolSources",
                    "color",
                    "dataScrubber",
                    "dataScrubberDefaults",
                    "dateCreated",
                    "defaultEnvironment",
                    "digestsMaxDelay",
                    "digestsMinDelay",
                    "dynamicSamplingBiases",
                    "eventProcessing",
                    "features",
                    "fingerprintingRules",
                    "firstEvent",
                    "firstTransactionEvent",
                    "groupingAutoUpdate",
                    "groupingConfig",
                    "groupingEnhancements",
                    "groupingEnhancementsBase",
                    "hasAccess",
                    "hasMinifiedStackTrace",
                    "hasMonitors",
                    "hasProfiles",
                    "hasReplays",
                    "hasSessions",
                    "id",
                    "isBookmarked",
                    "isInternal",
                    "isMember",
                    "isPublic",
                    "latestRelease",
                    "name",
                    "options",
                    "organization",
                    "platform",
                    "platforms",
                    "plugins",
                    "processingIssues",
                    "relayPiiConfig",
                    "resolveAge",
                    "safeFields",
                    "scrapeJavaScript",
                    "scrubIPAddresses",
                    "secondaryGroupingConfig",
                    "secondaryGroupingExpiry",
                    "securityToken",
                    "securityTokenHeader",
                    "sensitiveFields",
                    "slug",
                    "status",
                    "storeCrashReports",
                    "subjectPrefix",
                    "subjectTemplate",
                    "symbolSources",
                    "team",
                    "teams",
                    "verifySSL"
                  ]
                },
                "examples": {
                  "GetDetailedViewAboutAProject": {
                    "value": {
                      "id": "4505278496",
                      "slug": "pump-station",
                      "name": "Pump Station",
                      "platform": "python",
                      "dateCreated": "2021-01-14T22:08:52.711809Z",
                      "isBookmarked": false,
                      "isMember": true,
                      "features": [
                        "alert-filters",
                        "custom-inbound-filters",
                        "data-forwarding",
                        "discard-groups",
                        "minidump",
                        "race-free-group-creation",
                        "rate-limits",
                        "servicehooks",
                        "similarity-indexing",
                        "similarity-view",
                        "span-metrics-extraction",
                        "releases"
                      ],
                      "firstEvent": "2021-01-14T22:08:52.711809Z",
                      "firstTransactionEvent": true,
                      "access": [
                        "project:releases",
                        "event:read",
                        "project:read",
                        "member:read",
                        "team:read",
                        "event:write",
                        "org:read",
                        "alerts:read"
                      ],
                      "hasAccess": true,
                      "hasMinifiedStackTrace": false,
                      "hasMonitors": true,
                      "hasProfiles": true,
                      "hasReplays": false,
                      "hasSessions": true,
                      "isInternal": true,
                      "isPublic": false,
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "color": "#3fbf67",
                      "status": "active",
                      "team": {
                        "id": "2",
                        "name": "Powerful Abolitionist",
                        "slug": "powerful-abolitionist"
                      },
                      "teams": [
                        {
                          "id": "2",
                          "name": "Powerful Abolitionist",
                          "slug": "powerful-abolitionist"
                        }
                      ],
                      "latestRelease": {
                        "version": "backend@3e90a5d9e767ebcfa70e921d7a7ff6c037461168"
                      },
                      "options": {
                        "sentry:grouping_auto_update": false,
                        "sentry:span_description_cluster_rules": [],
                        "sentry:transaction_name_cluster_rules": [],
                        "digests:mail:maximum_delay": 600,
                        "sentry:scrub_defaults": false,
                        "sentry:scrape_javascript": true,
                        "mail:subject_prefix": "",
                        "sentry:relay_pii_config": null,
                        "sentry:scrub_data": false,
                        "sentry:token": "e84c8c0fb1c121e988558785885f9cde",
                        "sentry:resolve_age": 168,
                        "sentry:grouping_config": "newstyle:2023-01-11",
                        "quotas:spike-protection-disabled": false,
                        "sentry:store_crash_reports": 5,
                        "digests:mail:minimum_delay": 180,
                        "sentry:secondary_grouping_config": "newstyle:2019-10-29",
                        "sentry:secondary_grouping_expiry": 147555024,
                        "sentry:builtin_symbol_sources": [
                          "ios",
                          "android",
                          "chromium"
                        ],
                        "sentry:origins": [
                          "getsentry.com",
                          "app.getsentry.com",
                          "www.getsentry.com",
                          "sentry.io"
                        ],
                        "sentry:sensitive_fields": [
                          "sudo"
                        ],
                        "sentry:scrub_ip_address": false,
                        "sentry:default_environment": "prod",
                        "sentry:verify_ssl": true,
                        "sentry:csp_ignored_sources_defaults": true,
                        "sentry:csp_ignored_sources": "",
                        "sentry:reprocessing_active": false,
                        "filters:blacklisted_ips": "",
                        "filters:react-hydration-errors": true,
                        "filters:releases": "",
                        "filters:error_messages": "",
                        "feedback:branding": true
                      },
                      "digestsMinDelay": 180,
                      "digestsMaxDelay": 600,
                      "subjectPrefix": "",
                      "allowedDomains": [
                        "getsentry.com",
                        "app.getsentry.com",
                        "www.getsentry.com",
                        "sentry.io"
                      ],
                      "resolveAge": 168,
                      "dataScrubber": false,
                      "dataScrubberDefaults": false,
                      "safeFields": [],
                      "storeCrashReports": 5,
                      "sensitiveFields": [
                        "sudo"
                      ],
                      "subjectTemplate": "$shortID - $title",
                      "securityToken": "e84c8c0fb1c121e988558785885f9cde",
                      "securityTokenHeader": null,
                      "verifySSL": true,
                      "scrubIPAddresses": false,
                      "scrapeJavaScript": true,
                      "groupingConfig": "newstyle:2023-01-11",
                      "groupingEnhancements": "",
                      "groupingEnhancementsBase": null,
                      "secondaryGroupingExpiry": 1687010243,
                      "secondaryGroupingConfig": "newstyle:2019-10-29",
                      "groupingAutoUpdate": false,
                      "fingerprintingRules": "",
                      "organization": {
                        "id": "1",
                        "slug": "sentry",
                        "status": {
                          "id": "active",
                          "name": "active"
                        },
                        "name": "Sentry",
                        "dateCreated": "2014-12-15T04:06:24.263571Z",
                        "isEarlyAdopter": true,
                        "require2FA": false,
                        "requireEmailVerification": false,
                        "avatar": {
                          "avatarType": "upload",
                          "avatarUuid": "24f6f762f7a7473888b259c566da5adb"
                        },
                        "features": [
                          "performance-uncompressed-assets-ingest",
                          "dashboards-rh-widget",
                          "org-subdomains",
                          "performance-db-main-thread-visible",
                          "transaction-name-mark-scrubbed-as-sanitized",
                          "sentry-pride-logo-footer",
                          "issue-list-prefetch-issue-on-hover",
                          "mep-rollout-flag",
                          "performance-issues-m-n-plus-one-db-detector",
                          "session-replay-ui",
                          "release-health-drop-sessions",
                          "alert-crash-free-metrics",
                          "performance-n-plus-one-db-queries-visible",
                          "session-replay-recording-scrubbing",
                          "profile-file-io-main-thread-visible",
                          "performance-consecutive-http-detector",
                          "profiling",
                          "symbol-sources",
                          "advanced-search",
                          "performance-n-plus-one-db-queries-post-process-group",
                          "minute-resolution-sessions",
                          "performance-transaction-name-only-search-indexed",
                          "performance-large-http-payload-detector",
                          "performance-consecutive-db-queries-ingest",
                          "business-to-team-promotion",
                          "shared-issues",
                          "performance-large-http-payload-post-process-group",
                          "promotion-be-adoption-enabled",
                          "monitors",
                          "am2-billing",
                          "project-stats",
                          "profiling-ga",
                          "performance-new-trends",
                          "performance-n-plus-one-api-calls-post-process-group",
                          "performance-db-main-thread-post-process-group",
                          "team-project-creation-all",
                          "performance-metrics-backed-transaction-summary",
                          "performance-db-main-thread-detector",
                          "issue-platform",
                          "streamline-targeting-context",
                          "performance-consecutive-db-issue",
                          "performance-consecutive-http-post-process-group",
                          "performance-n-plus-one-api-calls-detector",
                          "performance-render-blocking-asset-span-post-process-group",
                          "performance-uncompressed-assets-post-process-group",
                          "performance-issues-search",
                          "performance-slow-db-issue",
                          "performance-db-main-thread-ingest",
                          "session-replay",
                          "sql-format",
                          "performance-consecutive-db-queries-visible",
                          "slack-overage-notifications",
                          "performance-m-n-plus-one-db-queries-post-process-group",
                          "transaction-metrics-extraction",
                          "performance-consecutive-db-queries-post-process-group",
                          "performance-slow-db-query-post-process-group",
                          "session-replay-sdk-errors-only",
                          "performance-n-plus-one-db-queries-ingest",
                          "profile-image-decode-main-thread-visible",
                          "performance-issues-render-blocking-assets-detector",
                          "performance-m-n-plus-one-db-queries-ingest",
                          "anr-rate",
                          "auto-enable-codecov",
                          "ondemand-budgets",
                          "profile-file-io-main-thread-post-process-group",
                          "performance-render-blocking-asset-span-ingest",
                          "profile-json-decode-main-thread-post-process-group",
                          "onboarding-project-deletion-on-back-click",
                          "invite-members-rate-limits",
                          "transaction-name-normalize",
                          "performance-file-io-main-thread-visible",
                          "onboarding-sdk-selection",
                          "performance-span-histogram-view",
                          "performance-file-io-main-thread-ingest",
                          "metrics-extraction",
                          "profile-json-decode-main-thread-ingest",
                          "integrations-stacktrace-link",
                          "onboarding",
                          "promotion-mobperf-gift50kerr",
                          "device-classification",
                          "transaction-name-normalize-legacy",
                          "performance-slow-db-query-ingest",
                          "bundle-plan-checkout",
                          "metric-alert-chartcuterie",
                          "performance-issues-all-events-tab",
                          "discover-events-rate-limit",
                          "india-promotion",
                          "track-button-click-events",
                          "open-ai-suggestion",
                          "performance-issues-compressed-assets-detector",
                          "device-class-synthesis",
                          "profiling-billing",
                          "performance-file-io-main-thread-detector",
                          "integrations-deployment",
                          "performance-m-n-plus-one-db-queries-visible",
                          "mobile-cpu-memory-in-transactions",
                          "derive-code-mappings",
                          "performance-onboarding-checklist",
                          "performance-consecutive-http-visible",
                          "performance-n-plus-one-api-calls-ingest",
                          "performance-landing-page-stats-period",
                          "dynamic-sampling",
                          "performance-slow-db-query-visible",
                          "performance-n-plus-one-api-calls-visible",
                          "profile-image-decode-main-thread-ingest",
                          "set-grouping-config",
                          "event-attachments",
                          "open-membership",
                          "new-spike-protection",
                          "source-maps-debug-ids",
                          "paid-to-free-promotion",
                          "performance-large-http-payload-ingest",
                          "crons-issue-platform",
                          "profile-file-io-main-thread-ingest",
                          "customer-domains",
                          "performance-file-io-main-thread-post-process-group",
                          "issue-alert-fallback-targeting",
                          "performance-render-blocking-asset-span-visible",
                          "ds-sliding-window-org",
                          "performance-consecutive-http-ingest",
                          "profile-image-decode-main-thread-post-process-group",
                          "performance-mep-bannerless-ui",
                          "performance-uncompressed-assets-visible",
                          "getting-started-doc-with-product-selection",
                          "performance-large-http-payload-visible",
                          "performance-view",
                          "promotion-mobperf-discount20",
                          "performance-new-widget-designs",
                          "profile-json-decode-main-thread-visible"
                        ],
                        "links": {
                          "organizationUrl": "https://sentry.sentry.io",
                          "regionUrl": "https://us.sentry.io"
                        },
                        "hasAuthProvider": true
                      },
                      "plugins": [
                        {
                          "id": "asana",
                          "name": "Asana",
                          "slug": "asana",
                          "shortName": "Asana",
                          "type": "issue-tracking",
                          "canDisable": true,
                          "isTestable": false,
                          "hasConfiguration": true,
                          "metadata": {},
                          "contexts": [],
                          "status": "unknown",
                          "assets": [],
                          "doc": "",
                          "firstPartyAlternative": null,
                          "deprecationDate": null,
                          "altIsSentryApp": null,
                          "enabled": true,
                          "version": "23.7.0.dev0",
                          "author": {
                            "name": "Sentry Team",
                            "url": "https://github.com/getsentry/sentry"
                          },
                          "isDeprecated": false,
                          "isHidden": false,
                          "description": "\nImprove your productivity by creating tasks in Asana directly\nfrom Sentry issues. This integration also allows you to link Sentry\nissues to existing tasks in Asana.\n",
                          "features": [
                            "issue-basic"
                          ],
                          "featureDescriptions": [
                            {
                              "description": "Create and link Sentry issue groups directly to an Asana ticket in any of your\n            projects, providing a quick way to jump from a Sentry bug to tracked ticket!",
                              "featureGate": "issue-basic"
                            },
                            {
                              "description": "Link Sentry issues to existing Asana tickets.",
                              "featureGate": "issue-basic"
                            }
                          ],
                          "resourceLinks": [
                            {
                              "title": "Report Issue",
                              "url": "https://github.com/getsentry/sentry/issues"
                            },
                            {
                              "title": "View Source",
                              "url": "https://github.com/getsentry/sentry/tree/master/src/sentry_plugins"
                            }
                          ]
                        }
                      ],
                      "platforms": [
                        "native",
                        "other",
                        "python"
                      ],
                      "processingIssues": 0,
                      "defaultEnvironment": "prod",
                      "relayPiiConfig": null,
                      "builtinSymbolSources": [
                        "ios",
                        "android",
                        "chromium"
                      ],
                      "dynamicSamplingBiases": [
                        {
                          "id": "boostEnvironments",
                          "active": true
                        },
                        {
                          "id": "boostLatestRelease",
                          "active": true
                        },
                        {
                          "id": "ignoreHealthChecks",
                          "active": true
                        },
                        {
                          "id": "boostKeyTransactions",
                          "active": true
                        },
                        {
                          "id": "boostLowVolumeTransactions",
                          "active": true
                        },
                        {
                          "id": "boostReplayId",
                          "active": true
                        },
                        {
                          "id": "recalibrationRule",
                          "active": true
                        }
                      ],
                      "eventProcessing": {
                        "symbolicationDegraded": false
                      },
                      "symbolSources": "[]"
                    },
                    "summary": "Get detailed view about a Project"
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "operationId": "Update a Project",
        "description": "Update various attributes and configurable settings for the given project.\n\nNote that solely having the **`project:read`** scope restricts updatable settings to\n`isBookmarked` only.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "The name for the project."
          },
          {
            "in": "query",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug for the project."
          },
          {
            "in": "query",
            "name": "platform",
            "schema": {
              "type": "string"
            },
            "description": "The platform for the project."
          },
          {
            "in": "query",
            "name": "isBookmarked",
            "schema": {
              "type": "boolean"
            },
            "description": "Enables starring the project within the projects tab."
          },
          {
            "in": "query",
            "name": "options",
            "schema": {
              "type": "object",
              "properties": {
                "filters:react-hydration-errors": {
                  "type": "boolean"
                },
                "filters:blacklisted_ips": {
                  "type": "string"
                },
                "filters:releases": {
                  "type": "string"
                },
                "filters:error_messages": {
                  "type": "string"
                }
              }
            },
            "description": "\nConfigure various project filters:\n- `Hydration Errors`: Filter out react hydration errors that are often unactionable\n- `IP Addresses`: Filter events from these IP addresses separated with newlines.\n- `Releases`: Filter events from these releases separated with newlines. Allows [glob pattern matching](https://docs.sentry.io/product/data-management-settings/filtering/#glob-matching).\n- `Error Message`: Filter events by error messages separated with newlines. Allows [glob pattern matching](https://docs.sentry.io/product/data-management-settings/filtering/#glob-matching).\n```json\n{\n    options: {\n        filters:react-hydration-errors: true,\n        filters:blacklisted_ips: \"127.0.0.1\\n192.168. 0.1\"\n        filters:releases: \"[!3]\\n4\"\n        filters:error_messages: \"TypeError*\\n*ConnectionError*\"\n    }\n}\n```\n"
          }
        ],
        "tags": [
          "Projects"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isBookmarked": {
                    "type": "boolean"
                  },
                  "isSubscribed": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "slug": {
                    "type": "string",
                    "maxLength": 50,
                    "pattern": "^[a-z0-9_\\-]+$"
                  },
                  "team": {
                    "type": "string",
                    "maxLength": 50,
                    "pattern": "^[a-z0-9_\\-]+$"
                  },
                  "digestsMinDelay": {
                    "type": "integer",
                    "maximum": 3600,
                    "minimum": 60
                  },
                  "digestsMaxDelay": {
                    "type": "integer",
                    "maximum": 3600,
                    "minimum": 60
                  },
                  "subjectPrefix": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "subjectTemplate": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "securityToken": {
                    "type": "string",
                    "maxLength": 255,
                    "pattern": "^[-a-zA-Z0-9+/=\\s]+$"
                  },
                  "securityTokenHeader": {
                    "type": "string",
                    "maxLength": 20,
                    "pattern": "^[a-zA-Z0-9_\\-]+$"
                  },
                  "verifySSL": {
                    "type": "boolean"
                  },
                  "defaultEnvironment": {
                    "type": "string",
                    "nullable": true
                  },
                  "dataScrubber": {
                    "type": "boolean"
                  },
                  "dataScrubberDefaults": {
                    "type": "boolean"
                  },
                  "sensitiveFields": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "safeFields": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "storeCrashReports": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": -1,
                    "nullable": true
                  },
                  "relayPiiConfig": {
                    "type": "string",
                    "nullable": true
                  },
                  "builtinSymbolSources": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "symbolSources": {
                    "type": "string",
                    "nullable": true
                  },
                  "scrubIPAddresses": {
                    "type": "boolean"
                  },
                  "groupingConfig": {
                    "type": "string",
                    "nullable": true
                  },
                  "groupingEnhancements": {
                    "type": "string",
                    "nullable": true
                  },
                  "fingerprintingRules": {
                    "type": "string",
                    "nullable": true
                  },
                  "secondaryGroupingConfig": {
                    "type": "string",
                    "nullable": true
                  },
                  "secondaryGroupingExpiry": {
                    "type": "integer",
                    "minimum": 1,
                    "nullable": true
                  },
                  "groupingAutoUpdate": {
                    "type": "boolean"
                  },
                  "scrapeJavaScript": {
                    "type": "boolean"
                  },
                  "allowedDomains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "resolveAge": {
                    "type": "integer",
                    "nullable": true
                  },
                  "platform": {
                    "type": "string",
                    "nullable": true
                  },
                  "copy_from_project": {
                    "type": "integer"
                  },
                  "dynamicSamplingBiases": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "enum": [
                            "boostEnvironments",
                            "boostKeyTransactions",
                            "boostLatestRelease",
                            "boostLowVolumeTransactions",
                            "boostReplayId",
                            "ignoreHealthChecks",
                            "recalibrationRule"
                          ],
                          "type": "string",
                          "description": "* `boostEnvironments` - boostEnvironments\n* `boostKeyTransactions` - boostKeyTransactions\n* `boostLatestRelease` - boostLatestRelease\n* `boostLowVolumeTransactions` - boostLowVolumeTransactions\n* `boostReplayId` - boostReplayId\n* `ignoreHealthChecks` - ignoreHealthChecks\n* `recalibrationRule` - recalibrationRule"
                        },
                        "active": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "performanceIssueCreationRate": {
                    "type": "number",
                    "format": "double",
                    "maximum": 1,
                    "minimum": 0
                  },
                  "performanceIssueCreationThroughPlatform": {
                    "type": "boolean"
                  },
                  "performanceIssueSendToPlatform": {
                    "type": "boolean"
                  },
                  "recapServerUrl": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  },
                  "recapServerToken": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "digestsMaxDelay",
                  "digestsMinDelay",
                  "isBookmarked",
                  "isSubscribed",
                  "name",
                  "securityToken",
                  "securityTokenHeader",
                  "slug",
                  "subjectPrefix",
                  "subjectTemplate",
                  "team"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stats": {},
                    "transactionStats": {},
                    "sessionStats": {},
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "firstEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "firstTransactionEvent": {
                      "type": "boolean"
                    },
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "hasMinifiedStackTrace": {
                      "type": "boolean"
                    },
                    "hasMonitors": {
                      "type": "boolean"
                    },
                    "hasProfiles": {
                      "type": "boolean"
                    },
                    "hasReplays": {
                      "type": "boolean"
                    },
                    "hasSessions": {
                      "type": "boolean"
                    },
                    "isInternal": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "avatarType",
                        "avatarUuid"
                      ]
                    },
                    "color": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "team": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "slug"
                      ]
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "slug"
                        ]
                      }
                    },
                    "latestRelease": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "version"
                      ],
                      "nullable": true
                    },
                    "options": {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "digestsMinDelay": {
                      "type": "integer"
                    },
                    "digestsMaxDelay": {
                      "type": "integer"
                    },
                    "subjectPrefix": {
                      "type": "string"
                    },
                    "allowedDomains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "resolveAge": {
                      "type": "integer"
                    },
                    "dataScrubber": {
                      "type": "boolean"
                    },
                    "dataScrubberDefaults": {
                      "type": "boolean"
                    },
                    "safeFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storeCrashReports": {
                      "type": "integer",
                      "nullable": true
                    },
                    "sensitiveFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "subjectTemplate": {
                      "type": "string"
                    },
                    "securityToken": {
                      "type": "string"
                    },
                    "securityTokenHeader": {
                      "type": "string",
                      "nullable": true
                    },
                    "verifySSL": {
                      "type": "boolean"
                    },
                    "scrubIPAddresses": {
                      "type": "boolean"
                    },
                    "scrapeJavaScript": {
                      "type": "boolean"
                    },
                    "groupingConfig": {
                      "type": "string"
                    },
                    "groupingEnhancements": {
                      "type": "string"
                    },
                    "groupingEnhancementsBase": {
                      "type": "string",
                      "nullable": true
                    },
                    "secondaryGroupingExpiry": {
                      "type": "integer"
                    },
                    "secondaryGroupingConfig": {
                      "type": "string",
                      "nullable": true
                    },
                    "groupingAutoUpdate": {
                      "type": "boolean"
                    },
                    "fingerprintingRules": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        },
                        "name": {
                          "type": "string"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "isEarlyAdopter": {
                          "type": "boolean"
                        },
                        "require2FA": {
                          "type": "boolean"
                        },
                        "requireEmailVerification": {
                          "type": "boolean"
                        },
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "avatarType",
                            "avatarUuid"
                          ]
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "organizationUrl": {
                              "type": "string"
                            },
                            "regionUrl": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "organizationUrl",
                            "regionUrl"
                          ]
                        },
                        "hasAuthProvider": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "avatar",
                        "dateCreated",
                        "features",
                        "hasAuthProvider",
                        "id",
                        "isEarlyAdopter",
                        "links",
                        "name",
                        "require2FA",
                        "requireEmailVerification",
                        "slug",
                        "status"
                      ]
                    },
                    "plugins": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "shortName": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "canDisable": {
                            "type": "boolean"
                          },
                          "isTestable": {
                            "type": "boolean"
                          },
                          "hasConfiguration": {
                            "type": "boolean"
                          },
                          "metadata": {
                            "type": "object",
                            "additionalProperties": {}
                          },
                          "contexts": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "status": {
                            "type": "string"
                          },
                          "assets": {
                            "type": "array",
                            "items": {}
                          },
                          "doc": {
                            "type": "string"
                          },
                          "firstPartyAlternative": {},
                          "deprecationDate": {},
                          "altIsSentryApp": {},
                          "enabled": {
                            "type": "boolean"
                          },
                          "version": {
                            "type": "string"
                          },
                          "author": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "isDeprecated": {
                            "type": "boolean"
                          },
                          "isHidden": {
                            "type": "boolean"
                          },
                          "description": {
                            "type": "string"
                          },
                          "features": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "featureDescriptions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "resourceLinks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "required": [
                          "altIsSentryApp",
                          "assets",
                          "author",
                          "canDisable",
                          "contexts",
                          "deprecationDate",
                          "description",
                          "doc",
                          "enabled",
                          "featureDescriptions",
                          "features",
                          "firstPartyAlternative",
                          "hasConfiguration",
                          "id",
                          "isDeprecated",
                          "isHidden",
                          "isTestable",
                          "metadata",
                          "name",
                          "resourceLinks",
                          "shortName",
                          "slug",
                          "status",
                          "type",
                          "version"
                        ]
                      }
                    },
                    "platforms": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "processingIssues": {
                      "type": "integer"
                    },
                    "defaultEnvironment": {
                      "type": "string",
                      "nullable": true
                    },
                    "relayPiiConfig": {
                      "type": "string",
                      "nullable": true
                    },
                    "builtinSymbolSources": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dynamicSamplingBiases": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      }
                    },
                    "eventProcessing": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "boolean"
                      }
                    },
                    "symbolSources": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "access",
                    "allowedDomains",
                    "avatar",
                    "builtinSymbolSources",
                    "color",
                    "dataScrubber",
                    "dataScrubberDefaults",
                    "dateCreated",
                    "defaultEnvironment",
                    "digestsMaxDelay",
                    "digestsMinDelay",
                    "dynamicSamplingBiases",
                    "eventProcessing",
                    "features",
                    "fingerprintingRules",
                    "firstEvent",
                    "firstTransactionEvent",
                    "groupingAutoUpdate",
                    "groupingConfig",
                    "groupingEnhancements",
                    "groupingEnhancementsBase",
                    "hasAccess",
                    "hasMinifiedStackTrace",
                    "hasMonitors",
                    "hasProfiles",
                    "hasReplays",
                    "hasSessions",
                    "id",
                    "isBookmarked",
                    "isInternal",
                    "isMember",
                    "isPublic",
                    "latestRelease",
                    "name",
                    "options",
                    "organization",
                    "platform",
                    "platforms",
                    "plugins",
                    "processingIssues",
                    "relayPiiConfig",
                    "resolveAge",
                    "safeFields",
                    "scrapeJavaScript",
                    "scrubIPAddresses",
                    "secondaryGroupingConfig",
                    "secondaryGroupingExpiry",
                    "securityToken",
                    "securityTokenHeader",
                    "sensitiveFields",
                    "slug",
                    "status",
                    "storeCrashReports",
                    "subjectPrefix",
                    "subjectTemplate",
                    "symbolSources",
                    "team",
                    "teams",
                    "verifySSL"
                  ]
                },
                "examples": {
                  "GetDetailedViewAboutAProject": {
                    "value": {
                      "id": "4505278496",
                      "slug": "pump-station",
                      "name": "Pump Station",
                      "platform": "python",
                      "dateCreated": "2021-01-14T22:08:52.711809Z",
                      "isBookmarked": false,
                      "isMember": true,
                      "features": [
                        "alert-filters",
                        "custom-inbound-filters",
                        "data-forwarding",
                        "discard-groups",
                        "minidump",
                        "race-free-group-creation",
                        "rate-limits",
                        "servicehooks",
                        "similarity-indexing",
                        "similarity-view",
                        "span-metrics-extraction",
                        "releases"
                      ],
                      "firstEvent": "2021-01-14T22:08:52.711809Z",
                      "firstTransactionEvent": true,
                      "access": [
                        "project:releases",
                        "event:read",
                        "project:read",
                        "member:read",
                        "team:read",
                        "event:write",
                        "org:read",
                        "alerts:read"
                      ],
                      "hasAccess": true,
                      "hasMinifiedStackTrace": false,
                      "hasMonitors": true,
                      "hasProfiles": true,
                      "hasReplays": false,
                      "hasSessions": true,
                      "isInternal": true,
                      "isPublic": false,
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "color": "#3fbf67",
                      "status": "active",
                      "team": {
                        "id": "2",
                        "name": "Powerful Abolitionist",
                        "slug": "powerful-abolitionist"
                      },
                      "teams": [
                        {
                          "id": "2",
                          "name": "Powerful Abolitionist",
                          "slug": "powerful-abolitionist"
                        }
                      ],
                      "latestRelease": {
                        "version": "backend@3e90a5d9e767ebcfa70e921d7a7ff6c037461168"
                      },
                      "options": {
                        "sentry:grouping_auto_update": false,
                        "sentry:span_description_cluster_rules": [],
                        "sentry:transaction_name_cluster_rules": [],
                        "digests:mail:maximum_delay": 600,
                        "sentry:scrub_defaults": false,
                        "sentry:scrape_javascript": true,
                        "mail:subject_prefix": "",
                        "sentry:relay_pii_config": null,
                        "sentry:scrub_data": false,
                        "sentry:token": "e84c8c0fb1c121e988558785885f9cde",
                        "sentry:resolve_age": 168,
                        "sentry:grouping_config": "newstyle:2023-01-11",
                        "quotas:spike-protection-disabled": false,
                        "sentry:store_crash_reports": 5,
                        "digests:mail:minimum_delay": 180,
                        "sentry:secondary_grouping_config": "newstyle:2019-10-29",
                        "sentry:secondary_grouping_expiry": 147555024,
                        "sentry:builtin_symbol_sources": [
                          "ios",
                          "android",
                          "chromium"
                        ],
                        "sentry:origins": [
                          "getsentry.com",
                          "app.getsentry.com",
                          "www.getsentry.com",
                          "sentry.io"
                        ],
                        "sentry:sensitive_fields": [
                          "sudo"
                        ],
                        "sentry:scrub_ip_address": false,
                        "sentry:default_environment": "prod",
                        "sentry:verify_ssl": true,
                        "sentry:csp_ignored_sources_defaults": true,
                        "sentry:csp_ignored_sources": "",
                        "sentry:reprocessing_active": false,
                        "filters:blacklisted_ips": "",
                        "filters:react-hydration-errors": true,
                        "filters:releases": "",
                        "filters:error_messages": "",
                        "feedback:branding": true
                      },
                      "digestsMinDelay": 180,
                      "digestsMaxDelay": 600,
                      "subjectPrefix": "",
                      "allowedDomains": [
                        "getsentry.com",
                        "app.getsentry.com",
                        "www.getsentry.com",
                        "sentry.io"
                      ],
                      "resolveAge": 168,
                      "dataScrubber": false,
                      "dataScrubberDefaults": false,
                      "safeFields": [],
                      "storeCrashReports": 5,
                      "sensitiveFields": [
                        "sudo"
                      ],
                      "subjectTemplate": "$shortID - $title",
                      "securityToken": "e84c8c0fb1c121e988558785885f9cde",
                      "securityTokenHeader": null,
                      "verifySSL": true,
                      "scrubIPAddresses": false,
                      "scrapeJavaScript": true,
                      "groupingConfig": "newstyle:2023-01-11",
                      "groupingEnhancements": "",
                      "groupingEnhancementsBase": null,
                      "secondaryGroupingExpiry": 1687010243,
                      "secondaryGroupingConfig": "newstyle:2019-10-29",
                      "groupingAutoUpdate": false,
                      "fingerprintingRules": "",
                      "organization": {
                        "id": "1",
                        "slug": "sentry",
                        "status": {
                          "id": "active",
                          "name": "active"
                        },
                        "name": "Sentry",
                        "dateCreated": "2014-12-15T04:06:24.263571Z",
                        "isEarlyAdopter": true,
                        "require2FA": false,
                        "requireEmailVerification": false,
                        "avatar": {
                          "avatarType": "upload",
                          "avatarUuid": "24f6f762f7a7473888b259c566da5adb"
                        },
                        "features": [
                          "performance-uncompressed-assets-ingest",
                          "dashboards-rh-widget",
                          "org-subdomains",
                          "performance-db-main-thread-visible",
                          "transaction-name-mark-scrubbed-as-sanitized",
                          "sentry-pride-logo-footer",
                          "issue-list-prefetch-issue-on-hover",
                          "mep-rollout-flag",
                          "performance-issues-m-n-plus-one-db-detector",
                          "session-replay-ui",
                          "release-health-drop-sessions",
                          "alert-crash-free-metrics",
                          "performance-n-plus-one-db-queries-visible",
                          "session-replay-recording-scrubbing",
                          "profile-file-io-main-thread-visible",
                          "performance-consecutive-http-detector",
                          "profiling",
                          "symbol-sources",
                          "advanced-search",
                          "performance-n-plus-one-db-queries-post-process-group",
                          "minute-resolution-sessions",
                          "performance-transaction-name-only-search-indexed",
                          "performance-large-http-payload-detector",
                          "performance-consecutive-db-queries-ingest",
                          "business-to-team-promotion",
                          "shared-issues",
                          "performance-large-http-payload-post-process-group",
                          "promotion-be-adoption-enabled",
                          "monitors",
                          "am2-billing",
                          "project-stats",
                          "profiling-ga",
                          "performance-new-trends",
                          "performance-n-plus-one-api-calls-post-process-group",
                          "performance-db-main-thread-post-process-group",
                          "team-project-creation-all",
                          "performance-metrics-backed-transaction-summary",
                          "performance-db-main-thread-detector",
                          "issue-platform",
                          "streamline-targeting-context",
                          "performance-consecutive-db-issue",
                          "performance-consecutive-http-post-process-group",
                          "performance-n-plus-one-api-calls-detector",
                          "performance-render-blocking-asset-span-post-process-group",
                          "performance-uncompressed-assets-post-process-group",
                          "performance-issues-search",
                          "performance-slow-db-issue",
                          "performance-db-main-thread-ingest",
                          "session-replay",
                          "sql-format",
                          "performance-consecutive-db-queries-visible",
                          "slack-overage-notifications",
                          "performance-m-n-plus-one-db-queries-post-process-group",
                          "transaction-metrics-extraction",
                          "performance-consecutive-db-queries-post-process-group",
                          "performance-slow-db-query-post-process-group",
                          "session-replay-sdk-errors-only",
                          "performance-n-plus-one-db-queries-ingest",
                          "profile-image-decode-main-thread-visible",
                          "performance-issues-render-blocking-assets-detector",
                          "performance-m-n-plus-one-db-queries-ingest",
                          "anr-rate",
                          "auto-enable-codecov",
                          "ondemand-budgets",
                          "profile-file-io-main-thread-post-process-group",
                          "performance-render-blocking-asset-span-ingest",
                          "profile-json-decode-main-thread-post-process-group",
                          "onboarding-project-deletion-on-back-click",
                          "invite-members-rate-limits",
                          "transaction-name-normalize",
                          "performance-file-io-main-thread-visible",
                          "onboarding-sdk-selection",
                          "performance-span-histogram-view",
                          "performance-file-io-main-thread-ingest",
                          "metrics-extraction",
                          "profile-json-decode-main-thread-ingest",
                          "integrations-stacktrace-link",
                          "onboarding",
                          "promotion-mobperf-gift50kerr",
                          "device-classification",
                          "transaction-name-normalize-legacy",
                          "performance-slow-db-query-ingest",
                          "bundle-plan-checkout",
                          "metric-alert-chartcuterie",
                          "performance-issues-all-events-tab",
                          "discover-events-rate-limit",
                          "india-promotion",
                          "track-button-click-events",
                          "open-ai-suggestion",
                          "performance-issues-compressed-assets-detector",
                          "device-class-synthesis",
                          "profiling-billing",
                          "performance-file-io-main-thread-detector",
                          "integrations-deployment",
                          "performance-m-n-plus-one-db-queries-visible",
                          "mobile-cpu-memory-in-transactions",
                          "derive-code-mappings",
                          "performance-onboarding-checklist",
                          "performance-consecutive-http-visible",
                          "performance-n-plus-one-api-calls-ingest",
                          "performance-landing-page-stats-period",
                          "dynamic-sampling",
                          "performance-slow-db-query-visible",
                          "performance-n-plus-one-api-calls-visible",
                          "profile-image-decode-main-thread-ingest",
                          "set-grouping-config",
                          "event-attachments",
                          "open-membership",
                          "new-spike-protection",
                          "source-maps-debug-ids",
                          "paid-to-free-promotion",
                          "performance-large-http-payload-ingest",
                          "crons-issue-platform",
                          "profile-file-io-main-thread-ingest",
                          "customer-domains",
                          "performance-file-io-main-thread-post-process-group",
                          "issue-alert-fallback-targeting",
                          "performance-render-blocking-asset-span-visible",
                          "ds-sliding-window-org",
                          "performance-consecutive-http-ingest",
                          "profile-image-decode-main-thread-post-process-group",
                          "performance-mep-bannerless-ui",
                          "performance-uncompressed-assets-visible",
                          "getting-started-doc-with-product-selection",
                          "performance-large-http-payload-visible",
                          "performance-view",
                          "promotion-mobperf-discount20",
                          "performance-new-widget-designs",
                          "profile-json-decode-main-thread-visible"
                        ],
                        "links": {
                          "organizationUrl": "https://sentry.sentry.io",
                          "regionUrl": "https://us.sentry.io"
                        },
                        "hasAuthProvider": true
                      },
                      "plugins": [
                        {
                          "id": "asana",
                          "name": "Asana",
                          "slug": "asana",
                          "shortName": "Asana",
                          "type": "issue-tracking",
                          "canDisable": true,
                          "isTestable": false,
                          "hasConfiguration": true,
                          "metadata": {},
                          "contexts": [],
                          "status": "unknown",
                          "assets": [],
                          "doc": "",
                          "firstPartyAlternative": null,
                          "deprecationDate": null,
                          "altIsSentryApp": null,
                          "enabled": true,
                          "version": "23.7.0.dev0",
                          "author": {
                            "name": "Sentry Team",
                            "url": "https://github.com/getsentry/sentry"
                          },
                          "isDeprecated": false,
                          "isHidden": false,
                          "description": "\nImprove your productivity by creating tasks in Asana directly\nfrom Sentry issues. This integration also allows you to link Sentry\nissues to existing tasks in Asana.\n",
                          "features": [
                            "issue-basic"
                          ],
                          "featureDescriptions": [
                            {
                              "description": "Create and link Sentry issue groups directly to an Asana ticket in any of your\n            projects, providing a quick way to jump from a Sentry bug to tracked ticket!",
                              "featureGate": "issue-basic"
                            },
                            {
                              "description": "Link Sentry issues to existing Asana tickets.",
                              "featureGate": "issue-basic"
                            }
                          ],
                          "resourceLinks": [
                            {
                              "title": "Report Issue",
                              "url": "https://github.com/getsentry/sentry/issues"
                            },
                            {
                              "title": "View Source",
                              "url": "https://github.com/getsentry/sentry/tree/master/src/sentry_plugins"
                            }
                          ]
                        }
                      ],
                      "platforms": [
                        "native",
                        "other",
                        "python"
                      ],
                      "processingIssues": 0,
                      "defaultEnvironment": "prod",
                      "relayPiiConfig": null,
                      "builtinSymbolSources": [
                        "ios",
                        "android",
                        "chromium"
                      ],
                      "dynamicSamplingBiases": [
                        {
                          "id": "boostEnvironments",
                          "active": true
                        },
                        {
                          "id": "boostLatestRelease",
                          "active": true
                        },
                        {
                          "id": "ignoreHealthChecks",
                          "active": true
                        },
                        {
                          "id": "boostKeyTransactions",
                          "active": true
                        },
                        {
                          "id": "boostLowVolumeTransactions",
                          "active": true
                        },
                        {
                          "id": "boostReplayId",
                          "active": true
                        },
                        {
                          "id": "recalibrationRule",
                          "active": true
                        }
                      ],
                      "eventProcessing": {
                        "symbolicationDegraded": false
                      },
                      "symbolSources": "[]"
                    },
                    "summary": "Get detailed view about a Project"
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "operationId": "Delete a Project",
        "description": "Schedules a project for deletion.\n\nDeletion happens asynchronously and therefore is not immediate. However once deletion has\nbegun the state of a project changes and will be hidden from most public views.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          }
        ],
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/events/{event_id}/source-map-debug/": {
      "get": {
        "operationId": "Debug Issues Related to Source Maps for a Given Event",
        "description": "Return a list of source map errors for a given event.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "event_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The id of the event.",
            "required": true
          },
          {
            "in": "query",
            "name": "frame_idx",
            "schema": {
              "type": "integer"
            },
            "description": "Index of the frame that should be used for source map resolution.",
            "required": true
          },
          {
            "in": "query",
            "name": "exception_idx",
            "schema": {
              "type": "integer"
            },
            "description": "Index of the exception that should be used for source map resolution.",
            "required": true
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "additionalProperties": {},
                            "nullable": true
                          }
                        },
                        "required": [
                          "data",
                          "message",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "errors"
                  ]
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/filters/{filter_id}/": {
      "put": {
        "operationId": "Update an Inbound Data Filter",
        "description": "Update various inbound data filters for a project.\n\nNote that the hydration filter and custom inbound\nfilters must be updated using the [Update a\nProject](https://docs.sentry.io/api/projects/update-a-project/) endpoint.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "filter_id",
            "schema": {
              "type": "string"
            },
            "description": "The type of filter toggle to update. The options are:\n- `browser-extensions`: Filter out errors known to be caused by browser extensions.\n- `localhost`: Filter out events coming from localhost. This applies to both IPv4 (``127.0.0.1``)\nand IPv6 (``::1``) addresses.\n- `filtered-transaction`: Filter out transactions for healthcheck and ping endpoints.\n- `web-crawlers`: Filter out known web crawlers. Some crawlers may execute pages in incompatible\nways which cause errors that are unlikely to be seen by a normal user.\n- `legacy-browser`: Filter out known errors from legacy browsers. Older browsers often give less\naccurate information, and while they may report valid issues, the context to understand them is\nincorrect or missing.\n",
            "required": true
          },
          {
            "in": "query",
            "name": "active",
            "schema": {
              "type": "boolean"
            },
            "description": "Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off."
          },
          {
            "in": "query",
            "name": "subfilters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "\nSpecifies which legacy browser filters should be active. Anything excluded from the list will be\ndisabled. The options are:\n- `ie_pre_9`: Internet Explorer Version 8 and lower\n- `ie9`: Internet Explorer Version 9\n- `ie10`: Internet Explorer Version 10\n- `ie11`: Internet Explorer Version 11\n- `safari_pre_6`: Safari Version 5 and lower\n- `opera_pre_15`: Opera Version 14 and lower\n- `opera_mini_pre_8`: Opera Mini Version 8 and lower\n- `android_pre_4`: Android Version 3 and lower\n"
          }
        ],
        "tags": [
          "Projects"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "string"
                  },
                  "subfilters": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "subfilters"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/keys/": {
      "get": {
        "operationId": "List a Project's Client Keys",
        "description": "Return a list of client keys bound to a project.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results."
          }
        ],
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "This represents a Sentry Project Client Key.",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "public": {
                        "type": "string",
                        "nullable": true
                      },
                      "secret": {
                        "type": "string",
                        "nullable": true
                      },
                      "projectId": {
                        "type": "integer"
                      },
                      "isActive": {
                        "type": "boolean"
                      },
                      "rateLimit": {
                        "type": "object",
                        "properties": {
                          "window": {
                            "type": "integer"
                          },
                          "count": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "count",
                          "window"
                        ],
                        "nullable": true
                      },
                      "dsn": {
                        "type": "object",
                        "properties": {
                          "secret": {
                            "type": "string"
                          },
                          "public": {
                            "type": "string"
                          },
                          "csp": {
                            "type": "string"
                          },
                          "security": {
                            "type": "string"
                          },
                          "minidump": {
                            "type": "string"
                          },
                          "unreal": {
                            "type": "string"
                          },
                          "cdn": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "cdn",
                          "csp",
                          "minidump",
                          "public",
                          "secret",
                          "security",
                          "unreal"
                        ]
                      },
                      "browserSdkVersion": {
                        "type": "string"
                      },
                      "browserSdk": {
                        "type": "object",
                        "properties": {
                          "choices": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "required": [
                          "choices"
                        ]
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "dynamicSdkLoaderOptions": {
                        "type": "object",
                        "properties": {
                          "hasReplay": {
                            "type": "boolean"
                          },
                          "hasPerformance": {
                            "type": "boolean"
                          },
                          "hasDebug": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "hasDebug",
                          "hasPerformance",
                          "hasReplay"
                        ]
                      }
                    },
                    "required": [
                      "browserSdk",
                      "browserSdkVersion",
                      "dateCreated",
                      "dsn",
                      "dynamicSdkLoaderOptions",
                      "id",
                      "isActive",
                      "label",
                      "name",
                      "projectId",
                      "public",
                      "rateLimit",
                      "secret"
                    ]
                  }
                },
                "examples": {
                  "ListClientKeysForAProject": {
                    "value": [
                      {
                        "id": "60120449b6b1d5e45f75561e6dabd80b",
                        "name": "Liked Pegasus",
                        "label": "Liked Pegasus",
                        "public": "60120449b6b1d5e45f75561e6dabd80b",
                        "secret": "189485c3b8ccf582bf5e12c530ef8858",
                        "projectId": 4505281256090153,
                        "isActive": true,
                        "rateLimit": {
                          "window": 7200,
                          "count": 1000
                        },
                        "dsn": {
                          "secret": "https://a785682ddda742d7a8a4088810e67701:bcd99b3790b3441c85ce4b1eaa854f66@o4504765715316736.ingest.sentry.io/4505281256090153",
                          "public": "https://a785682ddda742d7a8a4088810e67791@o4504765715316736.ingest.sentry.io/4505281256090153",
                          "csp": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/csp-report/?sentry_key=a785682ddda719b7a8a4011110d75598",
                          "security": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/security/?sentry_key=a785682ddda719b7a8a4011110d75598",
                          "minidump": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/minidump/?sentry_key=a785682ddda719b7a8a4011110d75598",
                          "unreal": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/unreal/a785682ddda719b7a8a4011110d75598/",
                          "cdn": "https://js.sentry-cdn.com/a785682ddda719b7a8a4011110d75598.min.js"
                        },
                        "browserSdkVersion": "7.x",
                        "browserSdk": {
                          "choices": [
                            [
                              "latest",
                              "latest"
                            ],
                            [
                              "7.x",
                              "7.x"
                            ]
                          ]
                        },
                        "dateCreated": "2023-06-21T19:50:26.036254Z",
                        "dynamicSdkLoaderOptions": {
                          "hasReplay": true,
                          "hasPerformance": true,
                          "hasDebug": true
                        }
                      },
                      {
                        "id": "da8d69cb17e80677b76e08fde4656b93",
                        "name": "Bold Oarfish",
                        "label": "Bold Oarfish",
                        "public": "da8d69cb17e80677b76e08fde4656b93",
                        "secret": "5c241ebc42ccfbec281cbefbedc7ab96",
                        "projectId": 4505281256090153,
                        "isActive": true,
                        "rateLimit": null,
                        "dsn": {
                          "secret": "https://a785682ddda742d7a8a4088810e67701:bcd99b3790b3441c85ce4b1eaa854f66@o4504765715316736.ingest.sentry.io/4505281256090153",
                          "public": "https://a785682ddda742d7a8a4088810e67791@o4504765715316736.ingest.sentry.io/4505281256090153",
                          "csp": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/csp-report/?sentry_key=a785682ddda719b7a8a4011110d75598",
                          "security": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/security/?sentry_key=a785682ddda719b7a8a4011110d75598",
                          "minidump": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/minidump/?sentry_key=a785682ddda719b7a8a4011110d75598",
                          "unreal": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/unreal/a785682ddda719b7a8a4011110d75598/",
                          "cdn": "https://js.sentry-cdn.com/a785682ddda719b7a8a4011110d75598.min.js"
                        },
                        "browserSdkVersion": "7.x",
                        "browserSdk": {
                          "choices": [
                            [
                              "latest",
                              "latest"
                            ],
                            [
                              "7.x",
                              "7.x"
                            ]
                          ]
                        },
                        "dateCreated": "2023-06-21T18:17:52.707298Z",
                        "dynamicSdkLoaderOptions": {
                          "hasReplay": true,
                          "hasPerformance": true,
                          "hasDebug": false
                        }
                      }
                    ],
                    "summary": "List Client Keys for a Project"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "operationId": "Create a New Client Key",
        "description": "Create a new client key bound to a project.  The key's secret and public key\nare generated by the server.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "The optional name of the key. If not provided a name will be automatically generated"
          }
        ],
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:write"
            ]
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This represents a Sentry Project Client Key.",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "public": {
                      "type": "string",
                      "nullable": true
                    },
                    "secret": {
                      "type": "string",
                      "nullable": true
                    },
                    "projectId": {
                      "type": "integer"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "rateLimit": {
                      "type": "object",
                      "properties": {
                        "window": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "count",
                        "window"
                      ],
                      "nullable": true
                    },
                    "dsn": {
                      "type": "object",
                      "properties": {
                        "secret": {
                          "type": "string"
                        },
                        "public": {
                          "type": "string"
                        },
                        "csp": {
                          "type": "string"
                        },
                        "security": {
                          "type": "string"
                        },
                        "minidump": {
                          "type": "string"
                        },
                        "unreal": {
                          "type": "string"
                        },
                        "cdn": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "cdn",
                        "csp",
                        "minidump",
                        "public",
                        "secret",
                        "security",
                        "unreal"
                      ]
                    },
                    "browserSdkVersion": {
                      "type": "string"
                    },
                    "browserSdk": {
                      "type": "object",
                      "properties": {
                        "choices": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "choices"
                      ]
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "dynamicSdkLoaderOptions": {
                      "type": "object",
                      "properties": {
                        "hasReplay": {
                          "type": "boolean"
                        },
                        "hasPerformance": {
                          "type": "boolean"
                        },
                        "hasDebug": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "hasDebug",
                        "hasPerformance",
                        "hasReplay"
                      ]
                    }
                  },
                  "required": [
                    "browserSdk",
                    "browserSdkVersion",
                    "dateCreated",
                    "dsn",
                    "dynamicSdkLoaderOptions",
                    "id",
                    "isActive",
                    "label",
                    "name",
                    "projectId",
                    "public",
                    "rateLimit",
                    "secret"
                  ]
                },
                "examples": {
                  "ClientKeyWithRateLimiting": {
                    "value": {
                      "id": "60120449b6b1d5e45f75561e6dabd80b",
                      "name": "Liked Pegasus",
                      "label": "Liked Pegasus",
                      "public": "60120449b6b1d5e45f75561e6dabd80b",
                      "secret": "189485c3b8ccf582bf5e12c530ef8858",
                      "projectId": 4505281256090153,
                      "isActive": true,
                      "rateLimit": {
                        "window": 7200,
                        "count": 1000
                      },
                      "dsn": {
                        "secret": "https://a785682ddda742d7a8a4088810e67701:bcd99b3790b3441c85ce4b1eaa854f66@o4504765715316736.ingest.sentry.io/4505281256090153",
                        "public": "https://a785682ddda742d7a8a4088810e67791@o4504765715316736.ingest.sentry.io/4505281256090153",
                        "csp": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/csp-report/?sentry_key=a785682ddda719b7a8a4011110d75598",
                        "security": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/security/?sentry_key=a785682ddda719b7a8a4011110d75598",
                        "minidump": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/minidump/?sentry_key=a785682ddda719b7a8a4011110d75598",
                        "unreal": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/unreal/a785682ddda719b7a8a4011110d75598/",
                        "cdn": "https://js.sentry-cdn.com/a785682ddda719b7a8a4011110d75598.min.js"
                      },
                      "browserSdkVersion": "7.x",
                      "browserSdk": {
                        "choices": [
                          [
                            "latest",
                            "latest"
                          ],
                          [
                            "7.x",
                            "7.x"
                          ]
                        ]
                      },
                      "dateCreated": "2023-06-21T19:50:26.036254Z",
                      "dynamicSdkLoaderOptions": {
                        "hasReplay": true,
                        "hasPerformance": true,
                        "hasDebug": true
                      }
                    },
                    "summary": "Client key with rate limiting"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/keys/{key_id}/": {
      "get": {
        "operationId": "Retrieve a Client Key",
        "description": "Return a client key bound to a project.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "key_id",
            "schema": {
              "type": "string"
            },
            "description": "The ID of the client key",
            "required": true
          }
        ],
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This represents a Sentry Project Client Key.",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "public": {
                      "type": "string",
                      "nullable": true
                    },
                    "secret": {
                      "type": "string",
                      "nullable": true
                    },
                    "projectId": {
                      "type": "integer"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "rateLimit": {
                      "type": "object",
                      "properties": {
                        "window": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "count",
                        "window"
                      ],
                      "nullable": true
                    },
                    "dsn": {
                      "type": "object",
                      "properties": {
                        "secret": {
                          "type": "string"
                        },
                        "public": {
                          "type": "string"
                        },
                        "csp": {
                          "type": "string"
                        },
                        "security": {
                          "type": "string"
                        },
                        "minidump": {
                          "type": "string"
                        },
                        "unreal": {
                          "type": "string"
                        },
                        "cdn": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "cdn",
                        "csp",
                        "minidump",
                        "public",
                        "secret",
                        "security",
                        "unreal"
                      ]
                    },
                    "browserSdkVersion": {
                      "type": "string"
                    },
                    "browserSdk": {
                      "type": "object",
                      "properties": {
                        "choices": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "choices"
                      ]
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "dynamicSdkLoaderOptions": {
                      "type": "object",
                      "properties": {
                        "hasReplay": {
                          "type": "boolean"
                        },
                        "hasPerformance": {
                          "type": "boolean"
                        },
                        "hasDebug": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "hasDebug",
                        "hasPerformance",
                        "hasReplay"
                      ]
                    }
                  },
                  "required": [
                    "browserSdk",
                    "browserSdkVersion",
                    "dateCreated",
                    "dsn",
                    "dynamicSdkLoaderOptions",
                    "id",
                    "isActive",
                    "label",
                    "name",
                    "projectId",
                    "public",
                    "rateLimit",
                    "secret"
                  ]
                },
                "examples": {
                  "ClientKeyWithRateLimiting": {
                    "value": {
                      "id": "60120449b6b1d5e45f75561e6dabd80b",
                      "name": "Liked Pegasus",
                      "label": "Liked Pegasus",
                      "public": "60120449b6b1d5e45f75561e6dabd80b",
                      "secret": "189485c3b8ccf582bf5e12c530ef8858",
                      "projectId": 4505281256090153,
                      "isActive": true,
                      "rateLimit": {
                        "window": 7200,
                        "count": 1000
                      },
                      "dsn": {
                        "secret": "https://a785682ddda742d7a8a4088810e67701:bcd99b3790b3441c85ce4b1eaa854f66@o4504765715316736.ingest.sentry.io/4505281256090153",
                        "public": "https://a785682ddda742d7a8a4088810e67791@o4504765715316736.ingest.sentry.io/4505281256090153",
                        "csp": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/csp-report/?sentry_key=a785682ddda719b7a8a4011110d75598",
                        "security": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/security/?sentry_key=a785682ddda719b7a8a4011110d75598",
                        "minidump": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/minidump/?sentry_key=a785682ddda719b7a8a4011110d75598",
                        "unreal": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/unreal/a785682ddda719b7a8a4011110d75598/",
                        "cdn": "https://js.sentry-cdn.com/a785682ddda719b7a8a4011110d75598.min.js"
                      },
                      "browserSdkVersion": "7.x",
                      "browserSdk": {
                        "choices": [
                          [
                            "latest",
                            "latest"
                          ],
                          [
                            "7.x",
                            "7.x"
                          ]
                        ]
                      },
                      "dateCreated": "2023-06-21T19:50:26.036254Z",
                      "dynamicSdkLoaderOptions": {
                        "hasReplay": true,
                        "hasPerformance": true,
                        "hasDebug": true
                      }
                    },
                    "summary": "Client key with rate limiting"
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "operationId": "Update a Client Key",
        "description": "Update a client key.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "key_id",
            "schema": {
              "type": "string"
            },
            "description": "The ID of the key to update.",
            "required": true
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "The name for the client key"
          },
          {
            "in": "query",
            "name": "isActive",
            "schema": {
              "type": "boolean"
            },
            "description": "Activate or deactivate the client key."
          },
          {
            "in": "query",
            "name": "rateLimit",
            "schema": {
              "type": "object",
              "properties": {
                "window": {
                  "type": "integer"
                },
                "count": {
                  "type": "integer"
                }
              }
            },
            "description": "\nApplies a rate limit to cap the number of errors accepted during a given time window. To\ndisable entirely set `rateLimit` to null.\n```json\n{\n    \"rateLimit\": {\n        \"window\": 7200, // time in seconds\n        \"count\": 1000 // error cap\n    }\n}\n```\n        "
          },
          {
            "in": "query",
            "name": "browserSdkVersion",
            "schema": {
              "type": "string"
            },
            "description": "\nThe Sentry Javascript SDK version to use. The currently supported options are:\n- `7.x`\n- `latest`\n"
          },
          {
            "in": "query",
            "name": "dynamicSdkLoaderOptions",
            "schema": {
              "type": "object",
              "properties": {
                "hasReplay": {
                  "type": "boolean"
                },
                "hasPerformance": {
                  "type": "boolean"
                },
                "hasDebug": {
                  "type": "boolean"
                }
              }
            },
            "description": "\nConfigures multiple options for the Javascript Loader Script.\n- `Performance Monitoring`\n- `Debug Bundles & Logging`\n- `Session Replay`: Note that the loader will load the ES6 bundle instead of the ES5 bundle.\n```json\n{\n    \"dynamicSdkLoaderOptions\": {\n        \"hasReplay\": true,\n        \"hasPerformance\": true,\n        \"hasDebug\": true\n    }\n}\n```\n"
          }
        ],
        "tags": [
          "Projects"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 64
                  },
                  "public": {
                    "type": "string",
                    "nullable": true,
                    "pattern": "^[a-f0-9]{32}$"
                  },
                  "secret": {
                    "type": "string",
                    "nullable": true,
                    "pattern": "^[a-f0-9]{32}$"
                  },
                  "rateLimit": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "minimum": 0,
                            "nullable": true
                          },
                          "window": {
                            "type": "integer",
                            "maximum": 86400,
                            "minimum": 0,
                            "nullable": true
                          }
                        }
                      }
                    ],
                    "nullable": true
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "browserSdkVersion": {
                    "enum": [
                      "latest",
                      "7.x",
                      "6.x",
                      "5.x",
                      "4.x"
                    ],
                    "type": "string",
                    "description": "* `latest` - latest\n* `7.x` - 7.x\n* `6.x` - 6.x\n* `5.x` - 5.x\n* `4.x` - 4.x"
                  },
                  "dynamicSdkLoaderOptions": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "hasReplay": {
                            "type": "boolean"
                          },
                          "hasPerformance": {
                            "type": "boolean"
                          },
                          "hasDebug": {
                            "type": "boolean"
                          }
                        }
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This represents a Sentry Project Client Key.",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "public": {
                      "type": "string",
                      "nullable": true
                    },
                    "secret": {
                      "type": "string",
                      "nullable": true
                    },
                    "projectId": {
                      "type": "integer"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "rateLimit": {
                      "type": "object",
                      "properties": {
                        "window": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "count",
                        "window"
                      ],
                      "nullable": true
                    },
                    "dsn": {
                      "type": "object",
                      "properties": {
                        "secret": {
                          "type": "string"
                        },
                        "public": {
                          "type": "string"
                        },
                        "csp": {
                          "type": "string"
                        },
                        "security": {
                          "type": "string"
                        },
                        "minidump": {
                          "type": "string"
                        },
                        "unreal": {
                          "type": "string"
                        },
                        "cdn": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "cdn",
                        "csp",
                        "minidump",
                        "public",
                        "secret",
                        "security",
                        "unreal"
                      ]
                    },
                    "browserSdkVersion": {
                      "type": "string"
                    },
                    "browserSdk": {
                      "type": "object",
                      "properties": {
                        "choices": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "choices"
                      ]
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "dynamicSdkLoaderOptions": {
                      "type": "object",
                      "properties": {
                        "hasReplay": {
                          "type": "boolean"
                        },
                        "hasPerformance": {
                          "type": "boolean"
                        },
                        "hasDebug": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "hasDebug",
                        "hasPerformance",
                        "hasReplay"
                      ]
                    }
                  },
                  "required": [
                    "browserSdk",
                    "browserSdkVersion",
                    "dateCreated",
                    "dsn",
                    "dynamicSdkLoaderOptions",
                    "id",
                    "isActive",
                    "label",
                    "name",
                    "projectId",
                    "public",
                    "rateLimit",
                    "secret"
                  ]
                },
                "examples": {
                  "ClientKeyWithRateLimiting": {
                    "value": {
                      "id": "60120449b6b1d5e45f75561e6dabd80b",
                      "name": "Liked Pegasus",
                      "label": "Liked Pegasus",
                      "public": "60120449b6b1d5e45f75561e6dabd80b",
                      "secret": "189485c3b8ccf582bf5e12c530ef8858",
                      "projectId": 4505281256090153,
                      "isActive": true,
                      "rateLimit": {
                        "window": 7200,
                        "count": 1000
                      },
                      "dsn": {
                        "secret": "https://a785682ddda742d7a8a4088810e67701:bcd99b3790b3441c85ce4b1eaa854f66@o4504765715316736.ingest.sentry.io/4505281256090153",
                        "public": "https://a785682ddda742d7a8a4088810e67791@o4504765715316736.ingest.sentry.io/4505281256090153",
                        "csp": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/csp-report/?sentry_key=a785682ddda719b7a8a4011110d75598",
                        "security": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/security/?sentry_key=a785682ddda719b7a8a4011110d75598",
                        "minidump": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/minidump/?sentry_key=a785682ddda719b7a8a4011110d75598",
                        "unreal": "https://o4504765715316736.ingest.sentry.io/api/4505281256090153/unreal/a785682ddda719b7a8a4011110d75598/",
                        "cdn": "https://js.sentry-cdn.com/a785682ddda719b7a8a4011110d75598.min.js"
                      },
                      "browserSdkVersion": "7.x",
                      "browserSdk": {
                        "choices": [
                          [
                            "latest",
                            "latest"
                          ],
                          [
                            "7.x",
                            "7.x"
                          ]
                        ]
                      },
                      "dateCreated": "2023-06-21T19:50:26.036254Z",
                      "dynamicSdkLoaderOptions": {
                        "hasReplay": true,
                        "hasPerformance": true,
                        "hasDebug": true
                      }
                    },
                    "summary": "Client key with rate limiting"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "operationId": "Delete a Client Key",
        "description": "Delete a client key for a given project.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "key_id",
            "schema": {
              "type": "string"
            },
            "description": "The ID of the key to delete.",
            "required": true
          }
        ],
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/teams/{team_slug}/": {
      "post": {
        "operationId": "Add a Team to a Project",
        "description": "Give a team access to a project.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "team_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the team the resource belongs to.",
            "required": true
          }
        ],
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:write"
            ]
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stats": {},
                    "transactionStats": {},
                    "sessionStats": {},
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "firstEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "firstTransactionEvent": {
                      "type": "boolean"
                    },
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "hasMinifiedStackTrace": {
                      "type": "boolean"
                    },
                    "hasMonitors": {
                      "type": "boolean"
                    },
                    "hasProfiles": {
                      "type": "boolean"
                    },
                    "hasReplays": {
                      "type": "boolean"
                    },
                    "hasSessions": {
                      "type": "boolean"
                    },
                    "isInternal": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "avatarType",
                        "avatarUuid"
                      ]
                    },
                    "color": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "team": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "slug"
                      ]
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "slug"
                        ]
                      }
                    }
                  },
                  "required": [
                    "access",
                    "avatar",
                    "color",
                    "dateCreated",
                    "features",
                    "firstEvent",
                    "firstTransactionEvent",
                    "hasAccess",
                    "hasMinifiedStackTrace",
                    "hasMonitors",
                    "hasProfiles",
                    "hasReplays",
                    "hasSessions",
                    "id",
                    "isBookmarked",
                    "isInternal",
                    "isMember",
                    "isPublic",
                    "name",
                    "platform",
                    "slug",
                    "status",
                    "team",
                    "teams"
                  ]
                },
                "examples": {
                  "GiveATeamAccessToAProject": {
                    "value": {
                      "id": "6758470122493650",
                      "slug": "The Spoiled Yoghurt",
                      "name": "the-spoiled-yoghurt",
                      "platform": "javascript",
                      "dateCreated": "2023-03-29T15:25:21.344565Z",
                      "isBookmarked": false,
                      "isMember": true,
                      "features": [
                        "alert-filters",
                        "custom-inbound-filters",
                        "data-forwarding",
                        "discard-groups",
                        "minidump",
                        "race-free-group-creation",
                        "rate-limits",
                        "servicehooks",
                        "similarity-indexing",
                        "similarity-view"
                      ],
                      "firstEvent": null,
                      "firstTransactionEvent": true,
                      "access": [
                        "project:read",
                        "event:read",
                        "team:read",
                        "alerts:read",
                        "org:read",
                        "event:write",
                        "project:releases",
                        "member:read"
                      ],
                      "hasAccess": true,
                      "hasMinifiedStackTrace": false,
                      "hasMonitors": false,
                      "hasProfiles": false,
                      "hasReplays": false,
                      "hasSessions": false,
                      "isInternal": false,
                      "isPublic": false,
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "color": "#5cbf3f",
                      "status": "active",
                      "team": {
                        "id": "2349234102",
                        "name": "Prime Mover",
                        "slug": "prime-mover"
                      },
                      "teams": [
                        {
                          "id": "2349234102",
                          "name": "Prime Mover",
                          "slug": "prime-mover"
                        },
                        {
                          "id": "47584447",
                          "name": "Powerful Abolitionist",
                          "slug": "powerful-abolitionist"
                        }
                      ]
                    },
                    "summary": "Give a Team Access to a Project"
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "operationId": "Delete a Team from a Project",
        "description": "Revoke a team's access to a project.\n\nNote that Team Admins can only revoke access to teams they are admins of.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "project_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the project the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "team_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the team the resource belongs to.",
            "required": true
          }
        ],
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stats": {},
                    "transactionStats": {},
                    "sessionStats": {},
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "firstEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "firstTransactionEvent": {
                      "type": "boolean"
                    },
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "hasMinifiedStackTrace": {
                      "type": "boolean"
                    },
                    "hasMonitors": {
                      "type": "boolean"
                    },
                    "hasProfiles": {
                      "type": "boolean"
                    },
                    "hasReplays": {
                      "type": "boolean"
                    },
                    "hasSessions": {
                      "type": "boolean"
                    },
                    "isInternal": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "avatarType",
                        "avatarUuid"
                      ]
                    },
                    "color": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "team": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "slug"
                      ]
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "slug"
                        ]
                      }
                    }
                  },
                  "required": [
                    "access",
                    "avatar",
                    "color",
                    "dateCreated",
                    "features",
                    "firstEvent",
                    "firstTransactionEvent",
                    "hasAccess",
                    "hasMinifiedStackTrace",
                    "hasMonitors",
                    "hasProfiles",
                    "hasReplays",
                    "hasSessions",
                    "id",
                    "isBookmarked",
                    "isInternal",
                    "isMember",
                    "isPublic",
                    "name",
                    "platform",
                    "slug",
                    "status",
                    "team",
                    "teams"
                  ]
                },
                "examples": {
                  "RevokeATeam'sAccessToAProject": {
                    "value": {
                      "id": "6758470122493650",
                      "slug": "The Spoiled Yoghurt",
                      "name": "the-spoiled-yoghurt",
                      "platform": "javascript",
                      "dateCreated": "2023-03-29T15:25:21.344565Z",
                      "isBookmarked": false,
                      "isMember": true,
                      "features": [
                        "alert-filters",
                        "custom-inbound-filters",
                        "data-forwarding",
                        "discard-groups",
                        "minidump",
                        "race-free-group-creation",
                        "rate-limits",
                        "servicehooks",
                        "similarity-indexing",
                        "similarity-view"
                      ],
                      "firstEvent": null,
                      "firstTransactionEvent": true,
                      "access": [
                        "project:read",
                        "event:read",
                        "team:read",
                        "alerts:read",
                        "org:read",
                        "event:write",
                        "project:releases",
                        "member:read"
                      ],
                      "hasAccess": true,
                      "hasMinifiedStackTrace": false,
                      "hasMonitors": false,
                      "hasProfiles": false,
                      "hasReplays": false,
                      "hasSessions": false,
                      "isInternal": false,
                      "isPublic": false,
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "color": "#5cbf3f",
                      "status": "active",
                      "team": {
                        "id": "2349234102",
                        "name": "Prime Mover",
                        "slug": "prime-mover"
                      },
                      "teams": [
                        {
                          "id": "2349234102",
                          "name": "Prime Mover",
                          "slug": "prime-mover"
                        }
                      ]
                    },
                    "summary": "Revoke a Team's Access to a Project"
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/0/teams/{organization_slug}/{team_slug}/projects/": {
      "get": {
        "operationId": "List a Team's Projects",
        "description": "Return a list of projects bound to a team.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "team_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the team the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results."
          }
        ],
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:read",
              "project:write"
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "latestDeploys": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "nullable": true
                      },
                      "stats": {},
                      "transactionStats": {},
                      "sessionStats": {},
                      "id": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "platform": {
                        "type": "string",
                        "nullable": true
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "isBookmarked": {
                        "type": "boolean"
                      },
                      "isMember": {
                        "type": "boolean"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "firstEvent": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "firstTransactionEvent": {
                        "type": "boolean"
                      },
                      "access": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "hasAccess": {
                        "type": "boolean"
                      },
                      "hasMinifiedStackTrace": {
                        "type": "boolean"
                      },
                      "hasMonitors": {
                        "type": "boolean"
                      },
                      "hasProfiles": {
                        "type": "boolean"
                      },
                      "hasReplays": {
                        "type": "boolean"
                      },
                      "hasSessions": {
                        "type": "boolean"
                      },
                      "team": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "slug"
                        ],
                        "nullable": true
                      },
                      "teams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "slug"
                          ]
                        }
                      },
                      "eventProcessing": {
                        "type": "object",
                        "properties": {
                          "symbolicationDegraded": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "symbolicationDegraded"
                        ]
                      },
                      "platforms": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "hasUserReports": {
                        "type": "boolean"
                      },
                      "environments": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "latestRelease": {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "version"
                        ],
                        "nullable": true
                      }
                    },
                    "required": [
                      "access",
                      "dateCreated",
                      "environments",
                      "eventProcessing",
                      "features",
                      "firstEvent",
                      "firstTransactionEvent",
                      "hasAccess",
                      "hasMinifiedStackTrace",
                      "hasMonitors",
                      "hasProfiles",
                      "hasReplays",
                      "hasSessions",
                      "hasUserReports",
                      "id",
                      "isBookmarked",
                      "isMember",
                      "latestRelease",
                      "name",
                      "platform",
                      "platforms",
                      "slug",
                      "team",
                      "teams"
                    ]
                  }
                },
                "examples": {
                  "GetListOfTeam'sProjects": {
                    "value": [
                      {
                        "team": {
                          "id": "2349234102",
                          "name": "Prime Mover",
                          "slug": "prime-mover"
                        },
                        "teams": [
                          {
                            "id": "2349234102",
                            "name": "Prime Mover",
                            "slug": "prime-mover"
                          },
                          {
                            "id": "47584447",
                            "name": "Powerful Abolitionist",
                            "slug": "powerful-abolitionist"
                          }
                        ],
                        "id": "6758470122493650",
                        "name": "the-spoiled-yoghurt",
                        "slug": "The Spoiled Yoghurt",
                        "isBookmarked": false,
                        "isMember": true,
                        "access": [
                          "project:read",
                          "event:read",
                          "team:read",
                          "alerts:read",
                          "org:read",
                          "event:write",
                          "project:releases",
                          "member:read"
                        ],
                        "hasAccess": true,
                        "dateCreated": "2023-03-29T15:25:21.344565Z",
                        "environments": [
                          "production"
                        ],
                        "eventProcessing": {
                          "symbolicationDegraded": false
                        },
                        "features": [
                          "alert-filters",
                          "custom-inbound-filters",
                          "data-forwarding",
                          "discard-groups",
                          "minidump",
                          "race-free-group-creation",
                          "rate-limits",
                          "servicehooks",
                          "similarity-indexing",
                          "similarity-indexing-v2",
                          "similarity-view",
                          "similarity-view-v2"
                        ],
                        "firstEvent": null,
                        "firstTransactionEvent": true,
                        "hasSessions": false,
                        "hasProfiles": false,
                        "hasReplays": false,
                        "hasMonitors": false,
                        "hasMinifiedStackTrace": false,
                        "platform": "node-express",
                        "platforms": [],
                        "latestRelease": null,
                        "hasUserReports": false,
                        "latestDeploys": null
                      },
                      {
                        "team": {
                          "id": "2349234102",
                          "name": "Prime Mover",
                          "slug": "prime-mover"
                        },
                        "teams": [
                          {
                            "id": "2349234102",
                            "name": "Prime Mover",
                            "slug": "prime-mover"
                          }
                        ],
                        "id": "1829334501859481",
                        "name": "Pump Station",
                        "slug": "pump-station",
                        "isBookmarked": false,
                        "isMember": true,
                        "access": [
                          "project:read",
                          "event:read",
                          "team:read",
                          "alerts:read",
                          "org:read",
                          "event:write",
                          "project:releases",
                          "member:read"
                        ],
                        "hasAccess": true,
                        "dateCreated": "2023-03-29T15:21:49.943746Z",
                        "environments": [
                          "production"
                        ],
                        "eventProcessing": {
                          "symbolicationDegraded": false
                        },
                        "features": [
                          "alert-filters",
                          "custom-inbound-filters",
                          "data-forwarding",
                          "discard-groups",
                          "minidump",
                          "race-free-group-creation",
                          "rate-limits",
                          "servicehooks",
                          "similarity-indexing",
                          "similarity-indexing-v2",
                          "similarity-view",
                          "similarity-view-v2"
                        ],
                        "firstEvent": "2023-04-05T21:02:08.054000Z",
                        "firstTransactionEvent": false,
                        "hasSessions": false,
                        "hasProfiles": false,
                        "hasReplays": false,
                        "hasMonitors": false,
                        "hasMinifiedStackTrace": true,
                        "platform": "javascript",
                        "platforms": [
                          "javascript"
                        ],
                        "latestRelease": null,
                        "hasUserReports": false,
                        "latestDeploys": null
                      }
                    ],
                    "summary": "Get list of team's projects"
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found."
          }
        }
      },
      "post": {
        "operationId": "Create a New Project",
        "description": "Create a new project bound to a team.",
        "parameters": [
          {
            "in": "path",
            "name": "organization_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the organization the resource belongs to.",
            "required": true
          },
          {
            "in": "path",
            "name": "team_slug",
            "schema": {
              "type": "string"
            },
            "description": "The slug of the team the resource belongs to.",
            "required": true
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "The name for the project.",
            "required": true
          },
          {
            "in": "query",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "description": "Optional slug for the project. If not provided a slug is generated from the name."
          },
          {
            "in": "query",
            "name": "platform",
            "schema": {
              "type": "string"
            },
            "description": "The platform for the project."
          },
          {
            "in": "query",
            "name": "default_rules",
            "schema": {
              "type": "boolean"
            },
            "description": "Defaults to true where the behavior is to alert the user on every new issue. Setting this to false will turn this off and the user must create their own alerts to be notified of new issues."
          }
        ],
        "tags": [
          "Projects"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "slug": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 50,
                    "pattern": "^[a-z0-9_\\-]+$"
                  },
                  "platform": {
                    "type": "string",
                    "nullable": true
                  },
                  "default_rules": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "auth_token": [
              "project:admin",
              "project:write"
            ]
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stats": {},
                    "transactionStats": {},
                    "sessionStats": {},
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "string",
                      "nullable": true
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "firstEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "firstTransactionEvent": {
                      "type": "boolean"
                    },
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "hasMinifiedStackTrace": {
                      "type": "boolean"
                    },
                    "hasMonitors": {
                      "type": "boolean"
                    },
                    "hasProfiles": {
                      "type": "boolean"
                    },
                    "hasReplays": {
                      "type": "boolean"
                    },
                    "hasSessions": {
                      "type": "boolean"
                    },
                    "isInternal": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "avatarType",
                        "avatarUuid"
                      ]
                    },
                    "color": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "access",
                    "avatar",
                    "color",
                    "dateCreated",
                    "features",
                    "firstEvent",
                    "firstTransactionEvent",
                    "hasAccess",
                    "hasMinifiedStackTrace",
                    "hasMonitors",
                    "hasProfiles",
                    "hasReplays",
                    "hasSessions",
                    "id",
                    "isBookmarked",
                    "isInternal",
                    "isMember",
                    "isPublic",
                    "name",
                    "platform",
                    "slug",
                    "status"
                  ]
                },
                "examples": {
                  "ProjectSuccessfullyCreated": {
                    "value": {
                      "id": "4505321021243392",
                      "slug": "the-spoiled-yoghurt",
                      "name": "The Spoiled Yoghurt",
                      "platform": "python",
                      "dateCreated": "2023-06-08T00:13:06.004534Z",
                      "isBookmarked": false,
                      "isMember": true,
                      "features": [
                        "alert-filters",
                        "custom-inbound-filters",
                        "data-forwarding",
                        "discard-groups",
                        "minidump",
                        "race-free-group-creation",
                        "rate-limits",
                        "servicehooks",
                        "similarity-indexing",
                        "similarity-indexing-v2",
                        "similarity-view",
                        "similarity-view-v2"
                      ],
                      "firstEvent": null,
                      "firstTransactionEvent": false,
                      "access": [
                        "member:read",
                        "event:read",
                        "project:admin",
                        "team:write",
                        "project:write",
                        "team:admin",
                        "project:read",
                        "org:integrations",
                        "org:read",
                        "project:releases",
                        "team:read",
                        "alerts:write",
                        "event:admin",
                        "event:write",
                        "alerts:read"
                      ],
                      "hasAccess": true,
                      "hasMinifiedStackTrace": false,
                      "hasMonitors": false,
                      "hasProfiles": false,
                      "hasReplays": false,
                      "hasSessions": false,
                      "isInternal": false,
                      "isPublic": false,
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "color": "#3f70bf",
                      "status": "active"
                    },
                    "summary": "Project successfully created"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found."
          },
          "409": {
            "description": "A project with this slug already exists."
          }
        }
      }
    },
    "/api/0/teams/{organization_slug}/{team_slug}/": {
      "get": {
        "tags": [
          "Teams"
        ],
        "description": "Return details on an individual team.",
        "operationId": "Retrieve a Team",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the team belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_slug",
            "in": "path",
            "description": "The slug of the team to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "avatar",
                    "dateCreated",
                    "hasAccess",
                    "id",
                    "isMember",
                    "isPending",
                    "memberCount",
                    "name",
                    "slug",
                    "organization"
                  ],
                  "properties": {
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "isPending": {
                      "type": "boolean"
                    },
                    "memberCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "organization": {
                      "type": "object",
                      "required": [
                        "avatar",
                        "dateCreated",
                        "id",
                        "isEarlyAdopter",
                        "name",
                        "require2FA",
                        "slug",
                        "status"
                      ],
                      "properties": {
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "avatarType": {
                              "type": "string"
                            },
                            "avatarUuid": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "id": {
                          "type": "string"
                        },
                        "isEarlyAdopter": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "require2FA": {
                          "type": "boolean"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "status": {
                          "type": "object",
                          "required": [
                            "id",
                            "name"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "avatar": {
                    "avatarType": "letter_avatar",
                    "avatarUuid": null
                  },
                  "dateCreated": "2018-11-06T21:19:55.114Z",
                  "hasAccess": true,
                  "id": "2",
                  "isMember": true,
                  "isPending": false,
                  "memberCount": 1,
                  "name": "Powerful Abolitionist",
                  "organization": {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "dateCreated": "2018-11-06T21:19:55.101Z",
                    "id": "2",
                    "isEarlyAdopter": false,
                    "name": "The Interstellar Jurisdiction",
                    "require2FA": false,
                    "slug": "the-interstellar-jurisdiction",
                    "status": {
                      "id": "active",
                      "name": "active"
                    }
                  },
                  "slug": "powerful-abolitionist"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found"
          }
        },
        "security": [
          {
            "auth_token": [
              "team:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Teams"
        ],
        "description": "Update various attributes and configurable settings for the given team.",
        "operationId": "Update a Team",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the team belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_slug",
            "in": "path",
            "description": "The slug of the team to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name for the team."
                  },
                  "slug": {
                    "type": "string",
                    "description": "A new slug for the team. It has to be unique and available."
                  }
                }
              },
              "example": {
                "name": "The Inflated Philosophers",
                "slug": "the-inflated-philosophers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "avatar",
                    "dateCreated",
                    "hasAccess",
                    "id",
                    "isMember",
                    "isPending",
                    "memberCount",
                    "name",
                    "slug"
                  ],
                  "properties": {
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hasAccess": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isMember": {
                      "type": "boolean"
                    },
                    "isPending": {
                      "type": "boolean"
                    },
                    "memberCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "avatar": {
                    "avatarType": "letter_avatar"
                  },
                  "dateCreated": "2018-11-06T21:20:08.115Z",
                  "hasAccess": true,
                  "id": "3",
                  "isMember": false,
                  "isPending": false,
                  "memberCount": 1,
                  "name": "The Inflated Philosophers",
                  "slug": "the-inflated-philosophers"
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found"
          }
        },
        "security": [
          {
            "auth_token": [
              "team:write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Teams"
        ],
        "description": "Schedules a team for deletion.\n\nNote: Deletion happens asynchronously and therefore is not immediate. However once deletion has begun the state of a project changes and will be hidden from most public views.",
        "operationId": "Delete a Team",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the team belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_slug",
            "in": "path",
            "description": "The slug of the team to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found"
          }
        },
        "security": [
          {
            "auth_token": [
              "team:admin"
            ]
          }
        ]
      }
    },
    "/api/0/teams/{organization_slug}/{team_slug}/stats/": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Caution: this endpoint may change in the future without notice.",
        "description": "Return a set of points representing a normalized timestamp and the number of events seen in the period.\n\nQuery ranges are limited to Sentryâs configured time-series resolutions.",
        "operationId": "Retrieve Event Counts for a Team",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the team belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_slug",
            "in": "path",
            "description": "The slug of the team to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stat",
            "in": "query",
            "description": "The name of the stat to query `(\"received\", \"rejected\")`.",
            "schema": {
              "type": "string",
              "enum": [
                "received",
                "rejected"
              ]
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "A timestamp to set the start of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "A timestamp to set the end of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "An explicit resolution to search for (one of `10s`, `1h`, and `1d`).",
            "schema": {
              "type": "string",
              "enum": [
                "10s",
                "1h",
                "1d"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "example": [
                  [
                    1541455200,
                    3302
                  ],
                  [
                    1541458800,
                    3832
                  ],
                  [
                    1541462400,
                    3669
                  ],
                  [
                    1541466000,
                    3533
                  ],
                  [
                    1541469600,
                    3499
                  ],
                  [
                    1541473200,
                    3201
                  ],
                  [
                    1541476800,
                    3769
                  ],
                  [
                    1541480400,
                    2706
                  ],
                  [
                    1541484000,
                    2698
                  ],
                  [
                    1541487600,
                    3747
                  ],
                  [
                    1541491200,
                    3261
                  ],
                  [
                    1541494800,
                    2860
                  ],
                  [
                    1541498400,
                    4350
                  ],
                  [
                    1541502000,
                    2924
                  ],
                  [
                    1541505600,
                    3389
                  ],
                  [
                    1541509200,
                    2931
                  ],
                  [
                    1541512800,
                    3132
                  ],
                  [
                    1541516400,
                    3213
                  ],
                  [
                    1541520000,
                    3650
                  ],
                  [
                    1541523600,
                    3096
                  ],
                  [
                    1541527200,
                    3845
                  ],
                  [
                    1541530800,
                    3545
                  ],
                  [
                    1541534400,
                    2880
                  ],
                  [
                    1541538000,
                    4057
                  ]
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Team not found"
          }
        },
        "security": [
          {
            "auth_token": [
              "team:read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "description": "Return a list of organizations available to the authenticated session.  This is particularly useful for requests with an user bound context.  For API key based requests this will only return the organization that belongs to the key.",
        "operationId": "List Your Organizations",
        "parameters": [
          {
            "name": "owner",
            "in": "query",
            "description": "Restrict results to organizations in which you are an organization owner.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "avatar",
                      "dateCreated",
                      "id",
                      "isEarlyAdopter",
                      "name",
                      "require2FA",
                      "slug",
                      "status"
                    ],
                    "properties": {
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "avatarType": {
                            "type": "string"
                          },
                          "avatarUuid": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "id": {
                        "type": "string"
                      },
                      "isEarlyAdopter": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "require2FA": {
                        "type": "boolean"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "status": {
                        "type": "object",
                        "required": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "dateCreated": "2018-11-06T21:19:55.101Z",
                    "id": "2",
                    "isEarlyAdopter": false,
                    "name": "The Interstellar Jurisdiction",
                    "require2FA": false,
                    "slug": "the-interstellar-jurisdiction",
                    "status": {
                      "id": "active",
                      "name": "active"
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "org: read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/eventids/{event_id}/": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "description": "This resolves an event ID to the project slug and internal issue ID and internal event ID.",
        "operationId": "Resolve an Event ID",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the event ID should be looked up in.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "The event ID to look up.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "event",
                    "eventId",
                    "groupId",
                    "organizationSlug",
                    "projectSlug"
                  ],
                  "properties": {
                    "event": {
                      "type": "object",
                      "required": [
                        "_meta",
                        "context",
                        "contexts",
                        "dateCreated",
                        "dateReceived",
                        "dist",
                        "entries",
                        "errors",
                        "eventID",
                        "fingerprints",
                        "groupID",
                        "id",
                        "message",
                        "metadata",
                        "packages",
                        "platform",
                        "sdk",
                        "size",
                        "tags",
                        "type",
                        "user",
                        "title"
                      ],
                      "properties": {
                        "_meta": {
                          "type": "object",
                          "properties": {
                            "context": {
                              "type": "string",
                              "nullable": true
                            },
                            "contexts": {
                              "type": "object",
                              "nullable": true
                            },
                            "entries": {
                              "type": "object"
                            },
                            "message": {
                              "type": "string",
                              "nullable": true
                            },
                            "packages": {
                              "type": "string",
                              "nullable": true
                            },
                            "sdk": {
                              "type": "string",
                              "nullable": true
                            },
                            "tags": {
                              "type": "object"
                            },
                            "user": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        "context": {
                          "type": "object",
                          "properties": {
                            "length": {
                              "type": "integer"
                            },
                            "results": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "session": {
                              "type": "object",
                              "properties": {
                                "foo": {
                                  "type": "string"
                                }
                              }
                            },
                            "unauthorized": {
                              "type": "boolean"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "contexts": {
                          "type": "object",
                          "properties": {
                            "ForbiddenError": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "integer"
                                },
                                "statusText": {
                                  "type": "string"
                                },
                                "responseJSON": {
                                  "type": "object",
                                  "properties": {
                                    "detail": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "type": {
                                  "type": "string"
                                }
                              }
                            },
                            "browser": {
                              "type": "object",
                              "properties": {
                                "version": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "os": {
                              "type": "object",
                              "properties": {
                                "version": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "trace": {
                              "type": "object",
                              "properties": {
                                "span_id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "trace_id": {
                                  "type": "string"
                                },
                                "op": {
                                  "type": "string"
                                }
                              }
                            },
                            "organization": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "slug": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "dateCreated": {
                          "type": "string"
                        },
                        "dateReceived": {
                          "type": "string"
                        },
                        "dist": {
                          "type": "string",
                          "nullable": true
                        },
                        "entries": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "object",
                                "required": [
                                  "type",
                                  "data"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "object",
                                    "required": [
                                      "values"
                                    ],
                                    "properties": {
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "category",
                                            "level",
                                            "event_id",
                                            "timestamp",
                                            "data",
                                            "message",
                                            "type"
                                          ],
                                          "properties": {
                                            "category": {
                                              "type": "string"
                                            },
                                            "level": {
                                              "type": "string"
                                            },
                                            "event_id": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "timestamp": {
                                              "type": "string",
                                              "format": "date-time"
                                            },
                                            "data": {
                                              "type": "object",
                                              "nullable": true
                                            },
                                            "message": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "type",
                                  "data"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "object",
                                    "required": [
                                      "fragment",
                                      "cookies",
                                      "inferredContentType",
                                      "env",
                                      "headers",
                                      "url",
                                      "query",
                                      "data",
                                      "method"
                                    ],
                                    "properties": {
                                      "fragment": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "cookies": {
                                        "type": "array",
                                        "nullable": true,
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "inferredContentType": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "env": {
                                        "type": "object",
                                        "nullable": true,
                                        "properties": {
                                          "ENV": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "headers": {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "query": {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "data": {
                                        "type": "object",
                                        "nullable": true
                                      },
                                      "method": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "type",
                                  "data"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "object",
                                    "required": [
                                      "formatted"
                                    ],
                                    "properties": {
                                      "formatted": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "type",
                                  "data"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "object",
                                    "required": [
                                      "excOmitted",
                                      "hasSystemFrames",
                                      "values"
                                    ],
                                    "properties": {
                                      "excOmitted": {
                                        "type": "array",
                                        "nullable": true,
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "hasSystemFrames": {
                                        "type": "boolean"
                                      },
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "stacktrace",
                                            "module",
                                            "rawStacktrace",
                                            "mechanism",
                                            "threadId",
                                            "value",
                                            "type"
                                          ],
                                          "properties": {
                                            "stacktrace": {
                                              "type": "object",
                                              "nullable": true,
                                              "required": [
                                                "frames",
                                                "framesOmitted",
                                                "registers",
                                                "hasSystemFrames"
                                              ],
                                              "properties": {
                                                "frames": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "function",
                                                      "errors",
                                                      "colNo",
                                                      "vars",
                                                      "package",
                                                      "absPath",
                                                      "inApp",
                                                      "lineNo",
                                                      "module",
                                                      "filename",
                                                      "platform",
                                                      "instructionAddr",
                                                      "context",
                                                      "symbolAddr",
                                                      "trust",
                                                      "symbol"
                                                    ],
                                                    "properties": {
                                                      "function": {
                                                        "type": "string"
                                                      },
                                                      "errors": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "colNo": {
                                                        "type": "integer",
                                                        "nullable": true
                                                      },
                                                      "vars": {
                                                        "type": "object",
                                                        "nullable": true
                                                      },
                                                      "package": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "absPath": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "inApp": {
                                                        "type": "boolean"
                                                      },
                                                      "lineNo": {
                                                        "type": "integer"
                                                      },
                                                      "module": {
                                                        "type": "string"
                                                      },
                                                      "filename": {
                                                        "type": "string"
                                                      },
                                                      "platform": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "instructionAddr": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "context": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "array",
                                                          "items": {
                                                            "oneOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "symbolAddr": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "trust": {
                                                        "type": "string",
                                                        "nullable": true
                                                      },
                                                      "symbol": {
                                                        "type": "string",
                                                        "nullable": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "framesOmitted": {
                                                  "type": "string",
                                                  "nullable": true
                                                },
                                                "registers": {
                                                  "type": "string",
                                                  "nullable": true
                                                },
                                                "hasSystemFrames": {
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "module": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "rawStacktrace": {
                                              "type": "object",
                                              "nullable": true
                                            },
                                            "mechanism": {
                                              "type": "object",
                                              "nullable": true,
                                              "properties": {
                                                "type": {
                                                  "type": "string"
                                                },
                                                "handled": {
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "threadId": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object"
                              }
                            }
                          }
                        },
                        "eventID": {
                          "type": "string"
                        },
                        "fingerprints": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "groupID": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        },
                        "packages": {
                          "type": "object",
                          "properties": {
                            "my.package": {
                              "type": "string"
                            }
                          }
                        },
                        "platform": {
                          "type": "string"
                        },
                        "sdk": {
                          "type": "object",
                          "nullable": true
                        },
                        "size": {
                          "type": "integer"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_meta": {
                                "type": "string",
                                "nullable": true
                              },
                              "key": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "username",
                            "name",
                            "ip_address",
                            "email",
                            "data",
                            "id"
                          ],
                          "properties": {
                            "username": {
                              "type": "string",
                              "nullable": true
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "ip_address": {
                              "type": "string",
                              "nullable": true
                            },
                            "email": {
                              "type": "string",
                              "nullable": true
                            },
                            "data": {
                              "type": "object",
                              "nullable": true,
                              "properties": {
                                "isStaff": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "title": {
                          "type": "string"
                        }
                      }
                    },
                    "eventId": {
                      "type": "string"
                    },
                    "groupId": {
                      "type": "string"
                    },
                    "organizationSlug": {
                      "type": "string"
                    },
                    "projectSlug": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "event": {
                    "_meta": {
                      "context": null,
                      "contexts": null,
                      "entries": {},
                      "message": null,
                      "packages": null,
                      "sdk": null,
                      "tags": {},
                      "user": null
                    },
                    "context": {
                      "length": 10837790,
                      "results": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "session": {
                        "foo": "bar"
                      },
                      "unauthorized": false,
                      "url": "http://example.org/foo/bar/"
                    },
                    "contexts": {},
                    "dateCreated": "2018-11-06T21:19:55Z",
                    "dateReceived": "2018-11-06T21:19:55Z",
                    "dist": null,
                    "entries": [
                      {
                        "type": "request",
                        "data": {
                          "fragment": null,
                          "cookies": [],
                          "inferredContentType": null,
                          "env": null,
                          "headers": [
                            [
                              "User-Agent",
                              "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36"
                            ]
                          ],
                          "url": "http://example.com/foo",
                          "query": [],
                          "data": null,
                          "method": null
                        }
                      }
                    ],
                    "errors": [],
                    "eventID": "9fac2ceed9344f2bbfdd1fdacb0ed9b1",
                    "fingerprints": [
                      "c4a4d06bc314205bb3b6bdb612dde7f1"
                    ],
                    "groupID": "1",
                    "id": "1",
                    "message": "",
                    "title": "This is an example Python exception",
                    "metadata": {
                      "title": "This is an example Python exception"
                    },
                    "packages": {
                      "my.package": "1.0.0"
                    },
                    "platform": "python",
                    "sdk": null,
                    "size": 7055,
                    "tags": [
                      {
                        "_meta": null,
                        "key": "browser",
                        "value": "Chrome 28.0"
                      },
                      {
                        "_meta": null,
                        "key": "device",
                        "value": "Other"
                      },
                      {
                        "_meta": null,
                        "key": "level",
                        "value": "error"
                      },
                      {
                        "_meta": null,
                        "key": "os",
                        "value": "Windows 8"
                      },
                      {
                        "_meta": null,
                        "key": "release",
                        "value": "17642328ead24b51867165985996d04b29310337"
                      },
                      {
                        "_meta": null,
                        "key": "url",
                        "value": "http://example.com/foo"
                      },
                      {
                        "_meta": null,
                        "key": "user",
                        "value": "id:1"
                      }
                    ],
                    "type": "default",
                    "user": {
                      "data": {},
                      "email": "sentry@example.com",
                      "id": "1",
                      "ip_address": "127.0.0.1",
                      "name": "Sentry",
                      "username": "sentry"
                    }
                  },
                  "eventId": "1",
                  "groupId": "1",
                  "organizationSlug": "the-interstellar-jurisdiction",
                  "projectSlug": "pump-station"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "org: read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "description": "Return details on an individual organization including various details such as membership access, features, and teams.",
        "operationId": "Retrieve an Organization",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization to look up.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "access",
                    "allowSharedIssues",
                    "availableRoles",
                    "avatar",
                    "dataScrubber",
                    "dataScrubberDefaults",
                    "dateCreated",
                    "defaultRole",
                    "enhancedPrivacy",
                    "experiments",
                    "features",
                    "id",
                    "isDefault",
                    "isEarlyAdopter",
                    "name",
                    "onboardingTasks",
                    "openMembership",
                    "pendingAccessRequests",
                    "projects",
                    "quota",
                    "require2FA",
                    "safeFields",
                    "scrapeJavaScript",
                    "scrubIPAddresses",
                    "sensitiveFields",
                    "slug",
                    "status",
                    "storeCrashReports",
                    "teams",
                    "trustedRelays"
                  ],
                  "properties": {
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowSharedIssues": {
                      "type": "boolean"
                    },
                    "availableRoles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "dataScrubber": {
                      "type": "boolean"
                    },
                    "dataScrubberDefaults": {
                      "type": "boolean"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "defaultRole": {
                      "type": "string"
                    },
                    "enhancedPrivacy": {
                      "type": "boolean"
                    },
                    "experiments": {
                      "type": "object"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "isEarlyAdopter": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "onboardingTasks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "nullable": true
                          },
                          "dateCompleted": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string"
                          },
                          "task": {
                            "type": "integer"
                          },
                          "user": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "openMembership": {
                      "type": "boolean"
                    },
                    "pendingAccessRequests": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "dateCreated",
                          "firstEvent",
                          "hasAccess",
                          "id",
                          "isBookmarked",
                          "isMember",
                          "latestDeploys",
                          "name",
                          "platform",
                          "platforms",
                          "slug",
                          "team",
                          "teams"
                        ],
                        "properties": {
                          "dateCreated": {
                            "type": "string"
                          },
                          "firstEvent": {
                            "type": "string",
                            "nullable": true
                          },
                          "hasAccess": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isBookmarked": {
                            "type": "boolean"
                          },
                          "isMember": {
                            "type": "boolean"
                          },
                          "latestDeploys": {
                            "type": "string",
                            "nullable": true
                          },
                          "name": {
                            "type": "string"
                          },
                          "platform": {
                            "type": "string",
                            "nullable": true
                          },
                          "platforms": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "slug": {
                            "type": "string"
                          },
                          "team": {
                            "type": "object",
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "slug"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "slug": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "teams": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "slug"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "slug": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "quota": {
                      "type": "object",
                      "properties": {
                        "accountLimit": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxRate": {
                          "type": "integer",
                          "format": "int64",
                          "nullable": true
                        },
                        "maxRateInterval": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "projectLimit": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    },
                    "require2FA": {
                      "type": "boolean"
                    },
                    "safeFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "scrapeJavaScript": {
                      "type": "boolean"
                    },
                    "scrubIPAddresses": {
                      "type": "boolean"
                    },
                    "sensitiveFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "storeCrashReports": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "avatar",
                          "dateCreated",
                          "hasAccess",
                          "id",
                          "isMember",
                          "isPending",
                          "memberCount",
                          "name",
                          "slug"
                        ],
                        "properties": {
                          "avatar": {
                            "type": "object",
                            "properties": {
                              "avatarType": {
                                "type": "string"
                              },
                              "avatarUuid": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "dateCreated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "hasAccess": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isMember": {
                            "type": "boolean"
                          },
                          "isPending": {
                            "type": "boolean"
                          },
                          "memberCount": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "trustedRelays": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "access": [],
                  "allowSharedIssues": true,
                  "availableRoles": [
                    {
                      "id": "member",
                      "name": "Member"
                    },
                    {
                      "id": "admin",
                      "name": "Admin"
                    },
                    {
                      "id": "manager",
                      "name": "Manager"
                    },
                    {
                      "id": "owner",
                      "name": "Owner"
                    }
                  ],
                  "avatar": {
                    "avatarType": "letter_avatar",
                    "avatarUuid": null
                  },
                  "dataScrubber": false,
                  "dataScrubberDefaults": false,
                  "dateCreated": "2018-11-06T21:19:55.101Z",
                  "defaultRole": "member",
                  "enhancedPrivacy": false,
                  "experiments": {},
                  "features": [
                    "new-teams",
                    "shared-issues",
                    "new-issue-ui",
                    "repos",
                    "open-membership",
                    "invite-members",
                    "sso-saml2",
                    "sso-basic",
                    "suggested-commits"
                  ],
                  "id": "2",
                  "isDefault": false,
                  "isEarlyAdopter": false,
                  "name": "The Interstellar Jurisdiction",
                  "onboardingTasks": [
                    {
                      "data": {},
                      "dateCompleted": "2018-11-06T21:20:08.089Z",
                      "status": "complete",
                      "task": 1,
                      "user": ""
                    }
                  ],
                  "openMembership": true,
                  "pendingAccessRequests": 0,
                  "projects": [
                    {
                      "dateCreated": "2018-11-06T21:19:58.536Z",
                      "firstEvent": null,
                      "hasAccess": true,
                      "id": "3",
                      "isBookmarked": false,
                      "isMember": true,
                      "latestDeploys": null,
                      "name": "Prime Mover",
                      "platform": null,
                      "platforms": [],
                      "slug": "prime-mover",
                      "team": {
                        "id": "2",
                        "name": "Powerful Abolitionist",
                        "slug": "powerful-abolitionist"
                      },
                      "teams": [
                        {
                          "id": "2",
                          "name": "Powerful Abolitionist",
                          "slug": "powerful-abolitionist"
                        }
                      ]
                    },
                    {
                      "dateCreated": "2018-11-06T21:19:55.121Z",
                      "firstEvent": null,
                      "hasAccess": true,
                      "id": "2",
                      "isBookmarked": false,
                      "isMember": true,
                      "latestDeploys": null,
                      "name": "Pump Station",
                      "platform": null,
                      "platforms": [],
                      "slug": "pump-station",
                      "team": {
                        "id": "2",
                        "name": "Powerful Abolitionist",
                        "slug": "powerful-abolitionist"
                      },
                      "teams": [
                        {
                          "id": "2",
                          "name": "Powerful Abolitionist",
                          "slug": "powerful-abolitionist"
                        }
                      ]
                    },
                    {
                      "dateCreated": "2018-11-06T21:20:08.064Z",
                      "firstEvent": null,
                      "hasAccess": true,
                      "id": "4",
                      "isBookmarked": false,
                      "isMember": true,
                      "latestDeploys": null,
                      "name": "The Spoiled Yoghurt",
                      "platform": null,
                      "platforms": [],
                      "slug": "the-spoiled-yoghurt",
                      "team": {
                        "id": "2",
                        "name": "Powerful Abolitionist",
                        "slug": "powerful-abolitionist"
                      },
                      "teams": [
                        {
                          "id": "2",
                          "name": "Powerful Abolitionist",
                          "slug": "powerful-abolitionist"
                        }
                      ]
                    }
                  ],
                  "quota": {
                    "accountLimit": 0,
                    "maxRate": 0,
                    "maxRateInterval": 60,
                    "projectLimit": 100
                  },
                  "require2FA": false,
                  "safeFields": [],
                  "scrapeJavaScript": true,
                  "scrubIPAddresses": false,
                  "sensitiveFields": [],
                  "slug": "the-interstellar-jurisdiction",
                  "status": {
                    "id": "active",
                    "name": "active"
                  },
                  "storeCrashReports": 0,
                  "teams": [
                    {
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "dateCreated": "2018-11-06T21:20:08.115Z",
                      "hasAccess": true,
                      "id": "3",
                      "isMember": true,
                      "isPending": false,
                      "memberCount": 1,
                      "name": "Ancient Gabelers",
                      "slug": "ancient-gabelers"
                    },
                    {
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "dateCreated": "2018-11-06T21:19:55.114Z",
                      "hasAccess": true,
                      "id": "2",
                      "isMember": true,
                      "isPending": false,
                      "memberCount": 1,
                      "name": "Powerful Abolitionist",
                      "slug": "powerful-abolitionist"
                    }
                  ],
                  "trustedRelays": []
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": [
              "org: read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Organizations"
        ],
        "description": "Update various attributes and configurable settings for the given organization.",
        "operationId": "Update an Organization",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "An optional new name for the organization."
                  },
                  "slug": {
                    "type": "string",
                    "description": "An optional new slug for the organization. Needs to be available and unique."
                  }
                }
              },
              "example": {
                "name": "Impeccably Designated",
                "slug": "impeccably-designated"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "access",
                    "allowSharedIssues",
                    "availableRoles",
                    "avatar",
                    "dataScrubber",
                    "dataScrubberDefaults",
                    "dateCreated",
                    "defaultRole",
                    "enhancedPrivacy",
                    "experiments",
                    "features",
                    "id",
                    "isDefault",
                    "isEarlyAdopter",
                    "name",
                    "onboardingTasks",
                    "openMembership",
                    "pendingAccessRequests",
                    "projects",
                    "quota",
                    "require2FA",
                    "safeFields",
                    "scrapeJavaScript",
                    "scrubIPAddresses",
                    "sensitiveFields",
                    "slug",
                    "status",
                    "storeCrashReports",
                    "teams",
                    "trustedRelays"
                  ],
                  "properties": {
                    "access": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowSharedIssues": {
                      "type": "boolean"
                    },
                    "availableRoles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "avatar": {
                      "type": "object",
                      "properties": {
                        "avatarType": {
                          "type": "string"
                        },
                        "avatarUuid": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "dataScrubber": {
                      "type": "boolean"
                    },
                    "dataScrubberDefaults": {
                      "type": "boolean"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "defaultRole": {
                      "type": "string"
                    },
                    "enhancedPrivacy": {
                      "type": "boolean"
                    },
                    "experiments": {
                      "type": "object"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "isEarlyAdopter": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "onboardingTasks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "nullable": true
                          },
                          "dateCompleted": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string"
                          },
                          "task": {
                            "type": "integer"
                          },
                          "user": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "openMembership": {
                      "type": "boolean"
                    },
                    "pendingAccessRequests": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "dateCreated",
                          "firstEvent",
                          "hasAccess",
                          "id",
                          "isBookmarked",
                          "isMember",
                          "latestDeploys",
                          "name",
                          "platform",
                          "platforms",
                          "slug",
                          "team",
                          "teams"
                        ],
                        "properties": {
                          "dateCreated": {
                            "type": "string"
                          },
                          "firstEvent": {
                            "type": "string",
                            "nullable": true
                          },
                          "hasAccess": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isBookmarked": {
                            "type": "boolean"
                          },
                          "isMember": {
                            "type": "boolean"
                          },
                          "latestDeploys": {
                            "type": "string",
                            "nullable": true
                          },
                          "name": {
                            "type": "string"
                          },
                          "platform": {
                            "type": "string",
                            "nullable": true
                          },
                          "platforms": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "slug": {
                            "type": "string"
                          },
                          "team": {
                            "type": "object",
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "slug"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "slug": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "teams": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "slug"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "slug": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "quota": {
                      "type": "object",
                      "properties": {
                        "accountLimit": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxRate": {
                          "type": "integer",
                          "format": "int64",
                          "nullable": true
                        },
                        "maxRateInterval": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "projectLimit": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    },
                    "require2FA": {
                      "type": "boolean"
                    },
                    "safeFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "scrapeJavaScript": {
                      "type": "boolean"
                    },
                    "scrubIPAddresses": {
                      "type": "boolean"
                    },
                    "sensitiveFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "storeCrashReports": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "avatar",
                          "dateCreated",
                          "hasAccess",
                          "id",
                          "isMember",
                          "isPending",
                          "memberCount",
                          "name",
                          "slug"
                        ],
                        "properties": {
                          "avatar": {
                            "type": "object",
                            "properties": {
                              "avatarType": {
                                "type": "string"
                              },
                              "avatarUuid": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "dateCreated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "hasAccess": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isMember": {
                            "type": "boolean"
                          },
                          "isPending": {
                            "type": "boolean"
                          },
                          "memberCount": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "trustedRelays": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "access": [],
                  "allowSharedIssues": true,
                  "availableRoles": [
                    {
                      "id": "member",
                      "name": "Member"
                    },
                    {
                      "id": "admin",
                      "name": "Admin"
                    },
                    {
                      "id": "manager",
                      "name": "Manager"
                    },
                    {
                      "id": "owner",
                      "name": "Owner"
                    }
                  ],
                  "avatar": {
                    "avatarType": "letter_avatar",
                    "avatarUuid": null
                  },
                  "dataScrubber": false,
                  "dataScrubberDefaults": false,
                  "dateCreated": "2018-11-06T21:20:19.548Z",
                  "defaultRole": "member",
                  "enhancedPrivacy": false,
                  "experiments": {},
                  "features": [
                    "new-teams",
                    "shared-issues",
                    "new-issue-ui",
                    "repos",
                    "open-membership",
                    "invite-members",
                    "sso-saml2",
                    "sso-basic",
                    "suggested-commits"
                  ],
                  "id": "3",
                  "isDefault": false,
                  "isEarlyAdopter": false,
                  "name": "Impeccably Designated",
                  "onboardingTasks": [],
                  "openMembership": true,
                  "pendingAccessRequests": 0,
                  "projects": [],
                  "quota": {
                    "accountLimit": 0,
                    "maxRate": 0,
                    "maxRateInterval": 60,
                    "projectLimit": 100
                  },
                  "require2FA": false,
                  "safeFields": [],
                  "scrapeJavaScript": true,
                  "scrubIPAddresses": false,
                  "sensitiveFields": [],
                  "slug": "impeccably-designated",
                  "status": {
                    "id": "active",
                    "name": "active"
                  },
                  "storeCrashReports": 0,
                  "teams": [],
                  "trustedRelays": []
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "org:write"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/repos/": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "description": "Return a list of version control repositories for a given organization.",
        "operationId": "List an Organization's Repositories",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The organization short name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "dateCreated",
                      "id",
                      "name"
                    ],
                    "properties": {
                      "dateCreated": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:19:58.536Z",
                    "id": "3",
                    "name": "sentry/sentry"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "org: read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/repos/{repo_id}/commits/": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "description": "Return a list of commits for a given repository.",
        "operationId": "List a Repository's Commits",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The organization short name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo_id",
            "in": "path",
            "description": "The repository ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "dateCreated",
                      "id",
                      "message"
                    ],
                    "properties": {
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "id": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:19:58.536Z",
                    "id": "acbafc639127fd89d10f474520104517ff1d709e",
                    "message": "Initial commit from Create Next App"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "org: read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/stats/": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "deprecated": true,
        "description": "This endpoint is deprecated in favor of [Organization Stats V2](/api/organizations/retrieve-event-counts-for-an-organization-v2/).",
        "operationId": "Retrieve Event Counts for an Organization",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the event ID should be looked up in.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stat",
            "in": "query",
            "description": "The name of the stat to query `(\"received\", \"rejected\", \"blacklisted\")`.",
            "schema": {
              "type": "string",
              "enum": [
                "received",
                "rejected",
                "blacklisted"
              ]
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "A timestamp to set the start of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "A timestamp to set the end of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "An explicit resolution to search for (one of `10s`, `1h`, and `1d`).",
            "schema": {
              "type": "string",
              "enum": [
                "10s",
                "1h",
                "1d"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "example": [
                  [
                    1541455200,
                    8264
                  ],
                  [
                    1541458800,
                    6564
                  ],
                  [
                    1541462400,
                    8652
                  ],
                  [
                    1541466000,
                    7436
                  ],
                  [
                    1541469600,
                    8127
                  ],
                  [
                    1541473200,
                    7643
                  ],
                  [
                    1541476800,
                    6518
                  ],
                  [
                    1541480400,
                    6752
                  ],
                  [
                    1541484000,
                    6559
                  ],
                  [
                    1541487600,
                    7039
                  ],
                  [
                    1541491200,
                    7384
                  ],
                  [
                    1541494800,
                    6265
                  ],
                  [
                    1541498400,
                    8390
                  ],
                  [
                    1541502000,
                    6393
                  ],
                  [
                    1541505600,
                    7298
                  ],
                  [
                    1541509200,
                    7422
                  ],
                  [
                    1541512800,
                    5603
                  ],
                  [
                    1541516400,
                    6846
                  ],
                  [
                    1541520000,
                    8886
                  ],
                  [
                    1541523600,
                    6544
                  ],
                  [
                    1541527200,
                    8812
                  ],
                  [
                    1541530800,
                    8172
                  ],
                  [
                    1541534400,
                    5733
                  ],
                  [
                    1541538000,
                    9435
                  ]
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "org: read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/sessions/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "Returns a time series of release health session statistics for projects bound to an organization.\n\nThe interval and date range are subject to certain restrictions and rounding rules.\n\nThe date range is rounded to align with the interval, and is rounded to at least one hour. The interval can at most be one day and at least one hour currently. It has to cleanly divide one day, for rounding reasons.\n\nApart from the query parameters listed below, this endpoint also supports the usual [pagination parameters](https://docs.sentry.io/api/pagination/).",
        "operationId": "Retrieve Release Health Session Statistics",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "query",
            "description": "The ID of the projects to filter by.\n\nUse `-1` to include all accessible projects.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "field",
            "in": "query",
            "description": "The list of fields to query.\n\nThe available fields are\n  - `sum(session)`\n  - `count_unique(user)`\n  - `avg`, `p50`, `p75`, `p90`, `p95`, `p99`, `max` applied to `session.duration`. For example, `p99(session.duration)`. Session duration is [no longer being recorded](https://github.com/getsentry/sentry/discussions/42716) as of on Jan 12, 2023. Returned data may be incomplete.\n  - `crash_rate`, `crash_free_rate` applied to `user` or `session`. For example, `crash_free_rate(user)`",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "environment",
            "in": "query",
            "description": "The name of environments to filter by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "The list of properties to group by.\n\nThe available groupBy conditions are `project`, `release`, `environment` and `session.status`.\n\nGrouping by `session.status` does not work when `crash_rate` or `crash_free_rate` are queried.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "An optional field to order by, which must be one of the fields provided in `field`. Use `-` for descending order, for example `-sum(session)`. \n\nThis alters the order of the `groups` returned, so it only makes sense in combination with `groupBy`. \n\nOrdering by more than one field is currently not supported.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "A free-form query that is applied as a filter.\n\nAn example query could be `release:\"1.1.0\" or release:\"1.2.0\"`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statsPeriod",
            "in": "query",
            "description": "This defines the range of the time series, relative to now.\n\nThe range is given in a `\"<number><unit>\"` format.\n\nFor example `1d` for a one day range. Possible units are `m` for minutes, `h` for hours, `d` for days and `w` for weeks.\n\nIt defaults to `90d`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "This is the resolution of the time series, given in the same format as `statsPeriod`.\n\nThe default resolution is `1h` and the minimum resolution is currently restricted to `1h` as well.\n\nIntervals larger than `1d` are not supported, and the interval has to cleanly divide one day.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statsPeriodStart",
            "in": "query",
            "description": "This defines the start of the time series range, in the same format as the `interval`, relative to now.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statsPeriodEnd",
            "in": "query",
            "description": "This defines the end of the time series range, in the same format as the `interval`, relative to now.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "This defines the start of the time series range as an explicit datetime.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "This defines the inclusive end of the time series range as an explicit datetime.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Time-series Session Statistics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "start",
                    "end",
                    "intervals",
                    "groups"
                  ],
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time of the data being returned."
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The exclusive end time of the data being returned."
                    },
                    "intervals": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "description": "The time slices of the timeseries data given in the `groups[].series` field."
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A grouped result, as requested by the `groupBy` request parameter.",
                        "required": [
                          "by",
                          "totals",
                          "series"
                        ],
                        "properties": {
                          "by": {
                            "type": "object",
                            "description": "These are key/value pairs, the key being the requested `groupBy` property with its corresponding value.",
                            "properties": {
                              "session.status": {
                                "type": "string",
                                "description": "Example `groupBy` property"
                              }
                            }
                          },
                          "totals": {
                            "type": "object",
                            "description": "These are key/value pairs, the key being the requested `field`, and the value the corresponding total over the requested time frame.",
                            "properties": {
                              "sum(session)": {
                                "type": "integer",
                                "description": "Example `field` value"
                              }
                            }
                          },
                          "series": {
                            "type": "object",
                            "description": "These are key/value pairs, the key being the requested `field`, and the value is an array of aggregated values. The array corresponds to the times given in the `intervals` array.",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "start": "2021-02-01T00:00:00Z",
                  "end": "2021-02-04T00:00:00Z",
                  "intervals": [
                    "2021-02-01T00:00:00Z",
                    "2021-02-02T00:00:00Z",
                    "2021-02-03T00:00:00Z"
                  ],
                  "groups": [
                    {
                      "by": {
                        "session.status": "healthy"
                      },
                      "totals": {
                        "sum(session)": 1715553
                      },
                      "series": {
                        "sum(session)": [
                          683772,
                          677788,
                          353993
                        ]
                      }
                    },
                    {
                      "by": {
                        "session.status": "abnormal"
                      },
                      "totals": {
                        "sum(session)": 0
                      },
                      "series": {
                        "sum(session)": [
                          0,
                          0,
                          0
                        ]
                      }
                    },
                    {
                      "by": {
                        "session.status": "crashed"
                      },
                      "totals": {
                        "sum(session)": 383
                      },
                      "series": {
                        "sum(session)": [
                          33,
                          26,
                          324
                        ]
                      }
                    },
                    {
                      "by": {
                        "session.status": "errored"
                      },
                      "totals": {
                        "sum(session)": 1565
                      },
                      "series": {
                        "sum(session)": [
                          163,
                          201,
                          1201
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Wrong Parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "detail"
                  ],
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "org: read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/users/": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "description": "Return a list of users that belong to a given organization.",
        "operationId": "List an Organization's Users",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the event ID should be looked up in.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "query",
            "description": "Restrict results to users who have access to a given project ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "dateCreated",
                      "user",
                      "roleName",
                      "expired",
                      "id",
                      "projects",
                      "name",
                      "role",
                      "flags",
                      "email",
                      "pending"
                    ],
                    "properties": {
                      "dateCreated": {
                        "type": "string"
                      },
                      "user": {
                        "type": "object",
                        "required": [
                          "username",
                          "lastLogin",
                          "isSuperuser",
                          "isManaged",
                          "lastActive",
                          "isStaff",
                          "id",
                          "isActive",
                          "has2fa",
                          "name",
                          "avatarUrl",
                          "dateJoined",
                          "emails",
                          "avatar",
                          "hasPasswordAuth",
                          "email"
                        ],
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "lastLogin": {
                            "type": "string",
                            "nullable": true
                          },
                          "isSuperuser": {
                            "type": "boolean"
                          },
                          "isManaged": {
                            "type": "boolean"
                          },
                          "lastActive": {
                            "type": "string"
                          },
                          "isStaff": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isActive": {
                            "type": "boolean"
                          },
                          "has2fa": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatarUrl": {
                            "type": "string"
                          },
                          "dateJoined": {
                            "type": "string"
                          },
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "is_verified": {
                                  "type": "boolean"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "avatar": {
                            "type": "object",
                            "properties": {
                              "avatarType": {
                                "type": "string"
                              },
                              "avatarUuid": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "hasPasswordAuth": {
                            "type": "boolean"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "roleName": {
                        "type": "string"
                      },
                      "expired": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "projects": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "owner",
                          "manager",
                          "admin",
                          "member",
                          "billing"
                        ]
                      },
                      "flags": {
                        "type": "object",
                        "properties": {
                          "sso: linked": {
                            "type": "boolean"
                          },
                          "sso: invalid": {
                            "type": "boolean"
                          }
                        }
                      },
                      "email": {
                        "type": "string"
                      },
                      "pending": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2019-05-09T18:06:01.728Z",
                    "user": {
                      "username": "testEmail@test.com",
                      "lastLogin": "2019-09-16T02:56:06.806Z",
                      "isSuperuser": false,
                      "isManaged": false,
                      "lastActive": "2019-10-08T15:05:38.715Z",
                      "isStaff": false,
                      "id": "433307",
                      "isActive": true,
                      "has2fa": false,
                      "name": "OtherTest McTestuser",
                      "avatarUrl": "https:  //secure.gravatar.com/avatar/1eb103c0e899f372a85eb0a44f0a0f42?s=32&d=mm",
                      "dateJoined": "2019-05-09T18:06:01.443Z",
                      "emails": [
                        {
                          "is_verified": true,
                          "id": "468229",
                          "email": "testEmail@test.com"
                        }
                      ],
                      "avatar": {
                        "avatarUuid": null,
                        "avatarType": "letter_avatar"
                      },
                      "hasPasswordAuth": false,
                      "email": "testEmail@test.com"
                    },
                    "roleName": "Organization Owner",
                    "expired": false,
                    "id": "9376061",
                    "projects": [
                      "buggy-sentry-project"
                    ],
                    "name": "OtherTest McTestuser",
                    "role": "owner",
                    "flags": {
                      "sso: linked": false,
                      "sso: invalid": false
                    },
                    "email": "testEmail@test.com",
                    "pending": false
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "org: read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/shortids/{short_id}/": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "description": "This resolves a short ID to the project slug and internal issue ID.",
        "operationId": "Resolve a Short ID",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the short ID should be looked up in.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "short_id",
            "in": "path",
            "description": "The short ID to look up.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "organizationSlug",
                    "projectSlug",
                    "shortId",
                    "group",
                    "groupId"
                  ],
                  "properties": {
                    "organizationSlug": {
                      "type": "string"
                    },
                    "projectSlug": {
                      "type": "string"
                    },
                    "shortId": {
                      "type": "string"
                    },
                    "group": {
                      "type": "object",
                      "required": [
                        "lastSeen",
                        "numComments",
                        "userCount",
                        "culprit",
                        "title",
                        "id",
                        "assignedTo",
                        "logger",
                        "type",
                        "annotations",
                        "metadata",
                        "status",
                        "subscriptionDetails",
                        "isPublic",
                        "hasSeen",
                        "shortId",
                        "shareId",
                        "firstSeen",
                        "count",
                        "permalink",
                        "level",
                        "isSubscribed",
                        "isBookmarked",
                        "project",
                        "statusDetails"
                      ],
                      "properties": {
                        "lastSeen": {
                          "type": "string"
                        },
                        "numComments": {
                          "type": "integer"
                        },
                        "userCount": {
                          "type": "integer"
                        },
                        "culprit": {
                          "type": "string",
                          "nullable": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "assignedTo": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "logger": {
                          "type": "string",
                          "nullable": true
                        },
                        "type": {
                          "type": "string"
                        },
                        "annotations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "function": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "filename": {
                              "type": "string"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "resolved",
                            "unresolved",
                            "ignored"
                          ]
                        },
                        "subscriptionDetails": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "reason": {
                              "type": "string"
                            }
                          }
                        },
                        "isPublic": {
                          "type": "boolean"
                        },
                        "hasSeen": {
                          "type": "boolean"
                        },
                        "shortId": {
                          "type": "string"
                        },
                        "shareId": {
                          "type": "string",
                          "nullable": true
                        },
                        "firstSeen": {
                          "type": "string"
                        },
                        "count": {
                          "type": "string"
                        },
                        "permalink": {
                          "type": "string"
                        },
                        "level": {
                          "type": "string"
                        },
                        "isSubscribed": {
                          "type": "boolean"
                        },
                        "isBookmarked": {
                          "type": "boolean"
                        },
                        "project": {
                          "type": "object",
                          "properties": {
                            "slug": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "statusDetails": {
                          "type": "object"
                        }
                      }
                    },
                    "groupId": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "group": {
                    "annotations": [],
                    "assignedTo": null,
                    "count": "1",
                    "culprit": "raven.scripts.runner in main",
                    "firstSeen": "2018-11-06T21:19:55Z",
                    "hasSeen": false,
                    "id": "1",
                    "isBookmarked": false,
                    "isPublic": false,
                    "isSubscribed": true,
                    "lastSeen": "2018-11-06T21:19:55Z",
                    "level": "error",
                    "logger": null,
                    "metadata": {
                      "title": "This is an example Python exception"
                    },
                    "numComments": 0,
                    "permalink": "https://sentry.io/the-interstellar-jurisdiction/pump-station/issues/1/",
                    "project": {
                      "id": "2",
                      "name": "Pump Station",
                      "slug": "pump-station"
                    },
                    "shareId": null,
                    "shortId": "PUMP-STATION-1",
                    "status": "unresolved",
                    "statusDetails": {},
                    "subscriptionDetails": null,
                    "title": "This is an example Python exception",
                    "type": "default",
                    "userCount": 0
                  },
                  "groupId": "1",
                  "organizationSlug": "the-interstellar-jurisdiction",
                  "projectSlug": "pump-station",
                  "shortId": "PUMP-STATION-1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "org: read"
            ]
          }
        ]
      }
    },
    "/api/0/projects/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Return a list of projects available to the authenticated session.",
        "operationId": "List Your Projects",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "avatar",
                      "color",
                      "dateCreated",
                      "features",
                      "firstEvent",
                      "hasAccess",
                      "id",
                      "isBookmarked",
                      "isInternal",
                      "isMember",
                      "isPublic",
                      "name",
                      "organization",
                      "platform",
                      "slug",
                      "status"
                    ],
                    "properties": {
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "avatarType": {
                            "type": "string"
                          },
                          "avatarUuid": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "color": {
                        "type": "string"
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "firstEvent": {
                        "type": "string",
                        "nullable": true
                      },
                      "hasAccess": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "isBookmarked": {
                        "type": "boolean"
                      },
                      "isInternal": {
                        "type": "boolean"
                      },
                      "isMember": {
                        "type": "boolean"
                      },
                      "isPublic": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "organization": {
                        "type": "object",
                        "required": [
                          "avatar",
                          "dateCreated",
                          "id",
                          "isEarlyAdopter",
                          "name",
                          "require2FA",
                          "slug",
                          "status"
                        ],
                        "properties": {
                          "avatar": {
                            "type": "object",
                            "properties": {
                              "avatarType": {
                                "type": "string"
                              },
                              "avatarUuid": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "dateCreated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "id": {
                            "type": "string"
                          },
                          "isEarlyAdopter": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "require2FA": {
                            "type": "boolean"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "status": {
                            "type": "object",
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "platform": {
                        "type": "string",
                        "nullable": true
                      },
                      "slug": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "active",
                          "disabled",
                          "pending_deletion",
                          "deletion_in_progress"
                        ]
                      }
                    }
                  }
                },
                "example": [
                  {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "color": "#bf6e3f",
                    "dateCreated": "2018-11-06T21:20:08.064Z",
                    "features": [
                      "servicehooks",
                      "sample-events",
                      "data-forwarding",
                      "rate-limits",
                      "minidump"
                    ],
                    "firstEvent": null,
                    "hasAccess": true,
                    "id": "4",
                    "isBookmarked": false,
                    "isInternal": false,
                    "isMember": true,
                    "isPublic": false,
                    "name": "The Spoiled Yoghurt",
                    "organization": {
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "dateCreated": "2018-11-06T21:19:55.101Z",
                      "id": "2",
                      "isEarlyAdopter": false,
                      "name": "The Interstellar Jurisdiction",
                      "require2FA": false,
                      "slug": "the-interstellar-jurisdiction",
                      "status": {
                        "id": "active",
                        "name": "active"
                      }
                    },
                    "platform": null,
                    "slug": "the-spoiled-yoghurt",
                    "status": "active"
                  },
                  {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "color": "#bf5b3f",
                    "dateCreated": "2018-11-06T21:19:58.536Z",
                    "features": [
                      "releases",
                      "sample-events",
                      "minidump",
                      "servicehooks",
                      "rate-limits",
                      "data-forwarding"
                    ],
                    "firstEvent": null,
                    "hasAccess": true,
                    "id": "3",
                    "isBookmarked": false,
                    "isInternal": false,
                    "isMember": true,
                    "isPublic": false,
                    "name": "Prime Mover",
                    "organization": {
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "dateCreated": "2018-11-06T21:19:55.101Z",
                      "id": "2",
                      "isEarlyAdopter": false,
                      "name": "The Interstellar Jurisdiction",
                      "require2FA": false,
                      "slug": "the-interstellar-jurisdiction",
                      "status": {
                        "id": "active",
                        "name": "active"
                      }
                    },
                    "platform": null,
                    "slug": "prime-mover",
                    "status": "active"
                  },
                  {
                    "avatar": {
                      "avatarType": "letter_avatar",
                      "avatarUuid": null
                    },
                    "color": "#3fbf7f",
                    "dateCreated": "2018-11-06T21:19:55.121Z",
                    "features": [
                      "releases",
                      "sample-events",
                      "minidump",
                      "servicehooks",
                      "rate-limits",
                      "data-forwarding"
                    ],
                    "firstEvent": null,
                    "hasAccess": true,
                    "id": "2",
                    "isBookmarked": false,
                    "isInternal": false,
                    "isMember": true,
                    "isPublic": false,
                    "name": "Pump Station",
                    "organization": {
                      "avatar": {
                        "avatarType": "letter_avatar",
                        "avatarUuid": null
                      },
                      "dateCreated": "2018-11-06T21:19:55.101Z",
                      "id": "2",
                      "isEarlyAdopter": false,
                      "name": "The Interstellar Jurisdiction",
                      "require2FA": false,
                      "slug": "the-interstellar-jurisdiction",
                      "status": {
                        "id": "active",
                        "name": "active"
                      }
                    },
                    "platform": null,
                    "slug": "pump-station",
                    "status": "active"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:read"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/files/dsyms/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Retrieve a list of debug information files for a given project.",
        "operationId": "List a Project's Debug Information Files",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the file belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project to list the DIFs of.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "description": "Upload a new debug information file for the given release.\n\nUnlike other API requests, files must be uploaded using the\ntraditional multipart/form-data content-type.\n\nThe file uploaded is a zip archive of an Apple .dSYM folder which\ncontains the individual debug images.  Uploading through this endpoint\nwill create different files for the contained images.",
        "operationId": "Upload a New File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the project belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project to upload a file to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The multipart encoded file."
                  }
                }
              },
              "example": {
                "file": "debug.zip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "description": "Delete a debug information file for a given project.",
        "operationId": "Delete a Specific Project's Debug Information File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the file belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project to delete the DIF.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID of the DIF to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:write"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/users/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Return a list of users seen within this project.",
        "operationId": "List a Project's Users",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Limit results to users matching the given query. Prefixes should be used to suggest the field to match on: `id`, `email`, `username`, `ip`. For example, `query=email:foo@example.com`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "dateCreated",
                      "id",
                      "username",
                      "email"
                    ],
                    "properties": {
                      "dateCreated": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string",
                        "nullable": true
                      },
                      "email": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2020-07-16T00:50:40.342174Z",
                    "id": "21077833046",
                    "username": "sentry",
                    "email": "sentry@example.com"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:read"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/tags/{key}/values/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Return a list of values associated with this key.  The `query`\nparameter can be used to to perform a \"contains\" match on\nvalues. \n\nWhen [paginated](/api/pagination) can return at most 1000 values.",
        "operationId": "List a Tag's Values",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "The tag key to look up.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "name": "mint_choco"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:read"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/stats/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Caution\nThis endpoint may change in the future without  notice.",
        "description": "Return a set of points representing a normalized timestamp and the\nnumber of events seen in the period.\n\nQuery ranges are limited to Sentry's configured time-series resolutions.",
        "operationId": "Retrieve Event Counts for a Project",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stat",
            "in": "query",
            "description": "The name of the stat to query `(\"received\", \"rejected\", \"blacklisted\", \"generated\")`.",
            "schema": {
              "type": "string",
              "enum": [
                "received",
                "rejected",
                "blacklisted",
                "generated"
              ]
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "A timestamp to set the start of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "A timestamp to set the end of the query in seconds since UNIX epoch.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "An explicit resolution to search for (one of `10s`, `1h`, and `1d`).",
            "schema": {
              "type": "string",
              "enum": [
                "10s",
                "1h",
                "1d"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "example": [
                  [
                    1541455200,
                    1184
                  ],
                  [
                    1541458800,
                    1410
                  ],
                  [
                    1541462400,
                    1440
                  ],
                  [
                    1541466000,
                    1682
                  ],
                  [
                    1541469600,
                    1203
                  ],
                  [
                    1541473200,
                    497
                  ],
                  [
                    1541476800,
                    661
                  ],
                  [
                    1541480400,
                    1481
                  ],
                  [
                    1541484000,
                    678
                  ],
                  [
                    1541487600,
                    1857
                  ],
                  [
                    1541491200,
                    819
                  ],
                  [
                    1541494800,
                    1013
                  ],
                  [
                    1541498400,
                    1883
                  ],
                  [
                    1541502000,
                    1450
                  ],
                  [
                    1541505600,
                    1102
                  ],
                  [
                    1541509200,
                    1317
                  ],
                  [
                    1541512800,
                    1017
                  ],
                  [
                    1541516400,
                    813
                  ],
                  [
                    1541520000,
                    1189
                  ],
                  [
                    1541523600,
                    496
                  ],
                  [
                    1541527200,
                    1936
                  ],
                  [
                    1541530800,
                    1405
                  ],
                  [
                    1541534400,
                    617
                  ],
                  [
                    1541538000,
                    1533
                  ]
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:read"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/user-feedback/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Return a list of user feedback items within this project.",
        "operationId": "List a Project's User Feedback",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "comments",
                      "dateCreated",
                      "email",
                      "event",
                      "eventID",
                      "id",
                      "issue",
                      "name",
                      "user"
                    ],
                    "properties": {
                      "comments": {
                        "type": "string"
                      },
                      "dateCreated": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "event": {
                        "type": "object",
                        "properties": {
                          "eventID": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "eventID": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "issue": {
                        "type": "object",
                        "nullable": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "user": {
                        "type": "object",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "comments": "It broke!",
                    "dateCreated": "2018-11-06T21:20:11.468Z",
                    "email": "jane@example.com",
                    "event": {
                      "eventID": "14bad9a2e3774046977a21440ddb39b2",
                      "id": null
                    },
                    "eventID": "14bad9a2e3774046977a21440ddb39b2",
                    "id": "1",
                    "issue": null,
                    "name": "Jane Smith",
                    "user": null
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "description": "Submit and associate user feedback with an issue.\n\nFeedback must be received by the server no more than 30 minutes after the event was saved.\n\nAdditionally, within 5 minutes of submitting feedback it may also be overwritten. This is useful in situations where you may need to retry sending a request due to network failures.\n\nIf feedback is rejected due to a mutability threshold, a 409 status code will be returned.\n\nNote: Feedback may be submitted with DSN authentication (see auth documentation).",
        "operationId": "Submit User Feedback",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "event_id",
                  "name",
                  "email",
                  "comments"
                ],
                "type": "object",
                "properties": {
                  "event_id": {
                    "type": "string",
                    "description": "The event ID. This can be retrieved from the [beforeSend callback](https://docs.sentry.io/platforms/javascript/configuration/filtering/#using-beforesend)."
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name."
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email address."
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments supplied by user."
                  }
                }
              },
              "example": {
                "event_id": "14bad9a2e3774046977a21440ddb39b2",
                "name": "Jane Schmidt",
                "email": "jane@empowerplant.io",
                "comments": "It broke!"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "comments",
                    "dateCreated",
                    "email",
                    "event",
                    "eventID",
                    "id",
                    "issue",
                    "name",
                    "user"
                  ],
                  "properties": {
                    "comments": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "event": {
                      "type": "object",
                      "properties": {
                        "eventID": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "eventID": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "issue": {
                      "type": "object",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "comments": "It broke!",
                  "dateCreated": "2018-11-06T21:20:11.468Z",
                  "email": "jane@example.com",
                  "event": {
                    "eventID": "14bad9a2e3774046977a21440ddb39b2",
                    "id": null
                  },
                  "eventID": "14bad9a2e3774046977a21440ddb39b2",
                  "id": "1",
                  "issue": null,
                  "name": "Jane Smith",
                  "user": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:write"
            ]
          },
          {
            "dsn": []
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/hooks/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Return a list of service hooks bound to a project.",
        "operationId": "List a Project's Service Hooks",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "dateCreated",
                      "events",
                      "id",
                      "secret",
                      "status",
                      "url"
                    ],
                    "properties": {
                      "dateCreated": {
                        "type": "string"
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "string"
                      },
                      "secret": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:20:08.143Z",
                    "events": [
                      "event.alert",
                      "event.created"
                    ],
                    "id": "4f9d73e63b7144ecb8944c41620a090b",
                    "secret": "8fcac28aaa4c4f5fa572b61d40a8e084364db25fd37449c299e5a41c0504cbc2",
                    "status": "active",
                    "url": "https://empowerplant.io/sentry-hook"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "You do not have that feature enabled"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "description": "Register a new service hook on a project.\n\nEvents include:\n\n- event.alert: An alert is generated for an event (via rules).\n- event.created: A new event has been processed.\n\nThis endpoint requires the 'servicehooks' feature to be enabled for your project.",
        "operationId": "Register a New Service Hook",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "url",
                  "events"
                ],
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The URL for the webhook."
                  },
                  "events": {
                    "type": "array",
                    "description": "The events to subscribe to.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "example": {
                "url": "https://empowerplant.io/sentry-hook",
                "events": [
                  "event.alert",
                  "event.created"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "dateCreated",
                    "events",
                    "id",
                    "secret",
                    "status",
                    "url"
                  ],
                  "properties": {
                    "dateCreated": {
                      "type": "string"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:08.143Z",
                  "events": [
                    "event.alert",
                    "event.created"
                  ],
                  "id": "4f9d73e63b7144ecb8944c41620a090b",
                  "secret": "8fcac28aaa4c4f5fa572b61d40a8e084364db25fd37449c299e5a41c0504cbc2",
                  "status": "active",
                  "url": "https://empowerplant.io/sentry-hook"
                }
              }
            }
          },
          "403": {
            "description": "You do not have that feature enabled"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:write"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/hooks/{hook_id}/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Return a service hook bound to a project.",
        "operationId": "Retrieve a Service Hook",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hook_id",
            "in": "path",
            "description": "The GUID of the service hook.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "dateCreated",
                    "events",
                    "id",
                    "secret",
                    "status",
                    "url"
                  ],
                  "properties": {
                    "dateCreated": {
                      "type": "string"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:08.143Z",
                  "events": [
                    "event.alert",
                    "event.created"
                  ],
                  "id": "4f9d73e63b7144ecb8944c41620a090b",
                  "secret": "8fcac28aaa4c4f5fa572b61d40a8e084364db25fd37449c299e5a41c0504cbc2",
                  "status": "active",
                  "url": "https://empowerplant.io/sentry-hook"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "description": "Update a service hook.",
        "operationId": "Update a Service Hook",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hook_id",
            "in": "path",
            "description": "The GUID of the service hook.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "url",
                  "events"
                ],
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The URL for the webhook."
                  },
                  "events": {
                    "type": "array",
                    "description": "The events to subscribe to.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "example": {
                "url": "https://empowerplant.io/sentry-hook",
                "events": [
                  "event.alert",
                  "event.created"
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "dateCreated",
                    "events",
                    "id",
                    "secret",
                    "status",
                    "url"
                  ],
                  "properties": {
                    "dateCreated": {
                      "type": "string"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:08.143Z",
                  "events": [
                    "event.alert",
                    "event.created"
                  ],
                  "id": "4f9d73e63b7144ecb8944c41620a090b",
                  "secret": "8fcac28aaa4c4f5fa572b61d40a8e084364db25fd37449c299e5a41c0504cbc2",
                  "status": "active",
                  "url": "https://empowerplant.io/sentry-hook"
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "description": "Remove a service hook.",
        "operationId": "Remove a Service Hook",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the client keys belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hook_id",
            "in": "path",
            "description": "The GUID of the service hook.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:admin"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/events/{event_id}/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Return details on an individual event.",
        "operationId": "Retrieve an Event for a Project",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the event belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the event belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "The ID of the event to retrieve. It is the hexadecimal ID as reported by the client.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "eventID",
                    "dist",
                    "userReport",
                    "previousEventID",
                    "message",
                    "id",
                    "size",
                    "errors",
                    "platform",
                    "nextEventID",
                    "type",
                    "metadata",
                    "tags",
                    "dateCreated",
                    "dateReceived",
                    "user",
                    "entries",
                    "packages",
                    "sdk",
                    "_meta",
                    "contexts",
                    "fingerprints",
                    "context",
                    "release",
                    "groupID",
                    "title"
                  ],
                  "properties": {
                    "eventID": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "userReport": {
                      "type": "object",
                      "nullable": true
                    },
                    "previousEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "column": {
                                "type": "integer"
                              },
                              "source": {
                                "type": "string"
                              },
                              "row": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    },
                    "platform": {
                      "type": "string"
                    },
                    "nextEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string"
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "type",
                            "value"
                          ],
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "title"
                          ],
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "_meta": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "dateReceived": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "nullable": true,
                      "required": [
                        "username",
                        "name",
                        "ip_address",
                        "email",
                        "data",
                        "id"
                      ],
                      "properties": {
                        "username": {
                          "type": "string",
                          "nullable": true
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "ip_address": {
                          "type": "string",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "data": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "isStaff": {
                              "type": "boolean"
                            }
                          }
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "entries": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "values"
                                ],
                                "properties": {
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "category",
                                        "level",
                                        "event_id",
                                        "timestamp",
                                        "data",
                                        "message",
                                        "type"
                                      ],
                                      "properties": {
                                        "category": {
                                          "type": "string"
                                        },
                                        "level": {
                                          "type": "string"
                                        },
                                        "event_id": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "timestamp": {
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "data": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "message": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "fragment",
                                  "cookies",
                                  "inferredContentType",
                                  "env",
                                  "headers",
                                  "url",
                                  "query",
                                  "data",
                                  "method"
                                ],
                                "properties": {
                                  "fragment": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "cookies": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "inferredContentType": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "env": {
                                    "type": "object",
                                    "nullable": true,
                                    "properties": {
                                      "ENV": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "headers": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "query": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "data": {
                                    "type": "object",
                                    "nullable": true
                                  },
                                  "method": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "formatted"
                                ],
                                "properties": {
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "excOmitted",
                                  "hasSystemFrames",
                                  "values"
                                ],
                                "properties": {
                                  "excOmitted": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "integer"
                                    }
                                  },
                                  "hasSystemFrames": {
                                    "type": "boolean"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "stacktrace",
                                        "module",
                                        "rawStacktrace",
                                        "mechanism",
                                        "threadId",
                                        "value",
                                        "type"
                                      ],
                                      "properties": {
                                        "stacktrace": {
                                          "type": "object",
                                          "nullable": true,
                                          "required": [
                                            "frames",
                                            "framesOmitted",
                                            "registers",
                                            "hasSystemFrames"
                                          ],
                                          "properties": {
                                            "frames": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "function",
                                                  "errors",
                                                  "colNo",
                                                  "vars",
                                                  "package",
                                                  "absPath",
                                                  "inApp",
                                                  "lineNo",
                                                  "module",
                                                  "filename",
                                                  "platform",
                                                  "instructionAddr",
                                                  "context",
                                                  "symbolAddr",
                                                  "trust",
                                                  "symbol"
                                                ],
                                                "properties": {
                                                  "function": {
                                                    "type": "string"
                                                  },
                                                  "errors": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "colNo": {
                                                    "type": "integer",
                                                    "nullable": true
                                                  },
                                                  "vars": {
                                                    "type": "object",
                                                    "nullable": true
                                                  },
                                                  "package": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "absPath": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "inApp": {
                                                    "type": "boolean"
                                                  },
                                                  "lineNo": {
                                                    "type": "integer"
                                                  },
                                                  "module": {
                                                    "type": "string"
                                                  },
                                                  "filename": {
                                                    "type": "string"
                                                  },
                                                  "platform": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "instructionAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "context": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "array",
                                                      "items": {
                                                        "oneOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "symbolAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "trust": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "symbol": {
                                                    "type": "string",
                                                    "nullable": true
                                                  }
                                                }
                                              }
                                            },
                                            "framesOmitted": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "registers": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "hasSystemFrames": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "module": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "rawStacktrace": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "mechanism": {
                                          "type": "object",
                                          "nullable": true,
                                          "properties": {
                                            "type": {
                                              "type": "string"
                                            },
                                            "handled": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "threadId": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "value": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "packages": {
                      "type": "object"
                    },
                    "sdk": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_meta": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "string",
                          "nullable": true
                        },
                        "context": {
                          "type": "string",
                          "nullable": true
                        },
                        "entries": {
                          "type": "object"
                        },
                        "contexts": {
                          "type": "string",
                          "nullable": true
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        },
                        "packages": {
                          "type": "string",
                          "nullable": true
                        },
                        "tags": {
                          "type": "object"
                        },
                        "sdk": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "contexts": {
                      "type": "object",
                      "properties": {
                        "ForbiddenError": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer"
                            },
                            "statusText": {
                              "type": "string"
                            },
                            "responseJSON": {
                              "type": "object",
                              "properties": {
                                "detail": {
                                  "type": "string"
                                }
                              }
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "browser": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "os": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "trace": {
                          "type": "object",
                          "properties": {
                            "span_id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "trace_id": {
                              "type": "string"
                            },
                            "op": {
                              "type": "string"
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "fingerprints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {
                        "resp": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer"
                            },
                            "responseJSON": {
                              "type": "object",
                              "properties": {
                                "detail": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "statusText": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "stack": {
                              "type": "string"
                            }
                          }
                        },
                        "session": {
                          "type": "object",
                          "properties": {
                            "foo": {
                              "type": "string"
                            }
                          }
                        },
                        "unauthorized": {
                          "type": "boolean"
                        },
                        "url": {
                          "type": "string"
                        }
                      }
                    },
                    "release": {
                      "type": "object",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "authors",
                            "commitCount",
                            "data",
                            "dateCreated",
                            "dateReleased",
                            "deployCount",
                            "firstEvent",
                            "lastCommit",
                            "lastDeploy",
                            "lastEvent",
                            "newGroups",
                            "owner",
                            "projects",
                            "ref",
                            "shortVersion",
                            "version",
                            "url"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "authors": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "commitCount": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "data": {
                              "type": "object"
                            },
                            "dateCreated": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateReleased": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "deployCount": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "firstEvent": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "lastCommit": {
                              "type": "object",
                              "nullable": true
                            },
                            "lastDeploy": {
                              "type": "object",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "environment",
                                    "name",
                                    "dateStarted",
                                    "dateFinished",
                                    "url",
                                    "id"
                                  ],
                                  "properties": {
                                    "environment": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "dateStarted": {
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true
                                    },
                                    "dateFinished": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "string",
                                  "nullable": true,
                                  "not": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "array",
                                        "items": {}
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "lastEvent": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "newGroups": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "owner": {
                              "type": "object",
                              "nullable": true
                            },
                            "projects": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "slug": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ref": {
                              "type": "string",
                              "nullable": true
                            },
                            "shortVersion": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        }
                      ]
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "eventID": "9999aaaaca8b46d797c23c6077c6ff01",
                  "dist": null,
                  "userReport": null,
                  "previousEventID": null,
                  "message": "",
                  "title": "This is an example Python exception",
                  "id": "9999aaafcc8b46d797c23c6077c6ff01",
                  "size": 107762,
                  "errors": [
                    {
                      "data": {
                        "column": 8,
                        "source": "https://s1.sentry-cdn.com/_static/bloopbloop/sentry/dist/app.js.map",
                        "row": 15
                      },
                      "message": "Invalid location in sourcemap",
                      "type": "js_invalid_sourcemap_location"
                    }
                  ],
                  "platform": "javascript",
                  "nextEventID": "99f9e199e9a74a14bfef6196ad741619",
                  "type": "error",
                  "metadata": {
                    "type": "ForbiddenError",
                    "value": "GET /organizations/hellboy-meowmeow/users/ 403"
                  },
                  "tags": [
                    {
                      "value": "Chrome 83.0.4103",
                      "key": "browser",
                      "_meta": null
                    },
                    {
                      "value": "Chrome",
                      "key": "browser.name",
                      "_meta": null
                    },
                    {
                      "value": "prod",
                      "key": "environment",
                      "_meta": null
                    },
                    {
                      "value": "yes",
                      "key": "handled",
                      "_meta": null
                    },
                    {
                      "value": "error",
                      "key": "level",
                      "_meta": null
                    },
                    {
                      "value": "generic",
                      "key": "mechanism",
                      "_meta": null
                    }
                  ],
                  "dateCreated": "2020-06-17T22:26:56.098086Z",
                  "dateReceived": "2020-06-17T22:26:56.428721Z",
                  "user": {
                    "username": null,
                    "name": "Hell Boy",
                    "ip_address": "192.168.1.1",
                    "email": "hell@boy.cat",
                    "data": {
                      "isStaff": false
                    },
                    "id": "550747"
                  },
                  "entries": [
                    {
                      "type": "exception",
                      "data": {
                        "values": [
                          {
                            "stacktrace": {
                              "frames": [
                                {
                                  "function": "ignoreOnError",
                                  "errors": null,
                                  "colNo": 23,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "inApp": false,
                                  "lineNo": 71,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      66,
                                      "            }"
                                    ],
                                    [
                                      67,
                                      "            // Attempt to invoke user-land function"
                                    ],
                                    [
                                      68,
                                      "            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it"
                                    ],
                                    [
                                      69,
                                      "            //       means the sentry.javascript SDK caught an error invoking your application code. This"
                                    ],
                                    [
                                      70,
                                      "            //       is expected behavior and NOT indicative of a bug with sentry.javascript."
                                    ],
                                    [
                                      71,
                                      "            return fn.apply(this, wrappedArguments);"
                                    ],
                                    [
                                      72,
                                      "            // tslint:enable:no-unsafe-any"
                                    ],
                                    [
                                      73,
                                      "        }"
                                    ],
                                    [
                                      74,
                                      "        catch (ex) {"
                                    ],
                                    [
                                      75,
                                      "            ignoreNextOnError();"
                                    ],
                                    [
                                      76,
                                      "            withScope(function (scope) {"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": "apply",
                                  "errors": null,
                                  "colNo": 24,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "inApp": false,
                                  "lineNo": 74,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      69,
                                      "     */"
                                    ],
                                    [
                                      70,
                                      "    triggerAsync: function triggerAsync() {"
                                    ],
                                    [
                                      71,
                                      "        var args = arguments,"
                                    ],
                                    [
                                      72,
                                      "            me = this;"
                                    ],
                                    [
                                      73,
                                      "        _.nextTick(function () {"
                                    ],
                                    [
                                      74,
                                      "            me.trigger.apply(me, args);"
                                    ],
                                    [
                                      75,
                                      "        });"
                                    ],
                                    [
                                      76,
                                      "    },"
                                    ],
                                    [
                                      77,
                                      ""
                                    ],
                                    [
                                      78,
                                      "    /**"
                                    ],
                                    [
                                      79,
                                      "     * Wraps the trigger mechanism with a deferral function."
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "module": null,
                            "rawStacktrace": {
                              "frames": [
                                {
                                  "function": "a",
                                  "errors": null,
                                  "colNo": 88800,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 81,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      76,
                                      "/*!"
                                    ],
                                    [
                                      77,
                                      "  Copyright (c) 2018 Jed Watson."
                                    ],
                                    [
                                      78,
                                      "  Licensed under the MIT License (MIT), see"
                                    ],
                                    [
                                      79,
                                      "  http://jedwatson.github.io/react-select"
                                    ],
                                    [
                                      80,
                                      "*/"
                                    ],
                                    [
                                      81,
                                      "{snip} e,t)}));return e.handleEvent?e.handleEvent.apply(this,s):e.apply(this,s)}catch(e){throw c(),Object(o.m)((function(n){n.addEventProcessor((fu {snip}"
                                    ],
                                    [
                                      82,
                                      "/*!"
                                    ],
                                    [
                                      83,
                                      " * JavaScript Cookie v2.2.1"
                                    ],
                                    [
                                      84,
                                      " * https://github.com/js-cookie/js-cookie"
                                    ],
                                    [
                                      85,
                                      " *"
                                    ],
                                    [
                                      86,
                                      " * Copyright 2006, 2015 Klaus Hartl & Fagner Brack"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": null,
                                  "errors": null,
                                  "colNo": 149484,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 119,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      114,
                                      "/* @license"
                                    ],
                                    [
                                      115,
                                      "Papa Parse"
                                    ],
                                    [
                                      116,
                                      "v5.2.0"
                                    ],
                                    [
                                      117,
                                      "https://github.com/mholt/PapaParse"
                                    ],
                                    [
                                      118,
                                      "License: MIT"
                                    ],
                                    [
                                      119,
                                      "{snip} (){var e=arguments,t=this;r.nextTick((function(){t.trigger.apply(t,e)}))},deferWith:function(e){var t=this.trigger,n=this,r=function(){t.app {snip}"
                                    ],
                                    [
                                      120,
                                      "/**!"
                                    ],
                                    [
                                      121,
                                      " * @fileOverview Kickass library to create and place poppers near their reference elements."
                                    ],
                                    [
                                      122,
                                      " * @version 1.16.1"
                                    ],
                                    [
                                      123,
                                      " * @license"
                                    ],
                                    [
                                      124,
                                      " * Copyright (c) 2016 Federico Zivolo and contributors"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "mechanism": {
                              "type": "generic",
                              "handled": true
                            },
                            "threadId": null,
                            "value": "GET /organizations/hellboy-meowmeow/users/ 403",
                            "type": "ForbiddenError"
                          }
                        ],
                        "excOmitted": null,
                        "hasSystemFrames": true
                      }
                    },
                    {
                      "type": "breadcrumbs",
                      "data": {
                        "values": [
                          {
                            "category": "tracing",
                            "level": "debug",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.266586Z",
                            "data": null,
                            "message": "[Tracing] pushActivity: idleTransactionStarted#1",
                            "type": "debug"
                          },
                          {
                            "category": "xhr",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.619446Z",
                            "data": {
                              "url": "/api/0/internal/health/",
                              "status_code": 200,
                              "method": "GET"
                            },
                            "message": null,
                            "type": "http"
                          },
                          {
                            "category": "sentry.transaction",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.945016Z",
                            "data": null,
                            "message": "7787a027f3fb46c985aaa2287b3f4d09",
                            "type": "default"
                          }
                        ]
                      }
                    },
                    {
                      "type": "request",
                      "data": {
                        "fragment": null,
                        "cookies": [],
                        "inferredContentType": null,
                        "env": null,
                        "headers": [
                          [
                            "User-Agent",
                            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36"
                          ]
                        ],
                        "url": "https://sentry.io/organizations/hellboy-meowmeow/issues/",
                        "query": [
                          [
                            "project",
                            "5236886"
                          ]
                        ],
                        "data": null,
                        "method": null
                      }
                    }
                  ],
                  "packages": {},
                  "sdk": {
                    "version": "5.17.0",
                    "name": "sentry.javascript.browser"
                  },
                  "_meta": {
                    "user": null,
                    "context": null,
                    "entries": {},
                    "contexts": null,
                    "message": null,
                    "packages": null,
                    "tags": {},
                    "sdk": null
                  },
                  "contexts": {
                    "ForbiddenError": {
                      "status": 403,
                      "statusText": "Forbidden",
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "type": "default"
                    },
                    "browser": {
                      "version": "83.0.4103",
                      "type": "browser",
                      "name": "Chrome"
                    },
                    "os": {
                      "version": "10",
                      "type": "os",
                      "name": "Windows"
                    },
                    "trace": {
                      "span_id": "83db1ad17e67dfe7",
                      "type": "trace",
                      "trace_id": "da6caabcd90e45fdb81f6655824a5f88",
                      "op": "navigation"
                    },
                    "organization": {
                      "type": "default",
                      "id": "323938",
                      "slug": "hellboy-meowmeow"
                    }
                  },
                  "fingerprints": [
                    "fbe908cc63d63ea9763fd84cb6bad177"
                  ],
                  "context": {
                    "resp": {
                      "status": 403,
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "name": "ForbiddenError",
                      "statusText": "Forbidden",
                      "message": "GET /organizations/hellboy-meowmeow/users/ 403",
                      "stack": "Error\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480441\n    at u (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51006)\n    at Generator._invoke (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:50794)\n    at Generator.A.forEach.e.<computed> [as next] (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51429)\n    at n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68684)\n    at s (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68895)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68954\n    at new Promise (<anonymous>)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68835\n    at v (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480924)\n    at m (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480152)\n    at t.fetchMemberList (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:902983)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:900527)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:15597)\n    at Pc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:101023)\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Rc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:97371)\n    at Oc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:87690)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45820\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Zo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45765)\n    at Jo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45700)\n    at gc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:84256)\n    at Object.enqueueSetState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:50481)\n    at t.M.setState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:173:1439)\n    at t.onUpdate (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:543076)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at p.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at p.onInitializeUrlState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:541711)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at Function.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149484\n    at a (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:81:88800)"
                    }
                  },
                  "release": {
                    "dateReleased": "2020-06-17T19:21:02.186004Z",
                    "newGroups": 4,
                    "commitCount": 11,
                    "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                    "data": {},
                    "lastDeploy": {
                      "name": "b65bc521378269d3eaefdc964f8ef56621414943 to prod",
                      "url": null,
                      "environment": "prod",
                      "dateStarted": null,
                      "dateFinished": "2020-06-17T19:20:55.641748Z",
                      "id": "6883490"
                    },
                    "deployCount": 1,
                    "dateCreated": "2020-06-17T18:45:31.042157Z",
                    "lastEvent": "2020-07-08T21:21:21Z",
                    "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "firstEvent": "2020-06-17T22:25:14Z",
                    "lastCommit": {
                      "repository": {
                        "status": "active",
                        "integrationId": "2933",
                        "externalSlug": "getsentry/getsentry",
                        "name": "getsentry/getsentry",
                        "provider": {
                          "id": "integrations:github",
                          "name": "GitHub"
                        },
                        "url": "https://github.com/getsentry/getsentry",
                        "id": "2",
                        "dateCreated": "2016-10-10T21:36:45.373994Z"
                      },
                      "releases": [
                        {
                          "dateReleased": "2020-06-23T13:26:18.427090Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/staging/2077/",
                          "dateCreated": "2020-06-23T13:22:50.420265Z",
                          "version": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "shortVersion": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "ref": "perf/source-maps-test"
                        },
                        {
                          "dateReleased": "2020-06-17T19:21:02.186004Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                          "dateCreated": "2020-06-17T18:45:31.042157Z",
                          "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "ref": "master"
                        }
                      ],
                      "dateCreated": "2020-06-17T18:43:37Z",
                      "message": "feat(billing): Get a lot of money",
                      "id": "b65bc521378269d3eaefdc964f8ef56621414943"
                    },
                    "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "authors": [
                      {
                        "username": "a37a1b4520ce46cea147ae2885a4e7e7",
                        "lastLogin": "2020-09-14T22:34:55.550640Z",
                        "isSuperuser": false,
                        "isManaged": false,
                        "experiments": {},
                        "lastActive": "2020-09-15T22:13:20.503880Z",
                        "isStaff": false,
                        "id": "655784",
                        "isActive": true,
                        "has2fa": false,
                        "name": "hell.boy@sentry.io",
                        "avatarUrl": "https://secure.gravatar.com/avatar/eaa22e25b3a984659420831a77e4874e?s=32&d=mm",
                        "dateJoined": "2020-04-20T16:21:25.365772Z",
                        "emails": [
                          {
                            "is_verified": false,
                            "id": "784574",
                            "email": "hellboy@gmail.com"
                          },
                          {
                            "is_verified": true,
                            "id": "749185",
                            "email": "hell.boy@sentry.io"
                          }
                        ],
                        "avatar": {
                          "avatarUuid": null,
                          "avatarType": "letter_avatar"
                        },
                        "hasPasswordAuth": false,
                        "email": "hell.boy@sentry.io"
                      }
                    ],
                    "owner": null,
                    "ref": "master",
                    "projects": [
                      {
                        "name": "Sentry CSP",
                        "slug": "sentry-csp"
                      },
                      {
                        "name": "Backend",
                        "slug": "sentry"
                      },
                      {
                        "name": "Frontend",
                        "slug": "javascript"
                      }
                    ]
                  },
                  "groupID": "1341191803"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:read"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/events/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Return a list of error events bound to a project.",
        "operationId": "List a Project's Error Events",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the events belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the events belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "full",
            "in": "query",
            "description": "If this is set to true then the event payload will include the full event body, including the stacktrace. \nSet to true to enable.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "eventID",
                      "tags",
                      "dateCreated",
                      "user",
                      "message",
                      "id",
                      "platform",
                      "event.type",
                      "groupID",
                      "title"
                    ],
                    "properties": {
                      "eventID": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "dateCreated": {
                        "type": "string"
                      },
                      "user": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                          "username",
                          "name",
                          "ip_address",
                          "email",
                          "data",
                          "id"
                        ],
                        "properties": {
                          "username": {
                            "type": "string",
                            "nullable": true
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "ip_address": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "data": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "isStaff": {
                                "type": "boolean"
                              }
                            }
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "message": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "platform": {
                        "type": "string"
                      },
                      "event.type": {
                        "type": "string"
                      },
                      "groupID": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "eventID": "9fac2ceed9344f2bbfdd1fdacb0ed9b1",
                    "tags": [
                      {
                        "key": "browser",
                        "value": "Chrome 60.0"
                      },
                      {
                        "key": "device",
                        "value": "Other"
                      },
                      {
                        "key": "environment",
                        "value": "production"
                      },
                      {
                        "value": "fatal",
                        "key": "level"
                      },
                      {
                        "key": "os",
                        "value": "Mac OS X 10.12.6"
                      },
                      {
                        "value": "CPython 2.7.16",
                        "key": "runtime"
                      },
                      {
                        "key": "release",
                        "value": "17642328ead24b51867165985996d04b29310337"
                      },
                      {
                        "key": "server_name",
                        "value": "web1.example.com"
                      }
                    ],
                    "dateCreated": "2020-09-11T17:46:36Z",
                    "user": null,
                    "message": "",
                    "title": "This is an example Python exception",
                    "id": "dfb1a2d057194e76a4186cc8a5271553",
                    "platform": "python",
                    "event.type": "error",
                    "groupID": "1889724436"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:read"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/issues/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Return a list of issues (groups) bound to a project.  All parameters are supplied as query string parameters. \n\n A default query of ``is:unresolved`` is applied. To return results with other statuses send an new query value (i.e. ``?query=`` for all results).\n\nThe ``statsPeriod`` parameter can be used to select the timeline stats which should be present. Possible values are: ``\"\"`` (disable),``\"24h\"``, ``\"14d\"``",
        "operationId": "List a Project's Issues",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statsPeriod",
            "in": "query",
            "description": "An optional stat period (can be one of `\"24h\"`, `\"14d\"`, and `\"\"`).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shortIdLookup",
            "in": "query",
            "description": "If this is set to true then short IDs are looked up by this function as well. This can cause the return value of the function to return an event issue of a different project which is why this is an opt-in. Set to 1 to enable.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "An optional Sentry structured search query. If not provided an implied `\"is:unresolved\"` is assumed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "lastSeen",
                      "numComments",
                      "userCount",
                      "culprit",
                      "title",
                      "id",
                      "assignedTo",
                      "logger",
                      "stats",
                      "type",
                      "annotations",
                      "metadata",
                      "status",
                      "subscriptionDetails",
                      "isPublic",
                      "hasSeen",
                      "shortId",
                      "shareId",
                      "firstSeen",
                      "count",
                      "permalink",
                      "level",
                      "isSubscribed",
                      "isBookmarked",
                      "project",
                      "statusDetails"
                    ],
                    "properties": {
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "assignedTo": {
                        "type": "object",
                        "nullable": true
                      },
                      "count": {
                        "type": "string"
                      },
                      "culprit": {
                        "type": "string"
                      },
                      "firstSeen": {
                        "type": "string"
                      },
                      "hasSeen": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "isBookmarked": {
                        "type": "boolean"
                      },
                      "isPublic": {
                        "type": "boolean"
                      },
                      "isSubscribed": {
                        "type": "boolean"
                      },
                      "lastSeen": {
                        "type": "string"
                      },
                      "level": {
                        "type": "string"
                      },
                      "logger": {
                        "type": "string",
                        "nullable": true
                      },
                      "metadata": {
                        "oneOf": [
                          {
                            "type": "object",
                            "required": [
                              "filename",
                              "type",
                              "value"
                            ],
                            "properties": {
                              "filename": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "title"
                            ],
                            "properties": {
                              "title": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "numComments": {
                        "type": "integer"
                      },
                      "permalink": {
                        "type": "string"
                      },
                      "project": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      },
                      "shareId": {
                        "type": "string",
                        "nullable": true
                      },
                      "shortId": {
                        "type": "string"
                      },
                      "stats": {
                        "type": "object",
                        "properties": {
                          "24h": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "resolved",
                          "unresolved",
                          "ignored"
                        ]
                      },
                      "statusDetails": {
                        "type": "object"
                      },
                      "subscriptionDetails": {
                        "type": "object",
                        "nullable": true
                      },
                      "title": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "userCount": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "annotations": [],
                    "assignedTo": null,
                    "count": "1",
                    "culprit": "raven.scripts.runner in main",
                    "firstSeen": "2018-11-06T21:19:55Z",
                    "hasSeen": false,
                    "id": "1",
                    "isBookmarked": false,
                    "isPublic": false,
                    "isSubscribed": true,
                    "lastSeen": "2018-11-06T21:19:55Z",
                    "level": "error",
                    "logger": null,
                    "metadata": {
                      "title": "This is an example Python exception"
                    },
                    "numComments": 0,
                    "permalink": "https://sentry.io/the-interstellar-jurisdiction/pump-station/issues/1/",
                    "project": {
                      "id": "2",
                      "name": "Pump Station",
                      "slug": "pump-station"
                    },
                    "shareId": null,
                    "shortId": "PUMP-STATION-1",
                    "stats": {
                      "24h": [
                        [
                          1541455200,
                          473
                        ],
                        [
                          1541458800,
                          914
                        ],
                        [
                          1541462400,
                          991
                        ],
                        [
                          1541466000,
                          925
                        ],
                        [
                          1541469600,
                          881
                        ],
                        [
                          1541473200,
                          182
                        ],
                        [
                          1541476800,
                          490
                        ],
                        [
                          1541480400,
                          820
                        ],
                        [
                          1541484000,
                          322
                        ],
                        [
                          1541487600,
                          836
                        ],
                        [
                          1541491200,
                          565
                        ],
                        [
                          1541494800,
                          758
                        ],
                        [
                          1541498400,
                          880
                        ],
                        [
                          1541502000,
                          677
                        ],
                        [
                          1541505600,
                          381
                        ],
                        [
                          1541509200,
                          814
                        ],
                        [
                          1541512800,
                          329
                        ],
                        [
                          1541516400,
                          446
                        ],
                        [
                          1541520000,
                          731
                        ],
                        [
                          1541523600,
                          111
                        ],
                        [
                          1541527200,
                          926
                        ],
                        [
                          1541530800,
                          772
                        ],
                        [
                          1541534400,
                          400
                        ],
                        [
                          1541538000,
                          943
                        ]
                      ]
                    },
                    "status": "unresolved",
                    "statusDetails": {},
                    "subscriptionDetails": null,
                    "title": "This is an example Python exception",
                    "type": "default",
                    "userCount": 0
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Events"
        ],
        "description": "Bulk mutate various attributes on issues.  The list of issues to modify is given through the `id` query parameter.  It is repeated for each issue that should be modified.\n\n- For non-status updates, the `id` query parameter is required.\n- For status updates, the `id` query parameter may be omitted\nfor a batch \"update all\" query.\n- An optional `status` query parameter may be used to restrict\nmutations to only events with the given status.\n\nThe following attributes can be modified and are supplied as JSON object in the body:\n\nIf any ids are out of scope this operation will succeed without any data mutation.",
        "operationId": "Bulk Mutate a List of Issues",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "A list of IDs of the issues to be mutated. This parameter shall be repeated for each issue. It is optional only if a status is mutated in which case an implicit update all is assumed.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Optionally limits the query to issues of the specified status. Valid values are `\"resolved\"`, `\"unresolved\"`, and `\"ignored\"`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The new status for the issues. Valid values are `\"resolved\"`, `\"resolvedInNextRelease\"`, `\"unresolved\"`, and `\"ignored\"`."
                  },
                  "statusDetails": {
                    "type": "object",
                    "properties": {
                      "inRelease": {
                        "type": "string"
                      },
                      "inNextRelease": {
                        "type": "boolean"
                      },
                      "inCommit": {
                        "type": "string"
                      },
                      "ignoreDuration": {
                        "type": "integer"
                      },
                      "ignoreCount": {
                        "type": "integer"
                      },
                      "ignoreWindow": {
                        "type": "integer"
                      },
                      "ignoreUserCount": {
                        "type": "integer"
                      },
                      "ignoreUserWindow": {
                        "type": "integer"
                      }
                    },
                    "description": "Additional details about the resolution. Valid values are `\"inRelease\"`, `\"inNextRelease\"`, `\"inCommit\"`, `\"ignoreDuration\"`, `\"ignoreCount\"`, `\"ignoreWindow\"`, `\"ignoreUserCount\"`, and `\"ignoreUserWindow\"`."
                  },
                  "ignoreDuration": {
                    "type": "integer",
                    "description": "The number of minutes to ignore this issue."
                  },
                  "isPublic": {
                    "type": "boolean",
                    "description": "Sets the issue to public or private."
                  },
                  "merge": {
                    "type": "boolean",
                    "description": "Allows to merge or unmerge different issues."
                  },
                  "assignedTo": {
                    "type": "string",
                    "description": "The actor id (or username) of the user or team that should be assigned to this issue."
                  },
                  "hasSeen": {
                    "type": "boolean",
                    "description": "In case this API call is invoked with a user context this allows changing of the flag that indicates if the user has seen the event."
                  },
                  "isBookmarked": {
                    "type": "boolean",
                    "description": "In case this API call is invoked with a user context this allows changing of the bookmark flag."
                  }
                }
              },
              "example": {
                "isPublic": false,
                "status": "unresolved"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "isPublic",
                    "status",
                    "statusDetails"
                  ],
                  "properties": {
                    "isPublic": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "resolved",
                        "unresolved",
                        "ignored"
                      ]
                    },
                    "statusDetails": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "isPublic": false,
                  "status": "unresolved",
                  "statusDetails": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "description": "Permanently remove the given issues. The list of issues to modify is given through the `id` query parameter.  It is repeated for each issue that should be removed.\n\nOnly queries by 'id' are accepted.\n\nIf any ids are out of scope this operation will succeed without any data mutation.",
        "operationId": "Bulk Remove a List of Issues",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the issues belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "A list of IDs of the issues to be removed. This parameter shall be repeated for each issue, e.g. `?id=1&id=2&id=3`. If this parameter is not provided, it will attempt to remove the first 1000 issues.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project not found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:admin"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/issues/{issue_id}/tags/{key}/values/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Returns details for given tag key related to an issue. \n\nWhen [paginated](/api/pagination) can return at most 1000 values.",
        "operationId": "List a Tag's Values Related to an Issue",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issue belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "The tag key to look the values up for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "key": "ice_cream",
                    "value": "mint_choco"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/issues/{issue_id}/tags/{key}/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Returns details for given tag key related to an issue.",
        "operationId": "Retrieve Tag Details",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issue belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "The tag key to look the values up for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "key",
                    "totalValues"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "totalValues": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "key": "ice_cream",
                  "totalValues": 6
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/issues/{issue_id}/hashes/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "This endpoint lists an issue's hashes, which are the generated checksums used to aggregate individual events.",
        "operationId": "List an Issue's Hashes",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issue belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results.",
            "x-learn-more": "https://docs.sentry.io/api/pagination/",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "latestEvent": {
                        "type": "object",
                        "required": [
                          "eventID",
                          "dist",
                          "message",
                          "id",
                          "size",
                          "errors",
                          "platform",
                          "type",
                          "metadata",
                          "tags",
                          "dateCreated",
                          "dateReceived",
                          "user",
                          "entries",
                          "packages",
                          "sdk",
                          "_meta",
                          "contexts",
                          "fingerprints",
                          "context",
                          "groupID",
                          "title"
                        ],
                        "properties": {
                          "eventID": {
                            "type": "string"
                          },
                          "dist": {
                            "type": "string",
                            "nullable": true
                          },
                          "message": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "size": {
                            "type": "integer"
                          },
                          "errors": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "column": {
                                      "type": "integer"
                                    },
                                    "source": {
                                      "type": "string"
                                    },
                                    "row": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "platform": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "metadata": {
                            "oneOf": [
                              {
                                "type": "object",
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "title"
                                ],
                                "properties": {
                                  "title": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "_meta": {
                                  "type": "string",
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "dateCreated": {
                            "type": "string"
                          },
                          "dateReceived": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "nullable": true,
                            "required": [
                              "username",
                              "name",
                              "ip_address",
                              "email",
                              "data",
                              "id"
                            ],
                            "properties": {
                              "username": {
                                "type": "string",
                                "nullable": true
                              },
                              "name": {
                                "type": "string",
                                "nullable": true
                              },
                              "ip_address": {
                                "type": "string",
                                "nullable": true
                              },
                              "email": {
                                "type": "string",
                                "nullable": true
                              },
                              "data": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "isStaff": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "entries": {
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "data"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "values"
                                      ],
                                      "properties": {
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "category",
                                              "level",
                                              "event_id",
                                              "timestamp",
                                              "data",
                                              "message",
                                              "type"
                                            ],
                                            "properties": {
                                              "category": {
                                                "type": "string"
                                              },
                                              "level": {
                                                "type": "string"
                                              },
                                              "event_id": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "timestamp": {
                                                "type": "string",
                                                "format": "date-time"
                                              },
                                              "data": {
                                                "type": "object",
                                                "nullable": true
                                              },
                                              "message": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "type": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "data"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "fragment",
                                        "cookies",
                                        "inferredContentType",
                                        "env",
                                        "headers",
                                        "url",
                                        "query",
                                        "data",
                                        "method"
                                      ],
                                      "properties": {
                                        "fragment": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "cookies": {
                                          "type": "array",
                                          "nullable": true,
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "inferredContentType": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "env": {
                                          "type": "object",
                                          "nullable": true,
                                          "properties": {
                                            "ENV": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "headers": {
                                          "type": "array",
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "url": {
                                          "type": "string"
                                        },
                                        "query": {
                                          "type": "array",
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "data": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "method": {
                                          "type": "string",
                                          "nullable": true
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "data"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "formatted"
                                      ],
                                      "properties": {
                                        "formatted": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "data"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "excOmitted",
                                        "hasSystemFrames",
                                        "values"
                                      ],
                                      "properties": {
                                        "excOmitted": {
                                          "type": "array",
                                          "nullable": true,
                                          "items": {
                                            "type": "integer"
                                          }
                                        },
                                        "hasSystemFrames": {
                                          "type": "boolean"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "stacktrace",
                                              "module",
                                              "rawStacktrace",
                                              "mechanism",
                                              "threadId",
                                              "value",
                                              "type"
                                            ],
                                            "properties": {
                                              "stacktrace": {
                                                "type": "object",
                                                "nullable": true,
                                                "required": [
                                                  "frames",
                                                  "framesOmitted",
                                                  "registers",
                                                  "hasSystemFrames"
                                                ],
                                                "properties": {
                                                  "frames": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "function",
                                                        "errors",
                                                        "colNo",
                                                        "vars",
                                                        "package",
                                                        "absPath",
                                                        "inApp",
                                                        "lineNo",
                                                        "module",
                                                        "filename",
                                                        "platform",
                                                        "instructionAddr",
                                                        "context",
                                                        "symbolAddr",
                                                        "trust",
                                                        "symbol"
                                                      ],
                                                      "properties": {
                                                        "function": {
                                                          "type": "string"
                                                        },
                                                        "errors": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "colNo": {
                                                          "type": "integer",
                                                          "nullable": true
                                                        },
                                                        "vars": {
                                                          "type": "object",
                                                          "nullable": true
                                                        },
                                                        "package": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "absPath": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "inApp": {
                                                          "type": "boolean"
                                                        },
                                                        "lineNo": {
                                                          "type": "integer"
                                                        },
                                                        "module": {
                                                          "type": "string"
                                                        },
                                                        "filename": {
                                                          "type": "string"
                                                        },
                                                        "platform": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "instructionAddr": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "context": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "array",
                                                            "items": {
                                                              "oneOf": [
                                                                {
                                                                  "type": "integer"
                                                                },
                                                                {
                                                                  "type": "string"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        "symbolAddr": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "trust": {
                                                          "type": "string",
                                                          "nullable": true
                                                        },
                                                        "symbol": {
                                                          "type": "string",
                                                          "nullable": true
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "framesOmitted": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "registers": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "hasSystemFrames": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "module": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "rawStacktrace": {
                                                "type": "object",
                                                "nullable": true
                                              },
                                              "mechanism": {
                                                "type": "object",
                                                "nullable": true,
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "handled": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "threadId": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "value": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "packages": {
                            "type": "object"
                          },
                          "sdk": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "_meta": {
                            "type": "object",
                            "properties": {
                              "user": {
                                "type": "string",
                                "nullable": true
                              },
                              "context": {
                                "type": "string",
                                "nullable": true
                              },
                              "entries": {
                                "type": "object"
                              },
                              "contexts": {
                                "type": "string",
                                "nullable": true
                              },
                              "message": {
                                "type": "string",
                                "nullable": true
                              },
                              "packages": {
                                "type": "string",
                                "nullable": true
                              },
                              "tags": {
                                "type": "object"
                              },
                              "sdk": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "contexts": {
                            "type": "object",
                            "properties": {
                              "ForbiddenError": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "integer"
                                  },
                                  "statusText": {
                                    "type": "string"
                                  },
                                  "responseJSON": {
                                    "type": "object",
                                    "properties": {
                                      "detail": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "browser": {
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              },
                              "os": {
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              },
                              "trace": {
                                "type": "object",
                                "properties": {
                                  "span_id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "trace_id": {
                                    "type": "string"
                                  },
                                  "op": {
                                    "type": "string"
                                  }
                                }
                              },
                              "organization": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "slug": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "fingerprints": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "context": {
                            "type": "object",
                            "properties": {
                              "resp": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "integer"
                                  },
                                  "responseJSON": {
                                    "type": "object",
                                    "properties": {
                                      "detail": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "statusText": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "stack": {
                                    "type": "string"
                                  }
                                }
                              },
                              "session": {
                                "type": "object",
                                "properties": {
                                  "foo": {
                                    "type": "string"
                                  }
                                }
                              },
                              "unauthorized": {
                                "type": "boolean"
                              },
                              "url": {
                                "type": "string"
                              }
                            }
                          },
                          "groupID": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "9999aaaaca8b46d797c23c6077c6ff01",
                    "latestEvent": {
                      "eventID": "9999aaaaca8b46d797c23c6077c6ff01",
                      "dist": null,
                      "message": "",
                      "title": "This is an example Python exception",
                      "id": "9999aaafcc8b46d797c23c6077c6ff01",
                      "size": 107762,
                      "errors": [
                        {
                          "data": {
                            "column": 8,
                            "source": "https://s1.sentry-cdn.com/_static/bloopbloop/sentry/dist/app.js.map",
                            "row": 15
                          },
                          "message": "Invalid location in sourcemap",
                          "type": "js_invalid_sourcemap_location"
                        }
                      ],
                      "platform": "javascript",
                      "type": "error",
                      "metadata": {
                        "type": "ForbiddenError",
                        "value": "GET /organizations/hellboy-meowmeow/users/ 403"
                      },
                      "tags": [
                        {
                          "value": "Chrome 83.0.4103",
                          "key": "browser",
                          "_meta": null
                        },
                        {
                          "value": "Chrome",
                          "key": "browser.name",
                          "_meta": null
                        },
                        {
                          "value": "prod",
                          "key": "environment",
                          "_meta": null
                        },
                        {
                          "value": "yes",
                          "key": "handled",
                          "_meta": null
                        },
                        {
                          "value": "error",
                          "key": "level",
                          "_meta": null
                        },
                        {
                          "value": "generic",
                          "key": "mechanism",
                          "_meta": null
                        }
                      ],
                      "dateCreated": "2020-06-17T22:26:56.098086Z",
                      "dateReceived": "2020-06-17T22:26:56.428721Z",
                      "user": {
                        "username": null,
                        "name": "Hell Boy",
                        "ip_address": "192.168.1.1",
                        "email": "hell@boy.cat",
                        "data": {
                          "isStaff": false
                        },
                        "id": "550747"
                      },
                      "entries": [
                        {
                          "type": "exception",
                          "data": {
                            "values": [
                              {
                                "stacktrace": {
                                  "frames": [
                                    {
                                      "function": "ignoreOnError",
                                      "errors": null,
                                      "colNo": 23,
                                      "vars": null,
                                      "package": null,
                                      "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                      "inApp": false,
                                      "lineNo": 71,
                                      "module": "usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers",
                                      "filename": "/usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                      "platform": null,
                                      "instructionAddr": null,
                                      "context": [
                                        [
                                          66,
                                          "            }"
                                        ],
                                        [
                                          67,
                                          "            // Attempt to invoke user-land function"
                                        ],
                                        [
                                          68,
                                          "            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it"
                                        ],
                                        [
                                          69,
                                          "            //       means the sentry.javascript SDK caught an error invoking your application code. This"
                                        ],
                                        [
                                          70,
                                          "            //       is expected behavior and NOT indicative of a bug with sentry.javascript."
                                        ],
                                        [
                                          71,
                                          "            return fn.apply(this, wrappedArguments);"
                                        ],
                                        [
                                          72,
                                          "            // tslint:enable:no-unsafe-any"
                                        ],
                                        [
                                          73,
                                          "        }"
                                        ],
                                        [
                                          74,
                                          "        catch (ex) {"
                                        ],
                                        [
                                          75,
                                          "            ignoreNextOnError();"
                                        ],
                                        [
                                          76,
                                          "            withScope(function (scope) {"
                                        ]
                                      ],
                                      "symbolAddr": null,
                                      "trust": null,
                                      "symbol": null
                                    },
                                    {
                                      "function": "apply",
                                      "errors": null,
                                      "colNo": 24,
                                      "vars": null,
                                      "package": null,
                                      "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                      "inApp": false,
                                      "lineNo": 74,
                                      "module": "usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods",
                                      "filename": "/usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                      "platform": null,
                                      "instructionAddr": null,
                                      "context": [
                                        [
                                          69,
                                          "     */"
                                        ],
                                        [
                                          70,
                                          "    triggerAsync: function triggerAsync() {"
                                        ],
                                        [
                                          71,
                                          "        var args = arguments,"
                                        ],
                                        [
                                          72,
                                          "            me = this;"
                                        ],
                                        [
                                          73,
                                          "        _.nextTick(function () {"
                                        ],
                                        [
                                          74,
                                          "            me.trigger.apply(me, args);"
                                        ],
                                        [
                                          75,
                                          "        });"
                                        ],
                                        [
                                          76,
                                          "    },"
                                        ],
                                        [
                                          77,
                                          ""
                                        ],
                                        [
                                          78,
                                          "    /**"
                                        ],
                                        [
                                          79,
                                          "     * Wraps the trigger mechanism with a deferral function."
                                        ]
                                      ],
                                      "symbolAddr": null,
                                      "trust": null,
                                      "symbol": null
                                    }
                                  ],
                                  "framesOmitted": null,
                                  "registers": null,
                                  "hasSystemFrames": true
                                },
                                "module": null,
                                "rawStacktrace": {
                                  "frames": [
                                    {
                                      "function": "a",
                                      "errors": null,
                                      "colNo": 88800,
                                      "vars": null,
                                      "package": null,
                                      "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                      "inApp": false,
                                      "lineNo": 81,
                                      "module": null,
                                      "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                      "platform": null,
                                      "instructionAddr": null,
                                      "context": [
                                        [
                                          76,
                                          "/*!"
                                        ],
                                        [
                                          77,
                                          "  Copyright (c) 2018 Jed Watson."
                                        ],
                                        [
                                          78,
                                          "  Licensed under the MIT License (MIT), see"
                                        ],
                                        [
                                          79,
                                          "  http://jedwatson.github.io/react-select"
                                        ],
                                        [
                                          80,
                                          "*/"
                                        ],
                                        [
                                          81,
                                          "{snip} e,t)}));return e.handleEvent?e.handleEvent.apply(this,s):e.apply(this,s)}catch(e){throw c(),Object(o.m)((function(n){n.addEventProcessor((fu {snip}"
                                        ],
                                        [
                                          82,
                                          "/*!"
                                        ],
                                        [
                                          83,
                                          " * JavaScript Cookie v2.2.1"
                                        ],
                                        [
                                          84,
                                          " * https://github.com/js-cookie/js-cookie"
                                        ],
                                        [
                                          85,
                                          " *"
                                        ],
                                        [
                                          86,
                                          " * Copyright 2006, 2015 Klaus Hartl & Fagner Brack"
                                        ]
                                      ],
                                      "symbolAddr": null,
                                      "trust": null,
                                      "symbol": null
                                    },
                                    {
                                      "function": null,
                                      "errors": null,
                                      "colNo": 149484,
                                      "vars": null,
                                      "package": null,
                                      "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                      "inApp": false,
                                      "lineNo": 119,
                                      "module": null,
                                      "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                      "platform": null,
                                      "instructionAddr": null,
                                      "context": [
                                        [
                                          114,
                                          "/* @license"
                                        ],
                                        [
                                          115,
                                          "Papa Parse"
                                        ],
                                        [
                                          116,
                                          "v5.2.0"
                                        ],
                                        [
                                          117,
                                          "https://github.com/mholt/PapaParse"
                                        ],
                                        [
                                          118,
                                          "License: MIT"
                                        ],
                                        [
                                          119,
                                          "{snip} (){var e=arguments,t=this;r.nextTick((function(){t.trigger.apply(t,e)}))},deferWith:function(e){var t=this.trigger,n=this,r=function(){t.app {snip}"
                                        ],
                                        [
                                          120,
                                          "/**!"
                                        ],
                                        [
                                          121,
                                          " * @fileOverview Kickass library to create and place poppers near their reference elements."
                                        ],
                                        [
                                          122,
                                          " * @version 1.16.1"
                                        ],
                                        [
                                          123,
                                          " * @license"
                                        ],
                                        [
                                          124,
                                          " * Copyright (c) 2016 Federico Zivolo and contributors"
                                        ]
                                      ],
                                      "symbolAddr": null,
                                      "trust": null,
                                      "symbol": null
                                    }
                                  ],
                                  "framesOmitted": null,
                                  "registers": null,
                                  "hasSystemFrames": true
                                },
                                "mechanism": {
                                  "type": "generic",
                                  "handled": true
                                },
                                "threadId": null,
                                "value": "GET /organizations/hellboy-meowmeow/users/ 403",
                                "type": "ForbiddenError"
                              }
                            ],
                            "excOmitted": null,
                            "hasSystemFrames": true
                          }
                        },
                        {
                          "type": "breadcrumbs",
                          "data": {
                            "values": [
                              {
                                "category": "tracing",
                                "level": "debug",
                                "event_id": null,
                                "timestamp": "2020-06-17T22:26:55.266586Z",
                                "data": null,
                                "message": "[Tracing] pushActivity: idleTransactionStarted#1",
                                "type": "debug"
                              },
                              {
                                "category": "xhr",
                                "level": "info",
                                "event_id": null,
                                "timestamp": "2020-06-17T22:26:55.619446Z",
                                "data": {
                                  "url": "/api/0/internal/health/",
                                  "status_code": 200,
                                  "method": "GET"
                                },
                                "message": null,
                                "type": "http"
                              },
                              {
                                "category": "sentry.transaction",
                                "level": "info",
                                "event_id": null,
                                "timestamp": "2020-06-17T22:26:55.945016Z",
                                "data": null,
                                "message": "7787a027f3fb46c985aaa2287b3f4d09",
                                "type": "default"
                              }
                            ]
                          }
                        },
                        {
                          "type": "request",
                          "data": {
                            "fragment": null,
                            "cookies": [],
                            "inferredContentType": null,
                            "env": null,
                            "headers": [
                              [
                                "User-Agent",
                                "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36"
                              ]
                            ],
                            "url": "https://sentry.io/organizations/hellboy-meowmeow/issues/",
                            "query": [
                              [
                                "project",
                                "5236886"
                              ]
                            ],
                            "data": null,
                            "method": null
                          }
                        }
                      ],
                      "packages": {},
                      "sdk": {
                        "version": "5.17.0",
                        "name": "sentry.javascript.browser"
                      },
                      "_meta": {
                        "user": null,
                        "context": null,
                        "entries": {},
                        "contexts": null,
                        "message": null,
                        "packages": null,
                        "tags": {},
                        "sdk": null
                      },
                      "contexts": {
                        "ForbiddenError": {
                          "status": 403,
                          "statusText": "Forbidden",
                          "responseJSON": {
                            "detail": "You do not have permission to perform this action."
                          },
                          "type": "default"
                        },
                        "browser": {
                          "version": "83.0.4103",
                          "type": "browser",
                          "name": "Chrome"
                        },
                        "os": {
                          "version": "10",
                          "type": "os",
                          "name": "Windows"
                        },
                        "trace": {
                          "span_id": "83db1ad17e67dfe7",
                          "type": "trace",
                          "trace_id": "da6caabcd90e45fdb81f6655824a5f88",
                          "op": "navigation"
                        },
                        "organization": {
                          "type": "default",
                          "id": "323938",
                          "slug": "hellboy-meowmeow"
                        }
                      },
                      "fingerprints": [
                        "fbe908cc63d63ea9763fd84cb6bad177"
                      ],
                      "context": {
                        "resp": {
                          "status": 403,
                          "responseJSON": {
                            "detail": "You do not have permission to perform this action."
                          },
                          "name": "ForbiddenError",
                          "statusText": "Forbidden",
                          "message": "GET /organizations/hellboy-meowmeow/users/ 403",
                          "stack": "Error\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480441\n    at u (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51006)\n    at Generator._invoke (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:50794)\n    at Generator.A.forEach.e.<computed> [as next] (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51429)\n    at n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68684)\n    at s (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68895)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68954\n    at new Promise (<anonymous>)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68835\n    at v (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480924)\n    at m (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480152)\n    at t.fetchMemberList (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:902983)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:900527)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:15597)\n    at Pc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:101023)\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Rc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:97371)\n    at Oc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:87690)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45820\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Zo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45765)\n    at Jo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45700)\n    at gc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:84256)\n    at Object.enqueueSetState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:50481)\n    at t.M.setState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:173:1439)\n    at t.onUpdate (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:543076)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at p.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at p.onInitializeUrlState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:541711)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at Function.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149484\n    at a (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:81:88800)"
                        }
                      },
                      "groupID": "1341191803"
                    }
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/issues/{issue_id}/events/oldest/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Retrieves the details of the oldest event for an issue.",
        "operationId": "Retrieve the Oldest Event for an Issue",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issue belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "eventID",
                    "dist",
                    "userReport",
                    "previousEventID",
                    "message",
                    "id",
                    "size",
                    "errors",
                    "platform",
                    "nextEventID",
                    "type",
                    "metadata",
                    "tags",
                    "dateCreated",
                    "dateReceived",
                    "user",
                    "entries",
                    "packages",
                    "sdk",
                    "_meta",
                    "contexts",
                    "fingerprints",
                    "context",
                    "release",
                    "groupID",
                    "title"
                  ],
                  "properties": {
                    "eventID": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "userReport": {
                      "type": "object",
                      "nullable": true
                    },
                    "previousEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "column": {
                                "type": "integer"
                              },
                              "source": {
                                "type": "string"
                              },
                              "row": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    },
                    "platform": {
                      "type": "string"
                    },
                    "nextEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string"
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "type",
                            "value"
                          ],
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "title"
                          ],
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "_meta": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "dateReceived": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "nullable": true,
                      "required": [
                        "username",
                        "name",
                        "ip_address",
                        "email",
                        "data",
                        "id"
                      ],
                      "properties": {
                        "username": {
                          "type": "string",
                          "nullable": true
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "ip_address": {
                          "type": "string",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "data": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "isStaff": {
                              "type": "boolean"
                            }
                          }
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "entries": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "values"
                                ],
                                "properties": {
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "category",
                                        "level",
                                        "event_id",
                                        "timestamp",
                                        "data",
                                        "message",
                                        "type"
                                      ],
                                      "properties": {
                                        "category": {
                                          "type": "string"
                                        },
                                        "level": {
                                          "type": "string"
                                        },
                                        "event_id": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "timestamp": {
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "data": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "message": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "fragment",
                                  "cookies",
                                  "inferredContentType",
                                  "env",
                                  "headers",
                                  "url",
                                  "query",
                                  "data",
                                  "method"
                                ],
                                "properties": {
                                  "fragment": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "cookies": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "inferredContentType": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "env": {
                                    "type": "object",
                                    "nullable": true,
                                    "properties": {
                                      "ENV": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "headers": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "query": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "data": {
                                    "type": "object",
                                    "nullable": true
                                  },
                                  "method": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "formatted"
                                ],
                                "properties": {
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "excOmitted",
                                  "hasSystemFrames",
                                  "values"
                                ],
                                "properties": {
                                  "excOmitted": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "integer"
                                    }
                                  },
                                  "hasSystemFrames": {
                                    "type": "boolean"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "stacktrace",
                                        "module",
                                        "rawStacktrace",
                                        "mechanism",
                                        "threadId",
                                        "value",
                                        "type"
                                      ],
                                      "properties": {
                                        "stacktrace": {
                                          "type": "object",
                                          "nullable": true,
                                          "required": [
                                            "frames",
                                            "framesOmitted",
                                            "registers",
                                            "hasSystemFrames"
                                          ],
                                          "properties": {
                                            "frames": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "function",
                                                  "errors",
                                                  "colNo",
                                                  "vars",
                                                  "package",
                                                  "absPath",
                                                  "inApp",
                                                  "lineNo",
                                                  "module",
                                                  "filename",
                                                  "platform",
                                                  "instructionAddr",
                                                  "context",
                                                  "symbolAddr",
                                                  "trust",
                                                  "symbol"
                                                ],
                                                "properties": {
                                                  "function": {
                                                    "type": "string"
                                                  },
                                                  "errors": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "colNo": {
                                                    "type": "integer",
                                                    "nullable": true
                                                  },
                                                  "vars": {
                                                    "type": "object",
                                                    "nullable": true
                                                  },
                                                  "package": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "absPath": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "inApp": {
                                                    "type": "boolean"
                                                  },
                                                  "lineNo": {
                                                    "type": "integer"
                                                  },
                                                  "module": {
                                                    "type": "string"
                                                  },
                                                  "filename": {
                                                    "type": "string"
                                                  },
                                                  "platform": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "instructionAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "context": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "array",
                                                      "items": {
                                                        "oneOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "symbolAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "trust": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "symbol": {
                                                    "type": "string",
                                                    "nullable": true
                                                  }
                                                }
                                              }
                                            },
                                            "framesOmitted": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "registers": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "hasSystemFrames": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "module": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "rawStacktrace": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "mechanism": {
                                          "type": "object",
                                          "nullable": true,
                                          "properties": {
                                            "type": {
                                              "type": "string"
                                            },
                                            "handled": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "threadId": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "value": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "packages": {
                      "type": "object"
                    },
                    "sdk": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_meta": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "string",
                          "nullable": true
                        },
                        "context": {
                          "type": "string",
                          "nullable": true
                        },
                        "entries": {
                          "type": "object"
                        },
                        "contexts": {
                          "type": "string",
                          "nullable": true
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        },
                        "packages": {
                          "type": "string",
                          "nullable": true
                        },
                        "tags": {
                          "type": "object"
                        },
                        "sdk": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "contexts": {
                      "type": "object",
                      "properties": {
                        "ForbiddenError": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer"
                            },
                            "statusText": {
                              "type": "string"
                            },
                            "responseJSON": {
                              "type": "object",
                              "properties": {
                                "detail": {
                                  "type": "string"
                                }
                              }
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "browser": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "os": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "trace": {
                          "type": "object",
                          "properties": {
                            "span_id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "trace_id": {
                              "type": "string"
                            },
                            "op": {
                              "type": "string"
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "fingerprints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {
                        "resp": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer"
                            },
                            "responseJSON": {
                              "type": "object",
                              "properties": {
                                "detail": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "statusText": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "stack": {
                              "type": "string"
                            }
                          }
                        },
                        "session": {
                          "type": "object",
                          "properties": {
                            "foo": {
                              "type": "string"
                            }
                          }
                        },
                        "unauthorized": {
                          "type": "boolean"
                        },
                        "url": {
                          "type": "string"
                        }
                      }
                    },
                    "release": {
                      "type": "object",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "authors",
                            "commitCount",
                            "data",
                            "dateCreated",
                            "dateReleased",
                            "deployCount",
                            "firstEvent",
                            "lastCommit",
                            "lastDeploy",
                            "lastEvent",
                            "newGroups",
                            "owner",
                            "projects",
                            "ref",
                            "shortVersion",
                            "version",
                            "url"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "authors": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "commitCount": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "data": {
                              "type": "object"
                            },
                            "dateCreated": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateReleased": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "deployCount": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "firstEvent": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "lastCommit": {
                              "type": "object",
                              "nullable": true
                            },
                            "lastDeploy": {
                              "type": "object",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "environment",
                                    "name",
                                    "dateStarted",
                                    "dateFinished",
                                    "url",
                                    "id"
                                  ],
                                  "properties": {
                                    "environment": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "dateStarted": {
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true
                                    },
                                    "dateFinished": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "string",
                                  "nullable": true,
                                  "not": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "array",
                                        "items": {}
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "lastEvent": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "newGroups": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "owner": {
                              "type": "object",
                              "nullable": true
                            },
                            "projects": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "slug": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ref": {
                              "type": "string",
                              "nullable": true
                            },
                            "shortVersion": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        }
                      ]
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "eventID": "9999aaaaca8b46d797c23c6077c6ff01",
                  "dist": null,
                  "userReport": null,
                  "previousEventID": null,
                  "message": "",
                  "title": "This is an example Python exception",
                  "id": "9999aaafcc8b46d797c23c6077c6ff01",
                  "size": 107762,
                  "errors": [
                    {
                      "data": {
                        "column": 8,
                        "source": "https://s1.sentry-cdn.com/_static/bloopbloop/sentry/dist/app.js.map",
                        "row": 15
                      },
                      "message": "Invalid location in sourcemap",
                      "type": "js_invalid_sourcemap_location"
                    }
                  ],
                  "platform": "javascript",
                  "nextEventID": "99f9e199e9a74a14bfef6196ad741619",
                  "type": "error",
                  "metadata": {
                    "type": "ForbiddenError",
                    "value": "GET /organizations/hellboy-meowmeow/users/ 403"
                  },
                  "tags": [
                    {
                      "value": "Chrome 83.0.4103",
                      "key": "browser",
                      "_meta": null
                    },
                    {
                      "value": "Chrome",
                      "key": "browser.name",
                      "_meta": null
                    },
                    {
                      "value": "prod",
                      "key": "environment",
                      "_meta": null
                    },
                    {
                      "value": "yes",
                      "key": "handled",
                      "_meta": null
                    },
                    {
                      "value": "error",
                      "key": "level",
                      "_meta": null
                    },
                    {
                      "value": "generic",
                      "key": "mechanism",
                      "_meta": null
                    }
                  ],
                  "dateCreated": "2020-06-17T22:26:56.098086Z",
                  "dateReceived": "2020-06-17T22:26:56.428721Z",
                  "user": {
                    "username": null,
                    "name": "Hell Boy",
                    "ip_address": "192.168.1.1",
                    "email": "hell@boy.cat",
                    "data": {
                      "isStaff": false
                    },
                    "id": "550747"
                  },
                  "entries": [
                    {
                      "type": "exception",
                      "data": {
                        "values": [
                          {
                            "stacktrace": {
                              "frames": [
                                {
                                  "function": "ignoreOnError",
                                  "errors": null,
                                  "colNo": 23,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "inApp": false,
                                  "lineNo": 71,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      66,
                                      "            }"
                                    ],
                                    [
                                      67,
                                      "            // Attempt to invoke user-land function"
                                    ],
                                    [
                                      68,
                                      "            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it"
                                    ],
                                    [
                                      69,
                                      "            //       means the sentry.javascript SDK caught an error invoking your application code. This"
                                    ],
                                    [
                                      70,
                                      "            //       is expected behavior and NOT indicative of a bug with sentry.javascript."
                                    ],
                                    [
                                      71,
                                      "            return fn.apply(this, wrappedArguments);"
                                    ],
                                    [
                                      72,
                                      "            // tslint:enable:no-unsafe-any"
                                    ],
                                    [
                                      73,
                                      "        }"
                                    ],
                                    [
                                      74,
                                      "        catch (ex) {"
                                    ],
                                    [
                                      75,
                                      "            ignoreNextOnError();"
                                    ],
                                    [
                                      76,
                                      "            withScope(function (scope) {"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": "apply",
                                  "errors": null,
                                  "colNo": 24,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "inApp": false,
                                  "lineNo": 74,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      69,
                                      "     */"
                                    ],
                                    [
                                      70,
                                      "    triggerAsync: function triggerAsync() {"
                                    ],
                                    [
                                      71,
                                      "        var args = arguments,"
                                    ],
                                    [
                                      72,
                                      "            me = this;"
                                    ],
                                    [
                                      73,
                                      "        _.nextTick(function () {"
                                    ],
                                    [
                                      74,
                                      "            me.trigger.apply(me, args);"
                                    ],
                                    [
                                      75,
                                      "        });"
                                    ],
                                    [
                                      76,
                                      "    },"
                                    ],
                                    [
                                      77,
                                      ""
                                    ],
                                    [
                                      78,
                                      "    /**"
                                    ],
                                    [
                                      79,
                                      "     * Wraps the trigger mechanism with a deferral function."
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "module": null,
                            "rawStacktrace": {
                              "frames": [
                                {
                                  "function": "a",
                                  "errors": null,
                                  "colNo": 88800,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 81,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      76,
                                      "/*!"
                                    ],
                                    [
                                      77,
                                      "  Copyright (c) 2018 Jed Watson."
                                    ],
                                    [
                                      78,
                                      "  Licensed under the MIT License (MIT), see"
                                    ],
                                    [
                                      79,
                                      "  http://jedwatson.github.io/react-select"
                                    ],
                                    [
                                      80,
                                      "*/"
                                    ],
                                    [
                                      81,
                                      "{snip} e,t)}));return e.handleEvent?e.handleEvent.apply(this,s):e.apply(this,s)}catch(e){throw c(),Object(o.m)((function(n){n.addEventProcessor((fu {snip}"
                                    ],
                                    [
                                      82,
                                      "/*!"
                                    ],
                                    [
                                      83,
                                      " * JavaScript Cookie v2.2.1"
                                    ],
                                    [
                                      84,
                                      " * https://github.com/js-cookie/js-cookie"
                                    ],
                                    [
                                      85,
                                      " *"
                                    ],
                                    [
                                      86,
                                      " * Copyright 2006, 2015 Klaus Hartl & Fagner Brack"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": null,
                                  "errors": null,
                                  "colNo": 149484,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 119,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      114,
                                      "/* @license"
                                    ],
                                    [
                                      115,
                                      "Papa Parse"
                                    ],
                                    [
                                      116,
                                      "v5.2.0"
                                    ],
                                    [
                                      117,
                                      "https://github.com/mholt/PapaParse"
                                    ],
                                    [
                                      118,
                                      "License: MIT"
                                    ],
                                    [
                                      119,
                                      "{snip} (){var e=arguments,t=this;r.nextTick((function(){t.trigger.apply(t,e)}))},deferWith:function(e){var t=this.trigger,n=this,r=function(){t.app {snip}"
                                    ],
                                    [
                                      120,
                                      "/**!"
                                    ],
                                    [
                                      121,
                                      " * @fileOverview Kickass library to create and place poppers near their reference elements."
                                    ],
                                    [
                                      122,
                                      " * @version 1.16.1"
                                    ],
                                    [
                                      123,
                                      " * @license"
                                    ],
                                    [
                                      124,
                                      " * Copyright (c) 2016 Federico Zivolo and contributors"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "mechanism": {
                              "type": "generic",
                              "handled": true
                            },
                            "threadId": null,
                            "value": "GET /organizations/hellboy-meowmeow/users/ 403",
                            "type": "ForbiddenError"
                          }
                        ],
                        "excOmitted": null,
                        "hasSystemFrames": true
                      }
                    },
                    {
                      "type": "breadcrumbs",
                      "data": {
                        "values": [
                          {
                            "category": "tracing",
                            "level": "debug",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.266586Z",
                            "data": null,
                            "message": "[Tracing] pushActivity: idleTransactionStarted#1",
                            "type": "debug"
                          },
                          {
                            "category": "xhr",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.619446Z",
                            "data": {
                              "url": "/api/0/internal/health/",
                              "status_code": 200,
                              "method": "GET"
                            },
                            "message": null,
                            "type": "http"
                          },
                          {
                            "category": "sentry.transaction",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.945016Z",
                            "data": null,
                            "message": "7787a027f3fb46c985aaa2287b3f4d09",
                            "type": "default"
                          }
                        ]
                      }
                    },
                    {
                      "type": "request",
                      "data": {
                        "fragment": null,
                        "cookies": [],
                        "inferredContentType": null,
                        "env": null,
                        "headers": [
                          [
                            "User-Agent",
                            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36"
                          ]
                        ],
                        "url": "https://sentry.io/organizations/hellboy-meowmeow/issues/",
                        "query": [
                          [
                            "project",
                            "5236886"
                          ]
                        ],
                        "data": null,
                        "method": null
                      }
                    }
                  ],
                  "packages": {},
                  "sdk": {
                    "version": "5.17.0",
                    "name": "sentry.javascript.browser"
                  },
                  "_meta": {
                    "user": null,
                    "context": null,
                    "entries": {},
                    "contexts": null,
                    "message": null,
                    "packages": null,
                    "tags": {},
                    "sdk": null
                  },
                  "contexts": {
                    "ForbiddenError": {
                      "status": 403,
                      "statusText": "Forbidden",
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "type": "default"
                    },
                    "browser": {
                      "version": "83.0.4103",
                      "type": "browser",
                      "name": "Chrome"
                    },
                    "os": {
                      "version": "10",
                      "type": "os",
                      "name": "Windows"
                    },
                    "trace": {
                      "span_id": "83db1ad17e67dfe7",
                      "type": "trace",
                      "trace_id": "da6caabcd90e45fdb81f6655824a5f88",
                      "op": "navigation"
                    },
                    "organization": {
                      "type": "default",
                      "id": "323938",
                      "slug": "hellboy-meowmeow"
                    }
                  },
                  "fingerprints": [
                    "fbe908cc63d63ea9763fd84cb6bad177"
                  ],
                  "context": {
                    "resp": {
                      "status": 403,
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "name": "ForbiddenError",
                      "statusText": "Forbidden",
                      "message": "GET /organizations/hellboy-meowmeow/users/ 403",
                      "stack": "Error\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480441\n    at u (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51006)\n    at Generator._invoke (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:50794)\n    at Generator.A.forEach.e.<computed> [as next] (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51429)\n    at n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68684)\n    at s (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68895)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68954\n    at new Promise (<anonymous>)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68835\n    at v (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480924)\n    at m (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480152)\n    at t.fetchMemberList (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:902983)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:900527)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:15597)\n    at Pc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:101023)\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Rc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:97371)\n    at Oc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:87690)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45820\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Zo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45765)\n    at Jo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45700)\n    at gc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:84256)\n    at Object.enqueueSetState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:50481)\n    at t.M.setState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:173:1439)\n    at t.onUpdate (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:543076)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at p.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at p.onInitializeUrlState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:541711)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at Function.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149484\n    at a (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:81:88800)"
                    }
                  },
                  "release": {
                    "dateReleased": "2020-06-17T19:21:02.186004Z",
                    "newGroups": 4,
                    "commitCount": 11,
                    "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                    "data": {},
                    "lastDeploy": {
                      "name": "b65bc521378269d3eaefdc964f8ef56621414943 to prod",
                      "url": null,
                      "environment": "prod",
                      "dateStarted": null,
                      "dateFinished": "2020-06-17T19:20:55.641748Z",
                      "id": "6883490"
                    },
                    "deployCount": 1,
                    "dateCreated": "2020-06-17T18:45:31.042157Z",
                    "lastEvent": "2020-07-08T21:21:21Z",
                    "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "firstEvent": "2020-06-17T22:25:14Z",
                    "lastCommit": {
                      "repository": {
                        "status": "active",
                        "integrationId": "2933",
                        "externalSlug": "getsentry/getsentry",
                        "name": "getsentry/getsentry",
                        "provider": {
                          "id": "integrations:github",
                          "name": "GitHub"
                        },
                        "url": "https://github.com/getsentry/getsentry",
                        "id": "2",
                        "dateCreated": "2016-10-10T21:36:45.373994Z"
                      },
                      "releases": [
                        {
                          "dateReleased": "2020-06-23T13:26:18.427090Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/staging/2077/",
                          "dateCreated": "2020-06-23T13:22:50.420265Z",
                          "version": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "shortVersion": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "ref": "perf/source-maps-test"
                        },
                        {
                          "dateReleased": "2020-06-17T19:21:02.186004Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                          "dateCreated": "2020-06-17T18:45:31.042157Z",
                          "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "ref": "master"
                        }
                      ],
                      "dateCreated": "2020-06-17T18:43:37Z",
                      "message": "feat(billing): Get a lot of money",
                      "id": "b65bc521378269d3eaefdc964f8ef56621414943"
                    },
                    "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "authors": [
                      {
                        "username": "a37a1b4520ce46cea147ae2885a4e7e7",
                        "lastLogin": "2020-09-14T22:34:55.550640Z",
                        "isSuperuser": false,
                        "isManaged": false,
                        "experiments": {},
                        "lastActive": "2020-09-15T22:13:20.503880Z",
                        "isStaff": false,
                        "id": "655784",
                        "isActive": true,
                        "has2fa": false,
                        "name": "hell.boy@sentry.io",
                        "avatarUrl": "https://secure.gravatar.com/avatar/eaa22e25b3a984659420831a77e4874e?s=32&d=mm",
                        "dateJoined": "2020-04-20T16:21:25.365772Z",
                        "emails": [
                          {
                            "is_verified": false,
                            "id": "784574",
                            "email": "hellboy@gmail.com"
                          },
                          {
                            "is_verified": true,
                            "id": "749185",
                            "email": "hell.boy@sentry.io"
                          }
                        ],
                        "avatar": {
                          "avatarUuid": null,
                          "avatarType": "letter_avatar"
                        },
                        "hasPasswordAuth": false,
                        "email": "hell.boy@sentry.io"
                      }
                    ],
                    "owner": null,
                    "ref": "master",
                    "projects": [
                      {
                        "name": "Sentry CSP",
                        "slug": "sentry-csp"
                      },
                      {
                        "name": "Backend",
                        "slug": "sentry"
                      },
                      {
                        "name": "Frontend",
                        "slug": "javascript"
                      }
                    ]
                  },
                  "groupID": "1341191803"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/issues/{issue_id}/events/latest/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Retrieves the details of the latest event for an issue.",
        "operationId": "Retrieve the Latest Event for an Issue",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issue belong to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "eventID",
                    "dist",
                    "userReport",
                    "previousEventID",
                    "message",
                    "id",
                    "size",
                    "errors",
                    "platform",
                    "nextEventID",
                    "type",
                    "metadata",
                    "tags",
                    "dateCreated",
                    "dateReceived",
                    "user",
                    "entries",
                    "packages",
                    "sdk",
                    "_meta",
                    "contexts",
                    "fingerprints",
                    "context",
                    "release",
                    "groupID",
                    "title"
                  ],
                  "properties": {
                    "eventID": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "userReport": {
                      "type": "object",
                      "nullable": true
                    },
                    "previousEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "column": {
                                "type": "integer"
                              },
                              "source": {
                                "type": "string"
                              },
                              "row": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    },
                    "platform": {
                      "type": "string"
                    },
                    "nextEventID": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string"
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "type",
                            "value"
                          ],
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "title"
                          ],
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "_meta": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "type": "string"
                    },
                    "dateReceived": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "nullable": true,
                      "required": [
                        "username",
                        "name",
                        "ip_address",
                        "email",
                        "data",
                        "id"
                      ],
                      "properties": {
                        "username": {
                          "type": "string",
                          "nullable": true
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "ip_address": {
                          "type": "string",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "data": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "isStaff": {
                              "type": "boolean"
                            }
                          }
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "entries": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "values"
                                ],
                                "properties": {
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "category",
                                        "level",
                                        "event_id",
                                        "timestamp",
                                        "data",
                                        "message",
                                        "type"
                                      ],
                                      "properties": {
                                        "category": {
                                          "type": "string"
                                        },
                                        "level": {
                                          "type": "string"
                                        },
                                        "event_id": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "timestamp": {
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "data": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "message": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "fragment",
                                  "cookies",
                                  "inferredContentType",
                                  "env",
                                  "headers",
                                  "url",
                                  "query",
                                  "data",
                                  "method"
                                ],
                                "properties": {
                                  "fragment": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "cookies": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "inferredContentType": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "env": {
                                    "type": "object",
                                    "nullable": true,
                                    "properties": {
                                      "ENV": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "headers": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "query": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "data": {
                                    "type": "object",
                                    "nullable": true
                                  },
                                  "method": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "formatted"
                                ],
                                "properties": {
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "type",
                              "data"
                            ],
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "data": {
                                "type": "object",
                                "required": [
                                  "excOmitted",
                                  "hasSystemFrames",
                                  "values"
                                ],
                                "properties": {
                                  "excOmitted": {
                                    "type": "array",
                                    "nullable": true,
                                    "items": {
                                      "type": "integer"
                                    }
                                  },
                                  "hasSystemFrames": {
                                    "type": "boolean"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "stacktrace",
                                        "module",
                                        "rawStacktrace",
                                        "mechanism",
                                        "threadId",
                                        "value",
                                        "type"
                                      ],
                                      "properties": {
                                        "stacktrace": {
                                          "type": "object",
                                          "nullable": true,
                                          "required": [
                                            "frames",
                                            "framesOmitted",
                                            "registers",
                                            "hasSystemFrames"
                                          ],
                                          "properties": {
                                            "frames": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "function",
                                                  "errors",
                                                  "colNo",
                                                  "vars",
                                                  "package",
                                                  "absPath",
                                                  "inApp",
                                                  "lineNo",
                                                  "module",
                                                  "filename",
                                                  "platform",
                                                  "instructionAddr",
                                                  "context",
                                                  "symbolAddr",
                                                  "trust",
                                                  "symbol"
                                                ],
                                                "properties": {
                                                  "function": {
                                                    "type": "string"
                                                  },
                                                  "errors": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "colNo": {
                                                    "type": "integer",
                                                    "nullable": true
                                                  },
                                                  "vars": {
                                                    "type": "object",
                                                    "nullable": true
                                                  },
                                                  "package": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "absPath": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "inApp": {
                                                    "type": "boolean"
                                                  },
                                                  "lineNo": {
                                                    "type": "integer"
                                                  },
                                                  "module": {
                                                    "type": "string"
                                                  },
                                                  "filename": {
                                                    "type": "string"
                                                  },
                                                  "platform": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "instructionAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "context": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "array",
                                                      "items": {
                                                        "oneOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "symbolAddr": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "trust": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "symbol": {
                                                    "type": "string",
                                                    "nullable": true
                                                  }
                                                }
                                              }
                                            },
                                            "framesOmitted": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "registers": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "hasSystemFrames": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "module": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "rawStacktrace": {
                                          "type": "object",
                                          "nullable": true
                                        },
                                        "mechanism": {
                                          "type": "object",
                                          "nullable": true,
                                          "properties": {
                                            "type": {
                                              "type": "string"
                                            },
                                            "handled": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "threadId": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "value": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "packages": {
                      "type": "object"
                    },
                    "sdk": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_meta": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "string",
                          "nullable": true
                        },
                        "context": {
                          "type": "string",
                          "nullable": true
                        },
                        "entries": {
                          "type": "object"
                        },
                        "contexts": {
                          "type": "string",
                          "nullable": true
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        },
                        "packages": {
                          "type": "string",
                          "nullable": true
                        },
                        "tags": {
                          "type": "object"
                        },
                        "sdk": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "contexts": {
                      "type": "object",
                      "properties": {
                        "ForbiddenError": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer"
                            },
                            "statusText": {
                              "type": "string"
                            },
                            "responseJSON": {
                              "type": "object",
                              "properties": {
                                "detail": {
                                  "type": "string"
                                }
                              }
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "browser": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "os": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "trace": {
                          "type": "object",
                          "properties": {
                            "span_id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "trace_id": {
                              "type": "string"
                            },
                            "op": {
                              "type": "string"
                            }
                          }
                        },
                        "organization": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "fingerprints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {
                        "resp": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer"
                            },
                            "responseJSON": {
                              "type": "object",
                              "properties": {
                                "detail": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "statusText": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "stack": {
                              "type": "string"
                            }
                          }
                        },
                        "session": {
                          "type": "object",
                          "properties": {
                            "foo": {
                              "type": "string"
                            }
                          }
                        },
                        "unauthorized": {
                          "type": "boolean"
                        },
                        "url": {
                          "type": "string"
                        }
                      }
                    },
                    "release": {
                      "type": "object",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "authors",
                            "commitCount",
                            "data",
                            "dateCreated",
                            "dateReleased",
                            "deployCount",
                            "firstEvent",
                            "lastCommit",
                            "lastDeploy",
                            "lastEvent",
                            "newGroups",
                            "owner",
                            "projects",
                            "ref",
                            "shortVersion",
                            "version",
                            "url"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "authors": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "commitCount": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "data": {
                              "type": "object"
                            },
                            "dateCreated": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "dateReleased": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "deployCount": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "firstEvent": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "lastCommit": {
                              "type": "object",
                              "nullable": true
                            },
                            "lastDeploy": {
                              "type": "object",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "environment",
                                    "name",
                                    "dateStarted",
                                    "dateFinished",
                                    "url",
                                    "id"
                                  ],
                                  "properties": {
                                    "environment": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "dateStarted": {
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true
                                    },
                                    "dateFinished": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "url": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "string",
                                  "nullable": true,
                                  "not": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "array",
                                        "items": {}
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "lastEvent": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "newGroups": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "owner": {
                              "type": "object",
                              "nullable": true
                            },
                            "projects": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "slug": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ref": {
                              "type": "string",
                              "nullable": true
                            },
                            "shortVersion": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        }
                      ]
                    },
                    "groupID": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "eventID": "9999aaaaca8b46d797c23c6077c6ff01",
                  "dist": null,
                  "userReport": null,
                  "previousEventID": null,
                  "message": "",
                  "title": "This is an example Python exception",
                  "id": "9999aaafcc8b46d797c23c6077c6ff01",
                  "size": 107762,
                  "errors": [
                    {
                      "data": {
                        "column": 8,
                        "source": "https://s1.sentry-cdn.com/_static/bloopbloop/sentry/dist/app.js.map",
                        "row": 15
                      },
                      "message": "Invalid location in sourcemap",
                      "type": "js_invalid_sourcemap_location"
                    }
                  ],
                  "platform": "javascript",
                  "nextEventID": "99f9e199e9a74a14bfef6196ad741619",
                  "type": "error",
                  "metadata": {
                    "type": "ForbiddenError",
                    "value": "GET /organizations/hellboy-meowmeow/users/ 403"
                  },
                  "tags": [
                    {
                      "value": "Chrome 83.0.4103",
                      "key": "browser",
                      "_meta": null
                    },
                    {
                      "value": "Chrome",
                      "key": "browser.name",
                      "_meta": null
                    },
                    {
                      "value": "prod",
                      "key": "environment",
                      "_meta": null
                    },
                    {
                      "value": "yes",
                      "key": "handled",
                      "_meta": null
                    },
                    {
                      "value": "error",
                      "key": "level",
                      "_meta": null
                    },
                    {
                      "value": "generic",
                      "key": "mechanism",
                      "_meta": null
                    }
                  ],
                  "dateCreated": "2020-06-17T22:26:56.098086Z",
                  "dateReceived": "2020-06-17T22:26:56.428721Z",
                  "user": {
                    "username": null,
                    "name": "Hell Boy",
                    "ip_address": "192.168.1.1",
                    "email": "hell@boy.cat",
                    "data": {
                      "isStaff": false
                    },
                    "id": "550747"
                  },
                  "entries": [
                    {
                      "type": "exception",
                      "data": {
                        "values": [
                          {
                            "stacktrace": {
                              "frames": [
                                {
                                  "function": "ignoreOnError",
                                  "errors": null,
                                  "colNo": 23,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "inApp": false,
                                  "lineNo": 71,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/@sentry/browser/esm/helpers.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      66,
                                      "            }"
                                    ],
                                    [
                                      67,
                                      "            // Attempt to invoke user-land function"
                                    ],
                                    [
                                      68,
                                      "            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it"
                                    ],
                                    [
                                      69,
                                      "            //       means the sentry.javascript SDK caught an error invoking your application code. This"
                                    ],
                                    [
                                      70,
                                      "            //       is expected behavior and NOT indicative of a bug with sentry.javascript."
                                    ],
                                    [
                                      71,
                                      "            return fn.apply(this, wrappedArguments);"
                                    ],
                                    [
                                      72,
                                      "            // tslint:enable:no-unsafe-any"
                                    ],
                                    [
                                      73,
                                      "        }"
                                    ],
                                    [
                                      74,
                                      "        catch (ex) {"
                                    ],
                                    [
                                      75,
                                      "            ignoreNextOnError();"
                                    ],
                                    [
                                      76,
                                      "            withScope(function (scope) {"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": "apply",
                                  "errors": null,
                                  "colNo": 24,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "webpack:////usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "inApp": false,
                                  "lineNo": 74,
                                  "module": "usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods",
                                  "filename": "/usr/src/getsentry/src/sentry/node_modules/reflux-core/lib/PublisherMethods.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      69,
                                      "     */"
                                    ],
                                    [
                                      70,
                                      "    triggerAsync: function triggerAsync() {"
                                    ],
                                    [
                                      71,
                                      "        var args = arguments,"
                                    ],
                                    [
                                      72,
                                      "            me = this;"
                                    ],
                                    [
                                      73,
                                      "        _.nextTick(function () {"
                                    ],
                                    [
                                      74,
                                      "            me.trigger.apply(me, args);"
                                    ],
                                    [
                                      75,
                                      "        });"
                                    ],
                                    [
                                      76,
                                      "    },"
                                    ],
                                    [
                                      77,
                                      ""
                                    ],
                                    [
                                      78,
                                      "    /**"
                                    ],
                                    [
                                      79,
                                      "     * Wraps the trigger mechanism with a deferral function."
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "module": null,
                            "rawStacktrace": {
                              "frames": [
                                {
                                  "function": "a",
                                  "errors": null,
                                  "colNo": 88800,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 81,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      76,
                                      "/*!"
                                    ],
                                    [
                                      77,
                                      "  Copyright (c) 2018 Jed Watson."
                                    ],
                                    [
                                      78,
                                      "  Licensed under the MIT License (MIT), see"
                                    ],
                                    [
                                      79,
                                      "  http://jedwatson.github.io/react-select"
                                    ],
                                    [
                                      80,
                                      "*/"
                                    ],
                                    [
                                      81,
                                      "{snip} e,t)}));return e.handleEvent?e.handleEvent.apply(this,s):e.apply(this,s)}catch(e){throw c(),Object(o.m)((function(n){n.addEventProcessor((fu {snip}"
                                    ],
                                    [
                                      82,
                                      "/*!"
                                    ],
                                    [
                                      83,
                                      " * JavaScript Cookie v2.2.1"
                                    ],
                                    [
                                      84,
                                      " * https://github.com/js-cookie/js-cookie"
                                    ],
                                    [
                                      85,
                                      " *"
                                    ],
                                    [
                                      86,
                                      " * Copyright 2006, 2015 Klaus Hartl & Fagner Brack"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                },
                                {
                                  "function": null,
                                  "errors": null,
                                  "colNo": 149484,
                                  "vars": null,
                                  "package": null,
                                  "absPath": "https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "inApp": false,
                                  "lineNo": 119,
                                  "module": null,
                                  "filename": "/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js",
                                  "platform": null,
                                  "instructionAddr": null,
                                  "context": [
                                    [
                                      114,
                                      "/* @license"
                                    ],
                                    [
                                      115,
                                      "Papa Parse"
                                    ],
                                    [
                                      116,
                                      "v5.2.0"
                                    ],
                                    [
                                      117,
                                      "https://github.com/mholt/PapaParse"
                                    ],
                                    [
                                      118,
                                      "License: MIT"
                                    ],
                                    [
                                      119,
                                      "{snip} (){var e=arguments,t=this;r.nextTick((function(){t.trigger.apply(t,e)}))},deferWith:function(e){var t=this.trigger,n=this,r=function(){t.app {snip}"
                                    ],
                                    [
                                      120,
                                      "/**!"
                                    ],
                                    [
                                      121,
                                      " * @fileOverview Kickass library to create and place poppers near their reference elements."
                                    ],
                                    [
                                      122,
                                      " * @version 1.16.1"
                                    ],
                                    [
                                      123,
                                      " * @license"
                                    ],
                                    [
                                      124,
                                      " * Copyright (c) 2016 Federico Zivolo and contributors"
                                    ]
                                  ],
                                  "symbolAddr": null,
                                  "trust": null,
                                  "symbol": null
                                }
                              ],
                              "framesOmitted": null,
                              "registers": null,
                              "hasSystemFrames": true
                            },
                            "mechanism": {
                              "type": "generic",
                              "handled": true
                            },
                            "threadId": null,
                            "value": "GET /organizations/hellboy-meowmeow/users/ 403",
                            "type": "ForbiddenError"
                          }
                        ],
                        "excOmitted": null,
                        "hasSystemFrames": true
                      }
                    },
                    {
                      "type": "breadcrumbs",
                      "data": {
                        "values": [
                          {
                            "category": "tracing",
                            "level": "debug",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.266586Z",
                            "data": null,
                            "message": "[Tracing] pushActivity: idleTransactionStarted#1",
                            "type": "debug"
                          },
                          {
                            "category": "xhr",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.619446Z",
                            "data": {
                              "url": "/api/0/internal/health/",
                              "status_code": 200,
                              "method": "GET"
                            },
                            "message": null,
                            "type": "http"
                          },
                          {
                            "category": "sentry.transaction",
                            "level": "info",
                            "event_id": null,
                            "timestamp": "2020-06-17T22:26:55.945016Z",
                            "data": null,
                            "message": "7787a027f3fb46c985aaa2287b3f4d09",
                            "type": "default"
                          }
                        ]
                      }
                    },
                    {
                      "type": "request",
                      "data": {
                        "fragment": null,
                        "cookies": [],
                        "inferredContentType": null,
                        "env": null,
                        "headers": [
                          [
                            "User-Agent",
                            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36"
                          ]
                        ],
                        "url": "https://sentry.io/organizations/hellboy-meowmeow/issues/",
                        "query": [
                          [
                            "project",
                            "5236886"
                          ]
                        ],
                        "data": null,
                        "method": null
                      }
                    }
                  ],
                  "packages": {},
                  "sdk": {
                    "version": "5.17.0",
                    "name": "sentry.javascript.browser"
                  },
                  "_meta": {
                    "user": null,
                    "context": null,
                    "entries": {},
                    "contexts": null,
                    "message": null,
                    "packages": null,
                    "tags": {},
                    "sdk": null
                  },
                  "contexts": {
                    "ForbiddenError": {
                      "status": 403,
                      "statusText": "Forbidden",
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "type": "default"
                    },
                    "browser": {
                      "version": "83.0.4103",
                      "type": "browser",
                      "name": "Chrome"
                    },
                    "os": {
                      "version": "10",
                      "type": "os",
                      "name": "Windows"
                    },
                    "trace": {
                      "span_id": "83db1ad17e67dfe7",
                      "type": "trace",
                      "trace_id": "da6caabcd90e45fdb81f6655824a5f88",
                      "op": "navigation"
                    },
                    "organization": {
                      "type": "default",
                      "id": "323938",
                      "slug": "hellboy-meowmeow"
                    }
                  },
                  "fingerprints": [
                    "fbe908cc63d63ea9763fd84cb6bad177"
                  ],
                  "context": {
                    "resp": {
                      "status": 403,
                      "responseJSON": {
                        "detail": "You do not have permission to perform this action."
                      },
                      "name": "ForbiddenError",
                      "statusText": "Forbidden",
                      "message": "GET /organizations/hellboy-meowmeow/users/ 403",
                      "stack": "Error\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480441\n    at u (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51006)\n    at Generator._invoke (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:50794)\n    at Generator.A.forEach.e.<computed> [as next] (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:165:51429)\n    at n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68684)\n    at s (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68895)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68954\n    at new Promise (<anonymous>)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:16:68835\n    at v (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480924)\n    at m (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:480152)\n    at t.fetchMemberList (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:902983)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:900527)\n    at t.componentDidMount (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:15597)\n    at Pc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:101023)\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Rc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:97371)\n    at Oc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:87690)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45820\n    at t.unstable_runWithPriority (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:3462)\n    at Ko (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45529)\n    at Zo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45765)\n    at Jo (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:45700)\n    at gc (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:84256)\n    at Object.enqueueSetState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:181:50481)\n    at t.M.setState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:173:1439)\n    at t.onUpdate (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:543076)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at p.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at p.onInitializeUrlState (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/app.js:1:541711)\n    at a.n (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149090)\n    at a.emit (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:189:6550)\n    at Function.trigger (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149379)\n    at https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:119:149484\n    at a (https://s1.sentry-cdn.com/_static/dde778f9f93a48e2b6e58ecb0c5eb8f2/sentry/dist/vendor.js:81:88800)"
                    }
                  },
                  "release": {
                    "dateReleased": "2020-06-17T19:21:02.186004Z",
                    "newGroups": 4,
                    "commitCount": 11,
                    "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                    "data": {},
                    "lastDeploy": {
                      "name": "b65bc521378269d3eaefdc964f8ef56621414943 to prod",
                      "url": null,
                      "environment": "prod",
                      "dateStarted": null,
                      "dateFinished": "2020-06-17T19:20:55.641748Z",
                      "id": "6883490"
                    },
                    "deployCount": 1,
                    "dateCreated": "2020-06-17T18:45:31.042157Z",
                    "lastEvent": "2020-07-08T21:21:21Z",
                    "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "firstEvent": "2020-06-17T22:25:14Z",
                    "lastCommit": {
                      "repository": {
                        "status": "active",
                        "integrationId": "2933",
                        "externalSlug": "getsentry/getsentry",
                        "name": "getsentry/getsentry",
                        "provider": {
                          "id": "integrations:github",
                          "name": "GitHub"
                        },
                        "url": "https://github.com/getsentry/getsentry",
                        "id": "2",
                        "dateCreated": "2016-10-10T21:36:45.373994Z"
                      },
                      "releases": [
                        {
                          "dateReleased": "2020-06-23T13:26:18.427090Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/staging/2077/",
                          "dateCreated": "2020-06-23T13:22:50.420265Z",
                          "version": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "shortVersion": "f3783e5fe710758724f14267439fd46cc2bf5918",
                          "ref": "perf/source-maps-test"
                        },
                        {
                          "dateReleased": "2020-06-17T19:21:02.186004Z",
                          "url": "https://freight.getsentry.net/deploys/getsentry/production/8868/",
                          "dateCreated": "2020-06-17T18:45:31.042157Z",
                          "version": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                          "ref": "master"
                        }
                      ],
                      "dateCreated": "2020-06-17T18:43:37Z",
                      "message": "feat(billing): Get a lot of money",
                      "id": "b65bc521378269d3eaefdc964f8ef56621414943"
                    },
                    "shortVersion": "b65bc521378269d3eaefdc964f8ef56621414943",
                    "authors": [
                      {
                        "username": "a37a1b4520ce46cea147ae2885a4e7e7",
                        "lastLogin": "2020-09-14T22:34:55.550640Z",
                        "isSuperuser": false,
                        "isManaged": false,
                        "experiments": {},
                        "lastActive": "2020-09-15T22:13:20.503880Z",
                        "isStaff": false,
                        "id": "655784",
                        "isActive": true,
                        "has2fa": false,
                        "name": "hell.boy@sentry.io",
                        "avatarUrl": "https://secure.gravatar.com/avatar/eaa22e25b3a984659420831a77e4874e?s=32&d=mm",
                        "dateJoined": "2020-04-20T16:21:25.365772Z",
                        "emails": [
                          {
                            "is_verified": false,
                            "id": "784574",
                            "email": "hellboy@gmail.com"
                          },
                          {
                            "is_verified": true,
                            "id": "749185",
                            "email": "hell.boy@sentry.io"
                          }
                        ],
                        "avatar": {
                          "avatarUuid": null,
                          "avatarType": "letter_avatar"
                        },
                        "hasPasswordAuth": false,
                        "email": "hell.boy@sentry.io"
                      }
                    ],
                    "owner": null,
                    "ref": "master",
                    "projects": [
                      {
                        "name": "Sentry CSP",
                        "slug": "sentry-csp"
                      },
                      {
                        "name": "Backend",
                        "slug": "sentry"
                      },
                      {
                        "name": "Frontend",
                        "slug": "javascript"
                      }
                    ]
                  },
                  "groupID": "1341191803"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/issues/{issue_id}/events/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "This endpoint lists an issue's events.",
        "operationId": "List an Issue's Events",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issues belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "full",
            "in": "query",
            "description": "If this is set to true then the event payload will include the full event body, including the stacktrace. \nSet to true to enable.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "eventID",
                      "tags",
                      "dateCreated",
                      "user",
                      "message",
                      "id",
                      "platform",
                      "event.type",
                      "groupID",
                      "title"
                    ],
                    "properties": {
                      "eventID": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "dateCreated": {
                        "type": "string"
                      },
                      "user": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                          "username",
                          "name",
                          "ip_address",
                          "email",
                          "data",
                          "id"
                        ],
                        "properties": {
                          "username": {
                            "type": "string",
                            "nullable": true
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "ip_address": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "data": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "isStaff": {
                                "type": "boolean"
                              }
                            }
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "message": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "platform": {
                        "type": "string"
                      },
                      "event.type": {
                        "type": "string"
                      },
                      "groupID": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "eventID": "9fac2ceed9344f2bbfdd1fdacb0ed9b1",
                    "tags": [
                      {
                        "key": "browser",
                        "value": "Chrome 60.0"
                      },
                      {
                        "key": "device",
                        "value": "Other"
                      },
                      {
                        "key": "environment",
                        "value": "production"
                      },
                      {
                        "value": "fatal",
                        "key": "level"
                      },
                      {
                        "key": "os",
                        "value": "Mac OS X 10.12.6"
                      },
                      {
                        "value": "CPython 2.7.16",
                        "key": "runtime"
                      },
                      {
                        "key": "release",
                        "value": "17642328ead24b51867165985996d04b29310337"
                      },
                      {
                        "key": "server_name",
                        "value": "web1.example.com"
                      }
                    ],
                    "dateCreated": "2020-09-11T17:46:36Z",
                    "user": null,
                    "message": "",
                    "title": "This is an example Python exception",
                    "id": "dfb1a2d057194e76a4186cc8a5271553",
                    "platform": "python",
                    "event.type": "error",
                    "groupID": "1889724436"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:read"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/issues/{issue_id}/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Return details on an individual issue. This returns the basic stats for the issue (title, last seen, first seen), some overall numbers (number of comments, user reports) as well as the summarized event data.",
        "operationId": "Retrieve an Issue",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issue belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "activity",
                    "annotations",
                    "assignedTo",
                    "count",
                    "culprit",
                    "firstRelease",
                    "firstSeen",
                    "hasSeen",
                    "id",
                    "isBookmarked",
                    "isPublic",
                    "isSubscribed",
                    "lastRelease",
                    "lastSeen",
                    "level",
                    "logger",
                    "metadata",
                    "numComments",
                    "participants",
                    "permalink",
                    "pluginActions",
                    "pluginContexts",
                    "pluginIssues",
                    "project",
                    "seenBy",
                    "shareId",
                    "shortId",
                    "stats",
                    "status",
                    "statusDetails",
                    "subscriptionDetails",
                    "tags",
                    "title",
                    "type",
                    "userCount",
                    "userReportCount"
                  ],
                  "properties": {
                    "activity": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object"
                          },
                          "dateCreated": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "annotations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "assignedTo": {
                      "type": "object",
                      "nullable": true
                    },
                    "count": {
                      "type": "string"
                    },
                    "culprit": {
                      "type": "string"
                    },
                    "firstRelease": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "authors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "commitCount": {
                          "type": "integer"
                        },
                        "data": {
                          "type": "object",
                          "nullable": true
                        },
                        "dateCreated": {
                          "type": "string"
                        },
                        "dateReleased": {
                          "type": "string",
                          "nullable": true
                        },
                        "deployCount": {
                          "type": "integer"
                        },
                        "firstEvent": {
                          "type": "string"
                        },
                        "lastCommit": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastDeploy": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastEvent": {
                          "type": "string"
                        },
                        "newGroups": {
                          "type": "integer"
                        },
                        "owner": {
                          "type": "string",
                          "nullable": true
                        },
                        "projects": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "slug": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ref": {
                          "type": "string",
                          "nullable": true
                        },
                        "shortVersion": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string",
                          "nullable": true
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "firstSeen": {
                      "type": "string"
                    },
                    "hasSeen": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "isSubscribed": {
                      "type": "boolean"
                    },
                    "lastRelease": {
                      "type": "object",
                      "nullable": true
                    },
                    "lastSeen": {
                      "type": "string"
                    },
                    "level": {
                      "type": "string"
                    },
                    "logger": {
                      "type": "string",
                      "nullable": true
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "filename",
                            "type",
                            "value"
                          ],
                          "properties": {
                            "filename": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "title"
                          ],
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "numComments": {
                      "type": "integer"
                    },
                    "participants": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "permalink": {
                      "type": "string"
                    },
                    "pluginActions": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "pluginContexts": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pluginIssues": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "project": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      }
                    },
                    "seenBy": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "shareId": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortId": {
                      "type": "string"
                    },
                    "stats": {
                      "type": "object",
                      "properties": {
                        "24h": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          }
                        },
                        "30d": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "resolved",
                        "unresolved",
                        "ignored"
                      ]
                    },
                    "statusDetails": {
                      "type": "object"
                    },
                    "subscriptionDetails": {
                      "type": "object",
                      "nullable": true
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "userCount": {
                      "type": "integer"
                    },
                    "userReportCount": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "activity": [
                    {
                      "data": {},
                      "dateCreated": "2018-11-06T21:19:55Z",
                      "id": "0",
                      "type": "first_seen",
                      "user": null
                    }
                  ],
                  "annotations": [],
                  "assignedTo": null,
                  "count": "1",
                  "culprit": "raven.scripts.runner in main",
                  "firstRelease": {
                    "authors": [],
                    "commitCount": 0,
                    "data": {},
                    "dateCreated": "2018-11-06T21:19:55.146Z",
                    "dateReleased": null,
                    "deployCount": 0,
                    "firstEvent": "2018-11-06T21:19:55.271Z",
                    "lastCommit": null,
                    "lastDeploy": null,
                    "lastEvent": "2018-11-06T21:19:55.271Z",
                    "newGroups": 0,
                    "owner": null,
                    "projects": [
                      {
                        "name": "Pump Station",
                        "slug": "pump-station"
                      }
                    ],
                    "ref": null,
                    "shortVersion": "1764232",
                    "url": null,
                    "version": "17642328ead24b51867165985996d04b29310337"
                  },
                  "firstSeen": "2018-11-06T21:19:55Z",
                  "hasSeen": false,
                  "id": "1",
                  "isBookmarked": false,
                  "isPublic": false,
                  "isSubscribed": true,
                  "lastRelease": null,
                  "lastSeen": "2018-11-06T21:19:55Z",
                  "level": "error",
                  "logger": null,
                  "metadata": {
                    "title": "This is an example Python exception"
                  },
                  "numComments": 0,
                  "participants": [],
                  "permalink": "https://sentry.io/the-interstellar-jurisdiction/pump-station/issues/1/",
                  "pluginActions": [],
                  "pluginContexts": [],
                  "pluginIssues": [],
                  "project": {
                    "id": "2",
                    "name": "Pump Station",
                    "slug": "pump-station"
                  },
                  "seenBy": [],
                  "shareId": null,
                  "shortId": "PUMP-STATION-1",
                  "stats": {
                    "24h": [
                      [
                        1541451600,
                        557
                      ],
                      [
                        1541455200,
                        473
                      ],
                      [
                        1541458800,
                        914
                      ],
                      [
                        1541462400,
                        991
                      ],
                      [
                        1541466000,
                        925
                      ],
                      [
                        1541469600,
                        881
                      ],
                      [
                        1541473200,
                        182
                      ],
                      [
                        1541476800,
                        490
                      ],
                      [
                        1541480400,
                        820
                      ],
                      [
                        1541484000,
                        322
                      ],
                      [
                        1541487600,
                        836
                      ],
                      [
                        1541491200,
                        565
                      ],
                      [
                        1541494800,
                        758
                      ],
                      [
                        1541498400,
                        880
                      ],
                      [
                        1541502000,
                        677
                      ],
                      [
                        1541505600,
                        381
                      ],
                      [
                        1541509200,
                        814
                      ],
                      [
                        1541512800,
                        329
                      ],
                      [
                        1541516400,
                        446
                      ],
                      [
                        1541520000,
                        731
                      ],
                      [
                        1541523600,
                        111
                      ],
                      [
                        1541527200,
                        926
                      ],
                      [
                        1541530800,
                        772
                      ],
                      [
                        1541534400,
                        400
                      ],
                      [
                        1541538000,
                        943
                      ]
                    ],
                    "30d": [
                      [
                        1538870400,
                        565
                      ],
                      [
                        1538956800,
                        12862
                      ],
                      [
                        1539043200,
                        15617
                      ],
                      [
                        1539129600,
                        10809
                      ],
                      [
                        1539216000,
                        15065
                      ],
                      [
                        1539302400,
                        12927
                      ],
                      [
                        1539388800,
                        12994
                      ],
                      [
                        1539475200,
                        13139
                      ],
                      [
                        1539561600,
                        11838
                      ],
                      [
                        1539648000,
                        12088
                      ],
                      [
                        1539734400,
                        12338
                      ],
                      [
                        1539820800,
                        12768
                      ],
                      [
                        1539907200,
                        12816
                      ],
                      [
                        1539993600,
                        15356
                      ],
                      [
                        1540080000,
                        10910
                      ],
                      [
                        1540166400,
                        12306
                      ],
                      [
                        1540252800,
                        12912
                      ],
                      [
                        1540339200,
                        14700
                      ],
                      [
                        1540425600,
                        11890
                      ],
                      [
                        1540512000,
                        11684
                      ],
                      [
                        1540598400,
                        13510
                      ],
                      [
                        1540684800,
                        12625
                      ],
                      [
                        1540771200,
                        12811
                      ],
                      [
                        1540857600,
                        13180
                      ],
                      [
                        1540944000,
                        14651
                      ],
                      [
                        1541030400,
                        14161
                      ],
                      [
                        1541116800,
                        12612
                      ],
                      [
                        1541203200,
                        14316
                      ],
                      [
                        1541289600,
                        14742
                      ],
                      [
                        1541376000,
                        12505
                      ],
                      [
                        1541462400,
                        14180
                      ]
                    ]
                  },
                  "status": "unresolved",
                  "statusDetails": {},
                  "subscriptionDetails": null,
                  "tags": [],
                  "title": "This is an example Python exception",
                  "type": "default",
                  "userCount": 0,
                  "userReportCount": 0
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Events"
        ],
        "description": "Updates an individual issue's attributes.  Only the attributes submitted are modified.",
        "operationId": "Update an Issue",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issue belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the group to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The new status for the issues. Valid values are `\"resolved\"`, `\"resolvedInNextRelease\"`, `\"unresolved\"`, and `\"ignored\"`."
                  },
                  "assignedTo": {
                    "type": "string",
                    "description": "The actor id (or username) of the user or team that should be assigned to this issue."
                  },
                  "hasSeen": {
                    "type": "boolean",
                    "description": "In case this API call is invoked with a user context this allows changing of the flag that indicates if the user has seen the event."
                  },
                  "isBookmarked": {
                    "type": "boolean",
                    "description": "In case this API call is invoked with a user context this allows changing of the bookmark flag."
                  },
                  "isSubscribed": {
                    "type": "boolean"
                  },
                  "isPublic": {
                    "type": "boolean",
                    "description": "Sets the issue to public or private."
                  }
                }
              },
              "example": {
                "status": "unresolved"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "lastSeen",
                    "numComments",
                    "userCount",
                    "culprit",
                    "title",
                    "id",
                    "assignedTo",
                    "logger",
                    "type",
                    "annotations",
                    "metadata",
                    "status",
                    "subscriptionDetails",
                    "isPublic",
                    "hasSeen",
                    "shortId",
                    "shareId",
                    "firstSeen",
                    "count",
                    "permalink",
                    "level",
                    "isSubscribed",
                    "isBookmarked",
                    "project",
                    "statusDetails"
                  ],
                  "properties": {
                    "annotations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "assignedTo": {
                      "type": "object",
                      "nullable": true
                    },
                    "count": {
                      "type": "string"
                    },
                    "culprit": {
                      "type": "string"
                    },
                    "firstSeen": {
                      "type": "string"
                    },
                    "hasSeen": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isBookmarked": {
                      "type": "boolean"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "isSubscribed": {
                      "type": "boolean"
                    },
                    "lastSeen": {
                      "type": "string"
                    },
                    "level": {
                      "type": "string"
                    },
                    "logger": {
                      "type": "string",
                      "nullable": true
                    },
                    "metadata": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "filename",
                            "type",
                            "value"
                          ],
                          "properties": {
                            "filename": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "title"
                          ],
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "numComments": {
                      "type": "integer"
                    },
                    "permalink": {
                      "type": "string"
                    },
                    "project": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      }
                    },
                    "shareId": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "resolved",
                        "unresolved",
                        "ignored"
                      ]
                    },
                    "statusDetails": {
                      "type": "object"
                    },
                    "subscriptionDetails": {
                      "type": "object",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "userCount": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "annotations": [],
                  "assignedTo": null,
                  "count": "1",
                  "culprit": "raven.scripts.runner in main",
                  "firstSeen": "2018-11-06T21:19:55Z",
                  "hasSeen": false,
                  "id": "1",
                  "isBookmarked": false,
                  "isPublic": false,
                  "isSubscribed": true,
                  "lastSeen": "2018-11-06T21:19:55Z",
                  "level": "error",
                  "logger": null,
                  "metadata": {
                    "title": "This is an example Python exception"
                  },
                  "numComments": 0,
                  "permalink": "https://sentry.io/the-interstellar-jurisdiction/pump-station/issues/1/",
                  "project": {
                    "id": "2",
                    "name": "Pump Station",
                    "slug": "pump-station"
                  },
                  "shareId": null,
                  "shortId": "PUMP-STATION-1",
                  "status": "unresolved",
                  "statusDetails": {},
                  "subscriptionDetails": null,
                  "title": "This is an example Python exception",
                  "type": "default",
                  "userCount": 0
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "description": "Removes an individual issue.",
        "operationId": "Remove an Issue",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the issue belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issue_id",
            "in": "path",
            "description": "The ID of the issue to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The requested resource does not exist"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:admin"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "Return a list of releases for a given organization.",
        "operationId": "List an Organization's Releases",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "This parameter can be used to create a \"starts with\" filter for the version.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "authors",
                      "commitCount",
                      "data",
                      "dateCreated",
                      "dateReleased",
                      "deployCount",
                      "firstEvent",
                      "lastCommit",
                      "lastDeploy",
                      "lastEvent",
                      "newGroups",
                      "owner",
                      "projects",
                      "ref",
                      "shortVersion",
                      "version",
                      "url"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "authors": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "commitCount": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "data": {
                        "type": "object"
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "dateReleased": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "deployCount": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "firstEvent": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "lastCommit": {
                        "type": "object",
                        "nullable": true
                      },
                      "lastDeploy": {
                        "type": "object",
                        "nullable": true,
                        "oneOf": [
                          {
                            "type": "object",
                            "required": [
                              "environment",
                              "name",
                              "dateStarted",
                              "dateFinished",
                              "url",
                              "id"
                            ],
                            "properties": {
                              "environment": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true
                              },
                              "dateStarted": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "dateFinished": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "url": {
                                "type": "string",
                                "nullable": true
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "string",
                            "nullable": true,
                            "not": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "object"
                                },
                                {
                                  "type": "array",
                                  "items": {}
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "lastEvent": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "newGroups": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "owner": {
                        "type": "object",
                        "nullable": true
                      },
                      "projects": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "slug": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ref": {
                        "type": "string",
                        "nullable": true
                      },
                      "shortVersion": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 2,
                    "authors": [],
                    "commitCount": 0,
                    "data": {},
                    "dateCreated": "2018-11-06T21:20:08.033Z",
                    "dateReleased": null,
                    "deployCount": 0,
                    "firstEvent": null,
                    "lastCommit": null,
                    "lastDeploy": null,
                    "lastEvent": null,
                    "newGroups": 0,
                    "owner": null,
                    "projects": [
                      {
                        "name": "Pump Station",
                        "slug": "pump-station"
                      }
                    ],
                    "ref": "6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb",
                    "shortVersion": "2.0rc2",
                    "url": null,
                    "version": "2.0rc2"
                  },
                  {
                    "id": 1,
                    "authors": [],
                    "commitCount": 0,
                    "data": {},
                    "dateCreated": "2018-11-06T21:19:58.559Z",
                    "dateReleased": null,
                    "deployCount": 0,
                    "firstEvent": "2018-11-06T21:19:58.639Z",
                    "lastCommit": null,
                    "lastDeploy": null,
                    "lastEvent": "2018-11-06T21:19:58.639Z",
                    "newGroups": 0,
                    "owner": null,
                    "projects": [
                      {
                        "name": "Prime Mover",
                        "slug": "prime-mover"
                      }
                    ],
                    "ref": null,
                    "shortVersion": "2b6af31",
                    "url": null,
                    "version": "2b6af31b2edccc73a629108b17344dfe20858780"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Permission Denied"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Releases"
        ],
        "description": "Create a new release for the given organization.  Releases are used by\nSentry to improve its error reporting abilities by correlating\nfirst seen events with the release that might have introduced the\nproblem.\nReleases are also necessary for source maps and other debug features\nthat require manual upload for functioning well.",
        "operationId": "Create a New Release for an Organization",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "version",
                  "projects"
                ],
                "properties": {
                  "version": {
                    "type": "string",
                    "description": "A version identifier for this release. Can be a version number, a commit hash, etc."
                  },
                  "ref": {
                    "type": "string",
                    "description": "An optional commit reference. This is useful if a tagged version has been provided."
                  },
                  "url": {
                    "type": "string",
                    "description": "A URL that points to the release. This can be the path to an online interface to the source code for instance"
                  },
                  "projects": {
                    "type": "array",
                    "description": "A list of project slugs that are involved in this release.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "dateReleased": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An optional date that indicates when the release went live. If not provided the current time is assumed."
                  },
                  "commits": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "patch_set": {
                          "type": "array",
                          "description": "A list of the files that have been changed in the commit. Specifying the patch_set is necessary to power suspect commits and suggested assignees.",
                          "items": {
                            "type": "object",
                            "required": [
                              "path",
                              "type"
                            ],
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path to the file. Both forward and backward slashes are supported."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "A",
                                  "M",
                                  "D"
                                ],
                                "description": "The type of change that happened in the commit."
                              }
                            }
                          }
                        },
                        "repository": {
                          "type": "string",
                          "description": "The full name of the repository the commit belongs to. If this field is not given Sentry will generate a name in the form: u'organization-<organization_id>' (i.e. if the organization id is 123, then the generated repository name will be u'organization-123)."
                        },
                        "author_name": {
                          "type": "string",
                          "description": "The name of the commit author."
                        },
                        "author_email": {
                          "type": "string",
                          "description": "The email of the commit author. The commit author's email is required to enable the suggested assignee feature."
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The commit timestamp is used to sort the commits given. If a timestamp is not included, the commits will remain sorted in the order given."
                        },
                        "message": {
                          "type": "string",
                          "description": "The commit message."
                        },
                        "id": {
                          "type": "string",
                          "description": "The commit ID (the commit SHA)."
                        }
                      }
                    },
                    "description": "An optional list of commit data to be associated with the release. Commits must include parameters `id` (the SHA of the commit), and can optionally include `repository`, `message`, `patch_set`, `author_name`, `author_email`, and `timestamp`."
                  },
                  "refs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "repository": {
                          "type": "string",
                          "description": "The full name of the repository the commit belongs to."
                        },
                        "commit": {
                          "type": "string",
                          "description": "The current release's commit."
                        },
                        "previousCommit": {
                          "type": "string",
                          "description": "The previous release's commit."
                        }
                      }
                    },
                    "description": "An optional way to indicate the start and end commits for each repository included in a release. Head commits must include parameters `repository` and `commit` (the HEAD sha). They can optionally include `previousCommit` (the sha of the HEAD of the previous release), which should be specified if this is the first time you've sent commit data. `commit` may contain a range in the form of `previousCommit..commit`."
                  }
                }
              },
              "example": {
                "version": "2.0rc2",
                "ref": "6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb",
                "projects": [
                  "pump-station"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "authors",
                    "commitCount",
                    "data",
                    "dateCreated",
                    "dateReleased",
                    "deployCount",
                    "firstEvent",
                    "lastCommit",
                    "lastDeploy",
                    "lastEvent",
                    "newGroups",
                    "owner",
                    "projects",
                    "ref",
                    "shortVersion",
                    "version",
                    "url"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "authors": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "commitCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "data": {
                      "type": "object"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateReleased": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "deployCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "firstEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "lastCommit": {
                      "type": "object",
                      "nullable": true
                    },
                    "lastDeploy": {
                      "type": "object",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "environment",
                            "name",
                            "dateStarted",
                            "dateFinished",
                            "url",
                            "id"
                          ],
                          "properties": {
                            "environment": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "dateStarted": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateFinished": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "url": {
                              "type": "string",
                              "nullable": true
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "string",
                          "nullable": true,
                          "not": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "object"
                              },
                              {
                                "type": "array",
                                "items": {}
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "lastEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "newGroups": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "owner": {
                      "type": "object",
                      "nullable": true
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "ref": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortVersion": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "id": 2,
                  "authors": [],
                  "commitCount": 0,
                  "data": {},
                  "dateCreated": "2019-01-03T00:12:55.109Z",
                  "dateReleased": null,
                  "deployCount": 0,
                  "firstEvent": null,
                  "lastCommit": null,
                  "lastDeploy": null,
                  "lastEvent": null,
                  "newGroups": 0,
                  "owner": null,
                  "projects": [
                    {
                      "name": "Pump Station",
                      "slug": "pump-station"
                    }
                  ],
                  "ref": "6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb",
                  "shortVersion": "2.0rc2",
                  "url": null,
                  "version": "2.0rc2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Input"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "Return a release for a given organization.",
        "operationId": "Retrieve an Organization's Releases",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "authors",
                    "commitCount",
                    "data",
                    "dateCreated",
                    "dateReleased",
                    "deployCount",
                    "firstEvent",
                    "lastCommit",
                    "lastDeploy",
                    "lastEvent",
                    "newGroups",
                    "owner",
                    "projects",
                    "ref",
                    "shortVersion",
                    "version",
                    "url"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "authors": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "commitCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "data": {
                      "type": "object"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateReleased": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "deployCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "firstEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "lastCommit": {
                      "type": "object",
                      "nullable": true
                    },
                    "lastDeploy": {
                      "type": "object",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "environment",
                            "name",
                            "dateStarted",
                            "dateFinished",
                            "url",
                            "id"
                          ],
                          "properties": {
                            "environment": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "dateStarted": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateFinished": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "url": {
                              "type": "string",
                              "nullable": true
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "string",
                          "nullable": true,
                          "not": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "object"
                              },
                              {
                                "type": "array",
                                "items": {}
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "lastEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "newGroups": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "owner": {
                      "type": "object",
                      "nullable": true
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "ref": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortVersion": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "id": 2,
                  "authors": [],
                  "commitCount": 0,
                  "data": {},
                  "dateCreated": "2018-11-06T21:20:08.033Z",
                  "dateReleased": null,
                  "deployCount": 0,
                  "firstEvent": null,
                  "lastCommit": null,
                  "lastDeploy": null,
                  "lastEvent": null,
                  "newGroups": 0,
                  "owner": null,
                  "projects": [
                    {
                      "name": "Pump Station",
                      "slug": "pump-station"
                    }
                  ],
                  "ref": "6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb",
                  "shortVersion": "2.0rc2",
                  "url": null,
                  "version": "2.0rc2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Releases"
        ],
        "description": "Update a release for a given organization.",
        "operationId": "Update an Organization's Release",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ref": {
                    "type": "string",
                    "description": "An optional commit reference. This is useful if a tagged version has been provided."
                  },
                  "url": {
                    "type": "string",
                    "description": "A URL that points to the release. This can be the path to an online interface to the source code for instance."
                  },
                  "dateReleased": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An optional date that indicates when the release went live. If not provided the current time is assumed."
                  },
                  "commits": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "An optional list of commit data to be associated with the release. Commits must include parameters `id` (the sha of the commit), and can optionally include `repository`, `message`, `author_name`, `author_email`, and `timestamp`."
                  },
                  "refs": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "An optional way to indicate the start and end commits for each repository included in a release. Head commits must include parameters `repository` and `commit` (the HEAD sha). They can optionally include `previousCommit` (the sha of the HEAD of the previous release), which should be specified if this is the first time you've sent commit data."
                  }
                }
              },
              "example": {
                "ref": "freshtofu",
                "url": "https://vcshub.invalid/user/project/refs/freshtofu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "authors",
                    "commitCount",
                    "data",
                    "dateCreated",
                    "dateReleased",
                    "deployCount",
                    "firstEvent",
                    "lastCommit",
                    "lastDeploy",
                    "lastEvent",
                    "newGroups",
                    "owner",
                    "projects",
                    "ref",
                    "shortVersion",
                    "version",
                    "url"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "authors": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "commitCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "data": {
                      "type": "object"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateReleased": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "deployCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "firstEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "lastCommit": {
                      "type": "object",
                      "nullable": true
                    },
                    "lastDeploy": {
                      "type": "object",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "environment",
                            "name",
                            "dateStarted",
                            "dateFinished",
                            "url",
                            "id"
                          ],
                          "properties": {
                            "environment": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "dateStarted": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateFinished": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "url": {
                              "type": "string",
                              "nullable": true
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "string",
                          "nullable": true,
                          "not": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "object"
                              },
                              {
                                "type": "array",
                                "items": {}
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "lastEvent": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "newGroups": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "owner": {
                      "type": "object",
                      "nullable": true
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "ref": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortVersion": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "id": 2,
                  "authors": [],
                  "commitCount": 0,
                  "data": {},
                  "dateCreated": "2019-01-03T00:12:55.109Z",
                  "dateReleased": null,
                  "deployCount": 0,
                  "firstEvent": null,
                  "lastCommit": null,
                  "lastDeploy": null,
                  "lastEvent": null,
                  "newGroups": 0,
                  "owner": null,
                  "projects": [
                    {
                      "name": "Pump Station",
                      "slug": "pump-station"
                    }
                  ],
                  "ref": "6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb",
                  "shortVersion": "2.0rc2",
                  "url": null,
                  "version": "2.0rc2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Releases"
        ],
        "description": "Delete a release for a given organization.",
        "operationId": "Delete an Organization's Release",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/files/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "Return a list of files for a given release.",
        "operationId": "List an Organization's Release Files",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "sha1",
                      "dist",
                      "name",
                      "dateCreated",
                      "headers",
                      "id",
                      "size"
                    ],
                    "properties": {
                      "sha1": {
                        "type": "string"
                      },
                      "dist": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "headers": {
                        "type": "object",
                        "properties": {
                          "Content-Type": {
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:20:22.894Z",
                    "dist": null,
                    "headers": {
                      "Content-Type": "text/plain; encoding=utf-8"
                    },
                    "id": "3",
                    "name": "/demo/goodbye.txt",
                    "sha1": "94d6b21e962a9fc65889617ec1f17a1e2fe11b65",
                    "size": 15
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Releases"
        ],
        "description": "Upload a new organization release file.",
        "operationId": "Upload a New Organization Release File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name (full path) of the file."
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The multipart encoded file."
                  },
                  "dist": {
                    "type": "string",
                    "description": "The name of the dist."
                  },
                  "header": {
                    "type": "string",
                    "description": "This parameter can be supplied multiple times to attach headers to the file. Each header is a string in the format `key:value`. For instance it can be used to define a content type."
                  }
                }
              },
              "example": {
                "name": "/demo/release.min.js",
                "file": "release.min.js"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/files/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "Return a list of files for a given release.",
        "operationId": "List a Project's Release Files",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "sha1",
                      "dist",
                      "name",
                      "dateCreated",
                      "headers",
                      "id",
                      "size"
                    ],
                    "properties": {
                      "sha1": {
                        "type": "string"
                      },
                      "dist": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "headers": {
                        "type": "object",
                        "properties": {
                          "Content-Type": {
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:20:22.894Z",
                    "dist": null,
                    "headers": {
                      "Content-Type": "text/plain; encoding=utf-8"
                    },
                    "id": "3",
                    "name": "/demo/goodbye.txt",
                    "sha1": "94d6b21e962a9fc65889617ec1f17a1e2fe11b65",
                    "size": 15
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Releases"
        ],
        "description": "Upload a new project release file.",
        "operationId": "Upload a New Project Release File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name (full path) of the file."
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The multipart encoded file."
                  },
                  "dist": {
                    "type": "string",
                    "description": "The name of the dist."
                  },
                  "header": {
                    "type": "string",
                    "description": "This parameter can be supplied multiple times to attach headers to the file. Each header is a string in the format `key:value`. For instance it can be used to define a content type."
                  }
                }
              },
              "example": {
                "name": "/demo/hello.min.js.map",
                "file": "@hello.min.js.map"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sha1",
                    "dist",
                    "name",
                    "dateCreated",
                    "headers",
                    "id",
                    "size"
                  ],
                  "properties": {
                    "sha1": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "properties": {
                        "Content-Type": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:22.894Z",
                  "dist": null,
                  "headers": {
                    "Content-Type": "text/plain; encoding=utf-8"
                  },
                  "id": "3",
                  "name": "/demo/goodbye.txt",
                  "sha1": "94d6b21e962a9fc65889617ec1f17a1e2fe11b65",
                  "size": 15
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/files/{file_id}/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "Retrieve a file for a given release.",
        "operationId": "Retrieve an Organization Release's File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "If this is set to true, then the response payload will be the raw file contents. Otherwise, the response will be the file metadata as JSON.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sha1",
                    "dist",
                    "name",
                    "dateCreated",
                    "headers",
                    "id",
                    "size"
                  ],
                  "properties": {
                    "sha1": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "properties": {
                        "Content-Type": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:19.150Z",
                  "dist": null,
                  "headers": {
                    "Content-Type": "text/plain; encoding=utf-8"
                  },
                  "id": "1",
                  "name": "/demo/message-for-you.txt",
                  "sha1": "2ef7bde608ce5404e97d5f042f95f89f1c232871",
                  "size": 12
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Releases"
        ],
        "description": "Update an organization release file.",
        "operationId": "Update an Organization Release File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name (full path) of the file."
                  },
                  "dist": {
                    "type": "string",
                    "description": "The new name of the dist."
                  }
                }
              },
              "example": {
                "name": "/demo/goodbye.txt"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sha1",
                    "dist",
                    "name",
                    "dateCreated",
                    "headers",
                    "id",
                    "size"
                  ],
                  "properties": {
                    "sha1": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "properties": {
                        "Content-Type": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:22.894Z",
                  "dist": null,
                  "headers": {
                    "Content-Type": "text/plain; encoding=utf-8"
                  },
                  "id": "3",
                  "name": "/demo/goodbye.txt",
                  "sha1": "94d6b21e962a9fc65889617ec1f17a1e2fe11b65",
                  "size": 15
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Releases"
        ],
        "description": "Delete a file for a given release.",
        "operationId": "Delete an Organization Release's File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/files/{file_id}/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "Retrieve a file for a given release.",
        "operationId": "Retrieve a Project Release's File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "description": "The ID of the file to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "If this is set to true, then the response payload will be the raw file contents. Otherwise, the response will be the file metadata as JSON.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sha1",
                    "dist",
                    "name",
                    "dateCreated",
                    "headers",
                    "id",
                    "size"
                  ],
                  "properties": {
                    "sha1": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "properties": {
                        "Content-Type": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:19.150Z",
                  "dist": null,
                  "headers": {
                    "Content-Type": "text/plain; encoding=utf-8"
                  },
                  "id": "1",
                  "name": "/demo/message-for-you.txt",
                  "sha1": "2ef7bde608ce5404e97d5f042f95f89f1c232871",
                  "size": 12
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Releases"
        ],
        "description": "Update a project release file.",
        "operationId": "Update a Project Release File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name (full path) of the file."
                  },
                  "dist": {
                    "type": "string",
                    "description": "The new name of the dist."
                  }
                }
              },
              "example": {
                "name": "/demo/goodbye.txt"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sha1",
                    "dist",
                    "name",
                    "dateCreated",
                    "headers",
                    "id",
                    "size"
                  ],
                  "properties": {
                    "sha1": {
                      "type": "string"
                    },
                    "dist": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "headers": {
                      "type": "object",
                      "properties": {
                        "Content-Type": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "dateCreated": "2018-11-06T21:20:22.894Z",
                  "dist": null,
                  "headers": {
                    "Content-Type": "text/plain; encoding=utf-8"
                  },
                  "id": "3",
                  "name": "/demo/goodbye.txt",
                  "sha1": "94d6b21e962a9fc65889617ec1f17a1e2fe11b65",
                  "size": 15
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Releases"
        ],
        "description": "Delete a file for a given release.",
        "operationId": "Delete a Project Release's File",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the file to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/commits/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "List an organization release's commits.",
        "operationId": "List an Organization Release's Commits",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "dateCreated",
                      "id",
                      "message"
                    ],
                    "properties": {
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "id": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:19:58.536Z",
                    "id": "acbafc639127fd89d10f474520104517ff1d709e",
                    "message": "Initial commit from Create Next App"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/commits/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "List a project release's commits.",
        "operationId": "List a Project Release's Commits",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "dateCreated",
                      "id",
                      "message"
                    ],
                    "properties": {
                      "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "id": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dateCreated": "2018-11-06T21:19:58.536Z",
                    "id": "acbafc639127fd89d10f474520104517ff1d709e",
                    "message": "Initial commit from Create Next App"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/commitfiles/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "Retrieve files changed in a release's commits",
        "operationId": "Retrieve Files Changed in a Release's Commits",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization the release belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      }
    },
    "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/resolved/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "List issues to be resolved in a particular release.",
        "operationId": "List Issues to be Resolved in a Particular Release",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_slug",
            "in": "path",
            "description": "The slug of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/releases/{version}/deploys/": {
      "get": {
        "tags": [
          "Releases"
        ],
        "description": "Return a list of deploys for a given release.",
        "operationId": "List a Release's Deploys",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "environment",
                      "name",
                      "dateStarted",
                      "dateFinished",
                      "url",
                      "id"
                    ],
                    "properties": {
                      "environment": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "dateStarted": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "dateFinished": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "url": {
                        "type": "string",
                        "nullable": true
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "environment": "prod",
                    "name": null,
                    "url": null,
                    "dateStarted": null,
                    "dateFinished": "2020-08-31T19:40:38.651670Z",
                    "id": "1234567"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Releases"
        ],
        "description": "Create a deploy.",
        "operationId": "Create a New Deploy for an Organization",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The slug of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version identifier of the release.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "environment"
                ],
                "properties": {
                  "environment": {
                    "type": "string",
                    "description": "The environment you're deploying to."
                  },
                  "url": {
                    "type": "string",
                    "description": "The optional URL that points to the deploy."
                  },
                  "name": {
                    "type": "string",
                    "description": "The optional name of the deploy."
                  },
                  "projects": {
                    "type": "array",
                    "description": "The optional list of projects to deploy.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "dateStarted": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An optional date that indicates when the deploy started."
                  },
                  "dateFinished": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An optional date that indicates when the deploy ended. If not provided, the current time is used."
                  }
                }
              },
              "example": {
                "environment": "prod"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "environment",
                    "name",
                    "dateStarted",
                    "dateFinished",
                    "url",
                    "id"
                  ],
                  "properties": {
                    "environment": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "dateStarted": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "dateFinished": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "environment": "prod",
                  "name": null,
                  "url": null,
                  "dateStarted": null,
                  "dateFinished": "2020-08-31T19:40:38.651670Z",
                  "id": "1234567"
                }
              }
            }
          },
          "208": {
            "description": "Already Reported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "project:releases"
            ]
          }
        ]
      }
    },
    "/api/0/organizations/{organization_slug}/sentry-app-installations/": {
      "get": {
        "tags": [
          "Integration"
        ],
        "description": "Return a list of integration platform installations for a given organization.",
        "operationId": "List an Organization's Integration Platform Installations",
        "parameters": [
          {
            "name": "organization_slug",
            "in": "path",
            "description": "The organization short name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "app",
                      "organization",
                      "uuid",
                      "status"
                    ],
                    "properties": {
                      "app": {
                        "type": "object",
                        "required": [
                          "uuid",
                          "slug"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        }
                      },
                      "organization": {
                        "type": "object",
                        "required": [
                          "slug"
                        ],
                        "properties": {
                          "slug": {
                            "type": "string"
                          }
                        }
                      },
                      "uuid": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "app": {
                      "uuid": "a9988ad6-meow-4905-bb93-f7cbf4c96bbb",
                      "slug": "cat-75c19a"
                    },
                    "organization": {
                      "slug": "sentry"
                    },
                    "uuid": "01635075-m30w-4f96-8fc8-ff9680780a13",
                    "status": "installed"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "org:read",
              "org:integrations"
            ]
          }
        ]
      }
    },
    "/api/0/sentry-app-installations/{uuid}/external-issues/": {
      "post": {
        "tags": [
          "Integration"
        ],
        "description": "Create an external issue from an integration platform integration.",
        "operationId": "Create an External Issue",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the integration platform integration.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "issueId",
                  "webUrl",
                  "project",
                  "identifier"
                ],
                "type": "object",
                "properties": {
                  "issueId": {
                    "type": "integer",
                    "description": "The ID of the Sentry issue to link the external issue to."
                  },
                  "webUrl": {
                    "type": "string",
                    "description": "The URL of the external service to link the issue to."
                  },
                  "project": {
                    "type": "string",
                    "description": "The external service's project."
                  },
                  "identifier": {
                    "type": "string",
                    "description": "A unique identifier of the external issue."
                  }
                }
              },
              "example": {
                "issueId": 1,
                "webUrl": "https://somerandom.io/project/issue-id",
                "project": "ExternalProj",
                "identifier": "issue-1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "issueId",
                    "serviceType",
                    "displayName",
                    "webUrl"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "issueId": {
                      "type": "string"
                    },
                    "serviceType": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "webUrl": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "id": "1",
                  "issueId": "1",
                  "serviceType": "testing",
                  "displayName": "ExternalProj#issue-1",
                  "webUrl": "https://somerandom.io/project/issue-id"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:write"
            ]
          }
        ]
      }
    },
    "/api/0/sentry-app-installations/{uuid}/external-issues/{external_issue_id}/": {
      "delete": {
        "tags": [
          "Integration"
        ],
        "description": "Delete an external issue.",
        "operationId": "Delete an External Issue",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the integration platform integration.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_issue_id",
            "in": "path",
            "description": "The id of the external issue.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "External issue not found"
          }
        },
        "security": [
          {
            "auth_token": [
              "event:admin"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BaseTeam": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "isMember": {
            "type": "boolean"
          },
          "teamRole": {
            "type": "string",
            "nullable": true
          },
          "flags": {
            "type": "object",
            "additionalProperties": {}
          },
          "access": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAccess": {
            "type": "boolean"
          },
          "isPending": {
            "type": "boolean"
          },
          "memberCount": {
            "type": "integer"
          },
          "avatar": {
            "type": "object",
            "properties": {
              "avatarType": {
                "type": "string"
              },
              "avatarUuid": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "avatarType",
              "avatarUuid"
            ]
          }
        },
        "required": [
          "access",
          "avatar",
          "dateCreated",
          "flags",
          "hasAccess",
          "id",
          "isMember",
          "isPending",
          "memberCount",
          "name",
          "slug",
          "teamRole"
        ]
      },
      "CheckInList": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "groups": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "environment": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "duration": {
              "type": "integer"
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "attachmentId": {
              "type": "string"
            },
            "expectedTime": {
              "type": "string",
              "format": "date-time"
            },
            "monitorConfig": {}
          },
          "required": [
            "attachmentId",
            "dateCreated",
            "duration",
            "environment",
            "expectedTime",
            "id",
            "monitorConfig",
            "status"
          ]
        }
      },
      "ConfigValidator": {
        "type": "object",
        "properties": {
          "schedule_type": {
            "enum": [
              "crontab",
              "interval"
            ],
            "type": "string",
            "description": "Currently supports \"crontab\" or \"interval\"\n\n* `crontab` - crontab\n* `interval` - interval"
          },
          "schedule": {
            "description": "Varies depending on the schedule_type. Is either a crontab string, or a 2 element tuple for intervals (e.g. [1, 'day'])"
          },
          "checkin_margin": {
            "type": "integer",
            "minimum": 0,
            "nullable": true,
            "description": "How long (in minutes) after the expected checkin time will we wait until we consider the checkin to have been missed."
          },
          "max_runtime": {
            "type": "integer",
            "maximum": 40320,
            "minimum": 1,
            "nullable": true,
            "description": "How long (in minutes) is the checkin allowed to run for in CheckInStatus.IN_PROGRESS before it is considered failed."
          },
          "timezone": {
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmara",
              "Africa/Asmera",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Timbuktu",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/Buenos_Aires",
              "America/Argentina/Catamarca",
              "America/Argentina/ComodRivadavia",
              "America/Argentina/Cordoba",
              "America/Argentina/Jujuy",
              "America/Argentina/La_Rioja",
              "America/Argentina/Mendoza",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Atikokan",
              "America/Atka",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Buenos_Aires",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Catamarca",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Coral_Harbour",
              "America/Cordoba",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Ensenada",
              "America/Fort_Nelson",
              "America/Fort_Wayne",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Godthab",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Indianapolis",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Indianapolis",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Jujuy",
              "America/Juneau",
              "America/Kentucky/Louisville",
              "America/Kentucky/Monticello",
              "America/Knox_IN",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Louisville",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Mendoza",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montreal",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nipigon",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Ojinaga",
              "America/Panama",
              "America/Pangnirtung",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Acre",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rainy_River",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Rosario",
              "America/Santa_Isabel",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Shiprock",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Thunder_Bay",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Virgin",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "America/Yellowknife",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/South_Pole",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Ashkhabad",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Calcutta",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Chongqing",
              "Asia/Chungking",
              "Asia/Colombo",
              "Asia/Dacca",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Harbin",
              "Asia/Hebron",
              "Asia/Ho_Chi_Minh",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Istanbul",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Kashgar",
              "Asia/Kathmandu",
              "Asia/Katmandu",
              "Asia/Khandyga",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macao",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Nicosia",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Saigon",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tel_Aviv",
              "Asia/Thimbu",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ujung_Pandang",
              "Asia/Ulaanbaatar",
              "Asia/Ulan_Bator",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yangon",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faeroe",
              "Atlantic/Faroe",
              "Atlantic/Jan_Mayen",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/ACT",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Canberra",
              "Australia/Currie",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/LHI",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/NSW",
              "Australia/North",
              "Australia/Perth",
              "Australia/Queensland",
              "Australia/South",
              "Australia/Sydney",
              "Australia/Tasmania",
              "Australia/Victoria",
              "Australia/West",
              "Australia/Yancowinna",
              "Brazil/Acre",
              "Brazil/DeNoronha",
              "Brazil/East",
              "Brazil/West",
              "CET",
              "CST6CDT",
              "Canada/Atlantic",
              "Canada/Central",
              "Canada/Eastern",
              "Canada/Mountain",
              "Canada/Newfoundland",
              "Canada/Pacific",
              "Canada/Saskatchewan",
              "Canada/Yukon",
              "Chile/Continental",
              "Chile/EasterIsland",
              "Cuba",
              "EET",
              "EST",
              "EST5EDT",
              "Egypt",
              "Eire",
              "Etc/GMT",
              "Etc/GMT+0",
              "Etc/GMT+1",
              "Etc/GMT+10",
              "Etc/GMT+11",
              "Etc/GMT+12",
              "Etc/GMT+2",
              "Etc/GMT+3",
              "Etc/GMT+4",
              "Etc/GMT+5",
              "Etc/GMT+6",
              "Etc/GMT+7",
              "Etc/GMT+8",
              "Etc/GMT+9",
              "Etc/GMT-0",
              "Etc/GMT-1",
              "Etc/GMT-10",
              "Etc/GMT-11",
              "Etc/GMT-12",
              "Etc/GMT-13",
              "Etc/GMT-14",
              "Etc/GMT-2",
              "Etc/GMT-3",
              "Etc/GMT-4",
              "Etc/GMT-5",
              "Etc/GMT-6",
              "Etc/GMT-7",
              "Etc/GMT-8",
              "Etc/GMT-9",
              "Etc/GMT0",
              "Etc/Greenwich",
              "Etc/UCT",
              "Etc/UTC",
              "Etc/Universal",
              "Etc/Zulu",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belfast",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Kirov",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Nicosia",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Tiraspol",
              "Europe/Ulyanovsk",
              "Europe/Uzhgorod",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zaporozhye",
              "Europe/Zurich",
              "GB",
              "GB-Eire",
              "GMT",
              "GMT+0",
              "GMT-0",
              "GMT0",
              "Greenwich",
              "HST",
              "Hongkong",
              "Iceland",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "Iran",
              "Israel",
              "Jamaica",
              "Japan",
              "Kwajalein",
              "Libya",
              "MET",
              "MST",
              "MST7MDT",
              "Mexico/BajaNorte",
              "Mexico/BajaSur",
              "Mexico/General",
              "NZ",
              "NZ-CHAT",
              "Navajo",
              "PRC",
              "PST8PDT",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Chuuk",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Enderbury",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Johnston",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Pohnpei",
              "Pacific/Ponape",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Samoa",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Truk",
              "Pacific/Wake",
              "Pacific/Wallis",
              "Pacific/Yap",
              "Poland",
              "Portugal",
              "ROC",
              "ROK",
              "Singapore",
              "Turkey",
              "UCT",
              "US/Alaska",
              "US/Aleutian",
              "US/Arizona",
              "US/Central",
              "US/East-Indiana",
              "US/Eastern",
              "US/Hawaii",
              "US/Indiana-Starke",
              "US/Michigan",
              "US/Mountain",
              "US/Pacific",
              "US/Samoa",
              "UTC",
              "Universal",
              "W-SU",
              "WET",
              "Zulu"
            ],
            "type": "string",
            "description": "tz database style timezone string\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"
          },
          "failure_issue_threshold": {
            "type": "integer",
            "minimum": 1,
            "nullable": true,
            "description": "How many consecutive missed or failed check-ins in a row before creating a new issue."
          },
          "recovery_threshold": {
            "type": "integer",
            "minimum": 1,
            "nullable": true,
            "description": "How many successful check-ins in a row before resolving an issue."
          }
        },
        "required": [
          "schedule"
        ]
      },
      "ContextsValidator": {
        "type": "object",
        "properties": {
          "trace": {
            "type": "object",
            "properties": {
              "trace_id": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "trace_id"
            ]
          }
        }
      },
      "DetailedProject": {
        "type": "object",
        "properties": {
          "stats": {},
          "transactionStats": {},
          "sessionStats": {},
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "platform": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "isBookmarked": {
            "type": "boolean"
          },
          "isMember": {
            "type": "boolean"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstEvent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstTransactionEvent": {
            "type": "boolean"
          },
          "access": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAccess": {
            "type": "boolean"
          },
          "hasMinifiedStackTrace": {
            "type": "boolean"
          },
          "hasMonitors": {
            "type": "boolean"
          },
          "hasProfiles": {
            "type": "boolean"
          },
          "hasReplays": {
            "type": "boolean"
          },
          "hasSessions": {
            "type": "boolean"
          },
          "isInternal": {
            "type": "boolean"
          },
          "isPublic": {
            "type": "boolean"
          },
          "avatar": {
            "type": "object",
            "properties": {
              "avatarType": {
                "type": "string"
              },
              "avatarUuid": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "avatarType",
              "avatarUuid"
            ]
          },
          "color": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "team": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "slug"
            ]
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "slug"
              ]
            }
          },
          "latestRelease": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              }
            },
            "required": [
              "version"
            ],
            "nullable": true
          },
          "options": {
            "type": "object",
            "additionalProperties": {}
          },
          "digestsMinDelay": {
            "type": "integer"
          },
          "digestsMaxDelay": {
            "type": "integer"
          },
          "subjectPrefix": {
            "type": "string"
          },
          "allowedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resolveAge": {
            "type": "integer"
          },
          "dataScrubber": {
            "type": "boolean"
          },
          "dataScrubberDefaults": {
            "type": "boolean"
          },
          "safeFields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "storeCrashReports": {
            "type": "integer",
            "nullable": true
          },
          "sensitiveFields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subjectTemplate": {
            "type": "string"
          },
          "securityToken": {
            "type": "string"
          },
          "securityTokenHeader": {
            "type": "string",
            "nullable": true
          },
          "verifySSL": {
            "type": "boolean"
          },
          "scrubIPAddresses": {
            "type": "boolean"
          },
          "scrapeJavaScript": {
            "type": "boolean"
          },
          "groupingConfig": {
            "type": "string"
          },
          "groupingEnhancements": {
            "type": "string"
          },
          "groupingEnhancementsBase": {
            "type": "string",
            "nullable": true
          },
          "secondaryGroupingExpiry": {
            "type": "integer"
          },
          "secondaryGroupingConfig": {
            "type": "string",
            "nullable": true
          },
          "groupingAutoUpdate": {
            "type": "boolean"
          },
          "fingerprintingRules": {
            "type": "string"
          },
          "organization": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "status": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "name": {
                "type": "string"
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time"
              },
              "isEarlyAdopter": {
                "type": "boolean"
              },
              "require2FA": {
                "type": "boolean"
              },
              "requireEmailVerification": {
                "type": "boolean"
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "avatarType": {
                    "type": "string"
                  },
                  "avatarUuid": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "avatarType",
                  "avatarUuid"
                ]
              },
              "features": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "organizationUrl": {
                    "type": "string"
                  },
                  "regionUrl": {
                    "type": "string"
                  }
                },
                "required": [
                  "organizationUrl",
                  "regionUrl"
                ]
              },
              "hasAuthProvider": {
                "type": "boolean"
              }
            },
            "required": [
              "avatar",
              "dateCreated",
              "features",
              "hasAuthProvider",
              "id",
              "isEarlyAdopter",
              "links",
              "name",
              "require2FA",
              "requireEmailVerification",
              "slug",
              "status"
            ]
          },
          "plugins": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "shortName": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "canDisable": {
                  "type": "boolean"
                },
                "isTestable": {
                  "type": "boolean"
                },
                "hasConfiguration": {
                  "type": "boolean"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "contexts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "status": {
                  "type": "string"
                },
                "assets": {
                  "type": "array",
                  "items": {}
                },
                "doc": {
                  "type": "string"
                },
                "firstPartyAlternative": {},
                "deprecationDate": {},
                "altIsSentryApp": {},
                "enabled": {
                  "type": "boolean"
                },
                "version": {
                  "type": "string"
                },
                "author": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "isDeprecated": {
                  "type": "boolean"
                },
                "isHidden": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "features": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "featureDescriptions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "resourceLinks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "altIsSentryApp",
                "assets",
                "author",
                "canDisable",
                "contexts",
                "deprecationDate",
                "description",
                "doc",
                "enabled",
                "featureDescriptions",
                "features",
                "firstPartyAlternative",
                "hasConfiguration",
                "id",
                "isDeprecated",
                "isHidden",
                "isTestable",
                "metadata",
                "name",
                "resourceLinks",
                "shortName",
                "slug",
                "status",
                "type",
                "version"
              ]
            }
          },
          "platforms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processingIssues": {
            "type": "integer"
          },
          "defaultEnvironment": {
            "type": "string",
            "nullable": true
          },
          "relayPiiConfig": {
            "type": "string",
            "nullable": true
          },
          "builtinSymbolSources": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dynamicSamplingBiases": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          },
          "eventProcessing": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "symbolSources": {
            "type": "string"
          }
        },
        "required": [
          "access",
          "allowedDomains",
          "avatar",
          "builtinSymbolSources",
          "color",
          "dataScrubber",
          "dataScrubberDefaults",
          "dateCreated",
          "defaultEnvironment",
          "digestsMaxDelay",
          "digestsMinDelay",
          "dynamicSamplingBiases",
          "eventProcessing",
          "features",
          "fingerprintingRules",
          "firstEvent",
          "firstTransactionEvent",
          "groupingAutoUpdate",
          "groupingConfig",
          "groupingEnhancements",
          "groupingEnhancementsBase",
          "hasAccess",
          "hasMinifiedStackTrace",
          "hasMonitors",
          "hasProfiles",
          "hasReplays",
          "hasSessions",
          "id",
          "isBookmarked",
          "isInternal",
          "isMember",
          "isPublic",
          "latestRelease",
          "name",
          "options",
          "organization",
          "platform",
          "platforms",
          "plugins",
          "processingIssues",
          "relayPiiConfig",
          "resolveAge",
          "safeFields",
          "scrapeJavaScript",
          "scrubIPAddresses",
          "secondaryGroupingConfig",
          "secondaryGroupingExpiry",
          "securityToken",
          "securityTokenHeader",
          "sensitiveFields",
          "slug",
          "status",
          "storeCrashReports",
          "subjectPrefix",
          "subjectTemplate",
          "symbolSources",
          "team",
          "teams",
          "verifySSL"
        ]
      },
      "DynamicSDKLoaderOptions": {
        "type": "object",
        "properties": {
          "hasReplay": {
            "type": "boolean"
          },
          "hasPerformance": {
            "type": "boolean"
          },
          "hasDebug": {
            "type": "boolean"
          }
        }
      },
      "DynamicSamplingBias": {
        "type": "object",
        "properties": {
          "id": {
            "enum": [
              "boostEnvironments",
              "boostKeyTransactions",
              "boostLatestRelease",
              "boostLowVolumeTransactions",
              "boostReplayId",
              "ignoreHealthChecks",
              "recalibrationRule"
            ],
            "type": "string",
            "description": "* `boostEnvironments` - boostEnvironments\n* `boostKeyTransactions` - boostKeyTransactions\n* `boostLatestRelease` - boostLatestRelease\n* `boostLowVolumeTransactions` - boostLowVolumeTransactions\n* `boostReplayId` - boostReplayId\n* `ignoreHealthChecks` - ignoreHealthChecks\n* `recalibrationRule` - recalibrationRule"
          },
          "active": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "id"
        ]
      },
      "DynamicSdkLoaderOption": {
        "type": "object",
        "properties": {
          "hasReplay": {
            "type": "boolean"
          },
          "hasPerformance": {
            "type": "boolean"
          },
          "hasDebug": {
            "type": "boolean"
          }
        }
      },
      "FilterPut": {
        "type": "object",
        "properties": {
          "active": {
            "type": "string"
          },
          "subfilters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "subfilters"
        ]
      },
      "ListClientKeysResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "This represents a Sentry Project Client Key.",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "public": {
              "type": "string",
              "nullable": true
            },
            "secret": {
              "type": "string",
              "nullable": true
            },
            "projectId": {
              "type": "integer"
            },
            "isActive": {
              "type": "boolean"
            },
            "rateLimit": {
              "type": "object",
              "properties": {
                "window": {
                  "type": "integer"
                },
                "count": {
                  "type": "integer"
                }
              },
              "required": [
                "count",
                "window"
              ],
              "nullable": true
            },
            "dsn": {
              "type": "object",
              "properties": {
                "secret": {
                  "type": "string"
                },
                "public": {
                  "type": "string"
                },
                "csp": {
                  "type": "string"
                },
                "security": {
                  "type": "string"
                },
                "minidump": {
                  "type": "string"
                },
                "unreal": {
                  "type": "string"
                },
                "cdn": {
                  "type": "string"
                }
              },
              "required": [
                "cdn",
                "csp",
                "minidump",
                "public",
                "secret",
                "security",
                "unreal"
              ]
            },
            "browserSdkVersion": {
              "type": "string"
            },
            "browserSdk": {
              "type": "object",
              "properties": {
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "choices"
              ]
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "dynamicSdkLoaderOptions": {
              "type": "object",
              "properties": {
                "hasReplay": {
                  "type": "boolean"
                },
                "hasPerformance": {
                  "type": "boolean"
                },
                "hasDebug": {
                  "type": "boolean"
                }
              },
              "required": [
                "hasDebug",
                "hasPerformance",
                "hasReplay"
              ]
            }
          },
          "required": [
            "browserSdk",
            "browserSdkVersion",
            "dateCreated",
            "dsn",
            "dynamicSdkLoaderOptions",
            "id",
            "isActive",
            "label",
            "name",
            "projectId",
            "public",
            "rateLimit",
            "secret"
          ]
        }
      },
      "ListOrgTeamResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "slug": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "isMember": {
              "type": "boolean"
            },
            "teamRole": {
              "type": "string",
              "nullable": true
            },
            "flags": {
              "type": "object",
              "additionalProperties": {}
            },
            "access": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "hasAccess": {
              "type": "boolean"
            },
            "isPending": {
              "type": "boolean"
            },
            "memberCount": {
              "type": "integer"
            },
            "avatar": {
              "type": "object",
              "properties": {
                "avatarType": {
                  "type": "string"
                },
                "avatarUuid": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "avatarType",
                "avatarUuid"
              ]
            },
            "externalTeams": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  },
                  "teamId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  },
                  "externalName": {
                    "type": "string"
                  },
                  "integrationId": {
                    "type": "string"
                  }
                },
                "required": [
                  "externalName",
                  "id",
                  "integrationId",
                  "provider"
                ]
              }
            },
            "organization": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                },
                "name": {
                  "type": "string"
                },
                "dateCreated": {
                  "type": "string",
                  "format": "date-time"
                },
                "isEarlyAdopter": {
                  "type": "boolean"
                },
                "require2FA": {
                  "type": "boolean"
                },
                "requireEmailVerification": {
                  "type": "boolean"
                },
                "avatar": {
                  "type": "object",
                  "properties": {
                    "avatarType": {
                      "type": "string"
                    },
                    "avatarUuid": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "avatarType",
                    "avatarUuid"
                  ]
                },
                "features": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "organizationUrl": {
                      "type": "string"
                    },
                    "regionUrl": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "organizationUrl",
                    "regionUrl"
                  ]
                },
                "hasAuthProvider": {
                  "type": "boolean"
                }
              },
              "required": [
                "avatar",
                "dateCreated",
                "features",
                "hasAuthProvider",
                "id",
                "isEarlyAdopter",
                "links",
                "name",
                "require2FA",
                "requireEmailVerification",
                "slug",
                "status"
              ]
            },
            "projects": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "stats": {},
                  "transactionStats": {},
                  "sessionStats": {},
                  "id": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "platform": {
                    "type": "string",
                    "nullable": true
                  },
                  "dateCreated": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isBookmarked": {
                    "type": "boolean"
                  },
                  "isMember": {
                    "type": "boolean"
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "firstEvent": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "firstTransactionEvent": {
                    "type": "boolean"
                  },
                  "access": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hasAccess": {
                    "type": "boolean"
                  },
                  "hasMinifiedStackTrace": {
                    "type": "boolean"
                  },
                  "hasMonitors": {
                    "type": "boolean"
                  },
                  "hasProfiles": {
                    "type": "boolean"
                  },
                  "hasReplays": {
                    "type": "boolean"
                  },
                  "hasSessions": {
                    "type": "boolean"
                  },
                  "isInternal": {
                    "type": "boolean"
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "avatar": {
                    "type": "object",
                    "properties": {
                      "avatarType": {
                        "type": "string"
                      },
                      "avatarUuid": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "avatarType",
                      "avatarUuid"
                    ]
                  },
                  "color": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "required": [
                  "access",
                  "avatar",
                  "color",
                  "dateCreated",
                  "features",
                  "firstEvent",
                  "firstTransactionEvent",
                  "hasAccess",
                  "hasMinifiedStackTrace",
                  "hasMonitors",
                  "hasProfiles",
                  "hasReplays",
                  "hasSessions",
                  "id",
                  "isBookmarked",
                  "isInternal",
                  "isMember",
                  "isPublic",
                  "name",
                  "platform",
                  "slug",
                  "status"
                ]
              }
            },
            "orgRole": {
              "type": "string",
              "nullable": true
            }
          },
          "required": [
            "access",
            "avatar",
            "dateCreated",
            "flags",
            "hasAccess",
            "id",
            "isMember",
            "isPending",
            "memberCount",
            "name",
            "slug",
            "teamRole"
          ]
        }
      },
      "ListTeamProjectResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "latestDeploys": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "nullable": true
            },
            "stats": {},
            "transactionStats": {},
            "sessionStats": {},
            "id": {
              "type": "string"
            },
            "slug": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "platform": {
              "type": "string",
              "nullable": true
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "isBookmarked": {
              "type": "boolean"
            },
            "isMember": {
              "type": "boolean"
            },
            "features": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "firstEvent": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "firstTransactionEvent": {
              "type": "boolean"
            },
            "access": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "hasAccess": {
              "type": "boolean"
            },
            "hasMinifiedStackTrace": {
              "type": "boolean"
            },
            "hasMonitors": {
              "type": "boolean"
            },
            "hasProfiles": {
              "type": "boolean"
            },
            "hasReplays": {
              "type": "boolean"
            },
            "hasSessions": {
              "type": "boolean"
            },
            "team": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "slug"
              ],
              "nullable": true
            },
            "teams": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "slug"
                ]
              }
            },
            "eventProcessing": {
              "type": "object",
              "properties": {
                "symbolicationDegraded": {
                  "type": "boolean"
                }
              },
              "required": [
                "symbolicationDegraded"
              ]
            },
            "platforms": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "hasUserReports": {
              "type": "boolean"
            },
            "environments": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "latestRelease": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string"
                }
              },
              "required": [
                "version"
              ],
              "nullable": true
            }
          },
          "required": [
            "access",
            "dateCreated",
            "environments",
            "eventProcessing",
            "features",
            "firstEvent",
            "firstTransactionEvent",
            "hasAccess",
            "hasMinifiedStackTrace",
            "hasMonitors",
            "hasProfiles",
            "hasReplays",
            "hasSessions",
            "hasUserReports",
            "id",
            "isBookmarked",
            "isMember",
            "latestRelease",
            "name",
            "platform",
            "platforms",
            "slug",
            "team",
            "teams"
          ]
        }
      },
      "Monitor": {
        "type": "object",
        "properties": {
          "alertRule": {},
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "config": {},
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "project": {
            "type": "object",
            "properties": {
              "stats": {},
              "transactionStats": {},
              "sessionStats": {},
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "platform": {
                "type": "string",
                "nullable": true
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time"
              },
              "isBookmarked": {
                "type": "boolean"
              },
              "isMember": {
                "type": "boolean"
              },
              "features": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "firstEvent": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "firstTransactionEvent": {
                "type": "boolean"
              },
              "access": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "hasAccess": {
                "type": "boolean"
              },
              "hasMinifiedStackTrace": {
                "type": "boolean"
              },
              "hasMonitors": {
                "type": "boolean"
              },
              "hasProfiles": {
                "type": "boolean"
              },
              "hasReplays": {
                "type": "boolean"
              },
              "hasSessions": {
                "type": "boolean"
              },
              "isInternal": {
                "type": "boolean"
              },
              "isPublic": {
                "type": "boolean"
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "avatarType": {
                    "type": "string"
                  },
                  "avatarUuid": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "avatarType",
                  "avatarUuid"
                ]
              },
              "color": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "required": [
              "access",
              "avatar",
              "color",
              "dateCreated",
              "features",
              "firstEvent",
              "firstTransactionEvent",
              "hasAccess",
              "hasMinifiedStackTrace",
              "hasMonitors",
              "hasProfiles",
              "hasReplays",
              "hasSessions",
              "id",
              "isBookmarked",
              "isInternal",
              "isMember",
              "isPublic",
              "name",
              "platform",
              "slug",
              "status"
            ]
          },
          "environments": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time"
              },
              "lastCheckIn": {
                "type": "string",
                "format": "date-time"
              },
              "nextCheckIn": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "dateCreated",
              "lastCheckIn",
              "name",
              "nextCheckIn",
              "status"
            ]
          }
        },
        "required": [
          "config",
          "dateCreated",
          "environments",
          "id",
          "name",
          "project",
          "slug",
          "status",
          "type"
        ]
      },
      "MonitorAlertRuleTargetValidator": {
        "type": "object",
        "properties": {
          "target_identifier": {
            "type": "integer",
            "description": "ID of target object"
          },
          "target_type": {
            "type": "string",
            "description": "One of [Member, Team]"
          }
        },
        "required": [
          "target_identifier",
          "target_type"
        ]
      },
      "MonitorAlertRuleValidator": {
        "type": "object",
        "properties": {
          "environment": {
            "type": "string",
            "nullable": true,
            "description": "Name of the environment",
            "maxLength": 64
          },
          "targets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "target_identifier": {
                  "type": "integer",
                  "description": "ID of target object"
                },
                "target_type": {
                  "type": "string",
                  "description": "One of [Member, Team]"
                }
              },
              "required": [
                "target_identifier",
                "target_type"
              ]
            },
            "description": "Array of dictionaries with information of the user or team to be notified"
          }
        },
        "required": [
          "targets"
        ]
      },
      "MonitorCheckIn": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "attachmentId": {
            "type": "string"
          },
          "expectedTime": {
            "type": "string",
            "format": "date-time"
          },
          "monitorConfig": {}
        },
        "required": [
          "attachmentId",
          "dateCreated",
          "duration",
          "environment",
          "expectedTime",
          "id",
          "monitorConfig",
          "status"
        ]
      },
      "MonitorCheckInValidator": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "ok",
              "error",
              "in_progress"
            ],
            "type": "string",
            "description": "* `ok` - 1\n* `error` - 2\n* `in_progress` - 3"
          },
          "duration": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          },
          "monitor_config": {
            "type": "object",
            "properties": {
              "schedule_type": {
                "enum": [
                  "crontab",
                  "interval"
                ],
                "type": "string",
                "description": "Currently supports \"crontab\" or \"interval\"\n\n* `crontab` - crontab\n* `interval` - interval"
              },
              "schedule": {
                "description": "Varies depending on the schedule_type. Is either a crontab string, or a 2 element tuple for intervals (e.g. [1, 'day'])"
              },
              "checkin_margin": {
                "type": "integer",
                "minimum": 0,
                "nullable": true,
                "description": "How long (in minutes) after the expected checkin time will we wait until we consider the checkin to have been missed."
              },
              "max_runtime": {
                "type": "integer",
                "maximum": 40320,
                "minimum": 1,
                "nullable": true,
                "description": "How long (in minutes) is the checkin allowed to run for in CheckInStatus.IN_PROGRESS before it is considered failed."
              },
              "timezone": {
                "enum": [
                  "Africa/Abidjan",
                  "Africa/Accra",
                  "Africa/Addis_Ababa",
                  "Africa/Algiers",
                  "Africa/Asmara",
                  "Africa/Asmera",
                  "Africa/Bamako",
                  "Africa/Bangui",
                  "Africa/Banjul",
                  "Africa/Bissau",
                  "Africa/Blantyre",
                  "Africa/Brazzaville",
                  "Africa/Bujumbura",
                  "Africa/Cairo",
                  "Africa/Casablanca",
                  "Africa/Ceuta",
                  "Africa/Conakry",
                  "Africa/Dakar",
                  "Africa/Dar_es_Salaam",
                  "Africa/Djibouti",
                  "Africa/Douala",
                  "Africa/El_Aaiun",
                  "Africa/Freetown",
                  "Africa/Gaborone",
                  "Africa/Harare",
                  "Africa/Johannesburg",
                  "Africa/Juba",
                  "Africa/Kampala",
                  "Africa/Khartoum",
                  "Africa/Kigali",
                  "Africa/Kinshasa",
                  "Africa/Lagos",
                  "Africa/Libreville",
                  "Africa/Lome",
                  "Africa/Luanda",
                  "Africa/Lubumbashi",
                  "Africa/Lusaka",
                  "Africa/Malabo",
                  "Africa/Maputo",
                  "Africa/Maseru",
                  "Africa/Mbabane",
                  "Africa/Mogadishu",
                  "Africa/Monrovia",
                  "Africa/Nairobi",
                  "Africa/Ndjamena",
                  "Africa/Niamey",
                  "Africa/Nouakchott",
                  "Africa/Ouagadougou",
                  "Africa/Porto-Novo",
                  "Africa/Sao_Tome",
                  "Africa/Timbuktu",
                  "Africa/Tripoli",
                  "Africa/Tunis",
                  "Africa/Windhoek",
                  "America/Adak",
                  "America/Anchorage",
                  "America/Anguilla",
                  "America/Antigua",
                  "America/Araguaina",
                  "America/Argentina/Buenos_Aires",
                  "America/Argentina/Catamarca",
                  "America/Argentina/ComodRivadavia",
                  "America/Argentina/Cordoba",
                  "America/Argentina/Jujuy",
                  "America/Argentina/La_Rioja",
                  "America/Argentina/Mendoza",
                  "America/Argentina/Rio_Gallegos",
                  "America/Argentina/Salta",
                  "America/Argentina/San_Juan",
                  "America/Argentina/San_Luis",
                  "America/Argentina/Tucuman",
                  "America/Argentina/Ushuaia",
                  "America/Aruba",
                  "America/Asuncion",
                  "America/Atikokan",
                  "America/Atka",
                  "America/Bahia",
                  "America/Bahia_Banderas",
                  "America/Barbados",
                  "America/Belem",
                  "America/Belize",
                  "America/Blanc-Sablon",
                  "America/Boa_Vista",
                  "America/Bogota",
                  "America/Boise",
                  "America/Buenos_Aires",
                  "America/Cambridge_Bay",
                  "America/Campo_Grande",
                  "America/Cancun",
                  "America/Caracas",
                  "America/Catamarca",
                  "America/Cayenne",
                  "America/Cayman",
                  "America/Chicago",
                  "America/Chihuahua",
                  "America/Coral_Harbour",
                  "America/Cordoba",
                  "America/Costa_Rica",
                  "America/Creston",
                  "America/Cuiaba",
                  "America/Curacao",
                  "America/Danmarkshavn",
                  "America/Dawson",
                  "America/Dawson_Creek",
                  "America/Denver",
                  "America/Detroit",
                  "America/Dominica",
                  "America/Edmonton",
                  "America/Eirunepe",
                  "America/El_Salvador",
                  "America/Ensenada",
                  "America/Fort_Nelson",
                  "America/Fort_Wayne",
                  "America/Fortaleza",
                  "America/Glace_Bay",
                  "America/Godthab",
                  "America/Goose_Bay",
                  "America/Grand_Turk",
                  "America/Grenada",
                  "America/Guadeloupe",
                  "America/Guatemala",
                  "America/Guayaquil",
                  "America/Guyana",
                  "America/Halifax",
                  "America/Havana",
                  "America/Hermosillo",
                  "America/Indiana/Indianapolis",
                  "America/Indiana/Knox",
                  "America/Indiana/Marengo",
                  "America/Indiana/Petersburg",
                  "America/Indiana/Tell_City",
                  "America/Indiana/Vevay",
                  "America/Indiana/Vincennes",
                  "America/Indiana/Winamac",
                  "America/Indianapolis",
                  "America/Inuvik",
                  "America/Iqaluit",
                  "America/Jamaica",
                  "America/Jujuy",
                  "America/Juneau",
                  "America/Kentucky/Louisville",
                  "America/Kentucky/Monticello",
                  "America/Knox_IN",
                  "America/Kralendijk",
                  "America/La_Paz",
                  "America/Lima",
                  "America/Los_Angeles",
                  "America/Louisville",
                  "America/Lower_Princes",
                  "America/Maceio",
                  "America/Managua",
                  "America/Manaus",
                  "America/Marigot",
                  "America/Martinique",
                  "America/Matamoros",
                  "America/Mazatlan",
                  "America/Mendoza",
                  "America/Menominee",
                  "America/Merida",
                  "America/Metlakatla",
                  "America/Mexico_City",
                  "America/Miquelon",
                  "America/Moncton",
                  "America/Monterrey",
                  "America/Montevideo",
                  "America/Montreal",
                  "America/Montserrat",
                  "America/Nassau",
                  "America/New_York",
                  "America/Nipigon",
                  "America/Nome",
                  "America/Noronha",
                  "America/North_Dakota/Beulah",
                  "America/North_Dakota/Center",
                  "America/North_Dakota/New_Salem",
                  "America/Ojinaga",
                  "America/Panama",
                  "America/Pangnirtung",
                  "America/Paramaribo",
                  "America/Phoenix",
                  "America/Port-au-Prince",
                  "America/Port_of_Spain",
                  "America/Porto_Acre",
                  "America/Porto_Velho",
                  "America/Puerto_Rico",
                  "America/Punta_Arenas",
                  "America/Rainy_River",
                  "America/Rankin_Inlet",
                  "America/Recife",
                  "America/Regina",
                  "America/Resolute",
                  "America/Rio_Branco",
                  "America/Rosario",
                  "America/Santa_Isabel",
                  "America/Santarem",
                  "America/Santiago",
                  "America/Santo_Domingo",
                  "America/Sao_Paulo",
                  "America/Scoresbysund",
                  "America/Shiprock",
                  "America/Sitka",
                  "America/St_Barthelemy",
                  "America/St_Johns",
                  "America/St_Kitts",
                  "America/St_Lucia",
                  "America/St_Thomas",
                  "America/St_Vincent",
                  "America/Swift_Current",
                  "America/Tegucigalpa",
                  "America/Thule",
                  "America/Thunder_Bay",
                  "America/Tijuana",
                  "America/Toronto",
                  "America/Tortola",
                  "America/Vancouver",
                  "America/Virgin",
                  "America/Whitehorse",
                  "America/Winnipeg",
                  "America/Yakutat",
                  "America/Yellowknife",
                  "Antarctica/Casey",
                  "Antarctica/Davis",
                  "Antarctica/DumontDUrville",
                  "Antarctica/Macquarie",
                  "Antarctica/Mawson",
                  "Antarctica/McMurdo",
                  "Antarctica/Palmer",
                  "Antarctica/Rothera",
                  "Antarctica/South_Pole",
                  "Antarctica/Syowa",
                  "Antarctica/Troll",
                  "Antarctica/Vostok",
                  "Arctic/Longyearbyen",
                  "Asia/Aden",
                  "Asia/Almaty",
                  "Asia/Amman",
                  "Asia/Anadyr",
                  "Asia/Aqtau",
                  "Asia/Aqtobe",
                  "Asia/Ashgabat",
                  "Asia/Ashkhabad",
                  "Asia/Atyrau",
                  "Asia/Baghdad",
                  "Asia/Bahrain",
                  "Asia/Baku",
                  "Asia/Bangkok",
                  "Asia/Barnaul",
                  "Asia/Beirut",
                  "Asia/Bishkek",
                  "Asia/Brunei",
                  "Asia/Calcutta",
                  "Asia/Chita",
                  "Asia/Choibalsan",
                  "Asia/Chongqing",
                  "Asia/Chungking",
                  "Asia/Colombo",
                  "Asia/Dacca",
                  "Asia/Damascus",
                  "Asia/Dhaka",
                  "Asia/Dili",
                  "Asia/Dubai",
                  "Asia/Dushanbe",
                  "Asia/Famagusta",
                  "Asia/Gaza",
                  "Asia/Harbin",
                  "Asia/Hebron",
                  "Asia/Ho_Chi_Minh",
                  "Asia/Hong_Kong",
                  "Asia/Hovd",
                  "Asia/Irkutsk",
                  "Asia/Istanbul",
                  "Asia/Jakarta",
                  "Asia/Jayapura",
                  "Asia/Jerusalem",
                  "Asia/Kabul",
                  "Asia/Kamchatka",
                  "Asia/Karachi",
                  "Asia/Kashgar",
                  "Asia/Kathmandu",
                  "Asia/Katmandu",
                  "Asia/Khandyga",
                  "Asia/Kolkata",
                  "Asia/Krasnoyarsk",
                  "Asia/Kuala_Lumpur",
                  "Asia/Kuching",
                  "Asia/Kuwait",
                  "Asia/Macao",
                  "Asia/Macau",
                  "Asia/Magadan",
                  "Asia/Makassar",
                  "Asia/Manila",
                  "Asia/Muscat",
                  "Asia/Nicosia",
                  "Asia/Novokuznetsk",
                  "Asia/Novosibirsk",
                  "Asia/Omsk",
                  "Asia/Oral",
                  "Asia/Phnom_Penh",
                  "Asia/Pontianak",
                  "Asia/Pyongyang",
                  "Asia/Qatar",
                  "Asia/Qostanay",
                  "Asia/Qyzylorda",
                  "Asia/Rangoon",
                  "Asia/Riyadh",
                  "Asia/Saigon",
                  "Asia/Sakhalin",
                  "Asia/Samarkand",
                  "Asia/Seoul",
                  "Asia/Shanghai",
                  "Asia/Singapore",
                  "Asia/Srednekolymsk",
                  "Asia/Taipei",
                  "Asia/Tashkent",
                  "Asia/Tbilisi",
                  "Asia/Tehran",
                  "Asia/Tel_Aviv",
                  "Asia/Thimbu",
                  "Asia/Thimphu",
                  "Asia/Tokyo",
                  "Asia/Tomsk",
                  "Asia/Ujung_Pandang",
                  "Asia/Ulaanbaatar",
                  "Asia/Ulan_Bator",
                  "Asia/Urumqi",
                  "Asia/Ust-Nera",
                  "Asia/Vientiane",
                  "Asia/Vladivostok",
                  "Asia/Yakutsk",
                  "Asia/Yangon",
                  "Asia/Yekaterinburg",
                  "Asia/Yerevan",
                  "Atlantic/Azores",
                  "Atlantic/Bermuda",
                  "Atlantic/Canary",
                  "Atlantic/Cape_Verde",
                  "Atlantic/Faeroe",
                  "Atlantic/Faroe",
                  "Atlantic/Jan_Mayen",
                  "Atlantic/Madeira",
                  "Atlantic/Reykjavik",
                  "Atlantic/South_Georgia",
                  "Atlantic/St_Helena",
                  "Atlantic/Stanley",
                  "Australia/ACT",
                  "Australia/Adelaide",
                  "Australia/Brisbane",
                  "Australia/Broken_Hill",
                  "Australia/Canberra",
                  "Australia/Currie",
                  "Australia/Darwin",
                  "Australia/Eucla",
                  "Australia/Hobart",
                  "Australia/LHI",
                  "Australia/Lindeman",
                  "Australia/Lord_Howe",
                  "Australia/Melbourne",
                  "Australia/NSW",
                  "Australia/North",
                  "Australia/Perth",
                  "Australia/Queensland",
                  "Australia/South",
                  "Australia/Sydney",
                  "Australia/Tasmania",
                  "Australia/Victoria",
                  "Australia/West",
                  "Australia/Yancowinna",
                  "Brazil/Acre",
                  "Brazil/DeNoronha",
                  "Brazil/East",
                  "Brazil/West",
                  "CET",
                  "CST6CDT",
                  "Canada/Atlantic",
                  "Canada/Central",
                  "Canada/Eastern",
                  "Canada/Mountain",
                  "Canada/Newfoundland",
                  "Canada/Pacific",
                  "Canada/Saskatchewan",
                  "Canada/Yukon",
                  "Chile/Continental",
                  "Chile/EasterIsland",
                  "Cuba",
                  "EET",
                  "EST",
                  "EST5EDT",
                  "Egypt",
                  "Eire",
                  "Etc/GMT",
                  "Etc/GMT+0",
                  "Etc/GMT+1",
                  "Etc/GMT+10",
                  "Etc/GMT+11",
                  "Etc/GMT+12",
                  "Etc/GMT+2",
                  "Etc/GMT+3",
                  "Etc/GMT+4",
                  "Etc/GMT+5",
                  "Etc/GMT+6",
                  "Etc/GMT+7",
                  "Etc/GMT+8",
                  "Etc/GMT+9",
                  "Etc/GMT-0",
                  "Etc/GMT-1",
                  "Etc/GMT-10",
                  "Etc/GMT-11",
                  "Etc/GMT-12",
                  "Etc/GMT-13",
                  "Etc/GMT-14",
                  "Etc/GMT-2",
                  "Etc/GMT-3",
                  "Etc/GMT-4",
                  "Etc/GMT-5",
                  "Etc/GMT-6",
                  "Etc/GMT-7",
                  "Etc/GMT-8",
                  "Etc/GMT-9",
                  "Etc/GMT0",
                  "Etc/Greenwich",
                  "Etc/UCT",
                  "Etc/UTC",
                  "Etc/Universal",
                  "Etc/Zulu",
                  "Europe/Amsterdam",
                  "Europe/Andorra",
                  "Europe/Astrakhan",
                  "Europe/Athens",
                  "Europe/Belfast",
                  "Europe/Belgrade",
                  "Europe/Berlin",
                  "Europe/Bratislava",
                  "Europe/Brussels",
                  "Europe/Bucharest",
                  "Europe/Budapest",
                  "Europe/Busingen",
                  "Europe/Chisinau",
                  "Europe/Copenhagen",
                  "Europe/Dublin",
                  "Europe/Gibraltar",
                  "Europe/Guernsey",
                  "Europe/Helsinki",
                  "Europe/Isle_of_Man",
                  "Europe/Istanbul",
                  "Europe/Jersey",
                  "Europe/Kaliningrad",
                  "Europe/Kiev",
                  "Europe/Kirov",
                  "Europe/Lisbon",
                  "Europe/Ljubljana",
                  "Europe/London",
                  "Europe/Luxembourg",
                  "Europe/Madrid",
                  "Europe/Malta",
                  "Europe/Mariehamn",
                  "Europe/Minsk",
                  "Europe/Monaco",
                  "Europe/Moscow",
                  "Europe/Nicosia",
                  "Europe/Oslo",
                  "Europe/Paris",
                  "Europe/Podgorica",
                  "Europe/Prague",
                  "Europe/Riga",
                  "Europe/Rome",
                  "Europe/Samara",
                  "Europe/San_Marino",
                  "Europe/Sarajevo",
                  "Europe/Saratov",
                  "Europe/Simferopol",
                  "Europe/Skopje",
                  "Europe/Sofia",
                  "Europe/Stockholm",
                  "Europe/Tallinn",
                  "Europe/Tirane",
                  "Europe/Tiraspol",
                  "Europe/Ulyanovsk",
                  "Europe/Uzhgorod",
                  "Europe/Vaduz",
                  "Europe/Vatican",
                  "Europe/Vienna",
                  "Europe/Vilnius",
                  "Europe/Volgograd",
                  "Europe/Warsaw",
                  "Europe/Zagreb",
                  "Europe/Zaporozhye",
                  "Europe/Zurich",
                  "GB",
                  "GB-Eire",
                  "GMT",
                  "GMT+0",
                  "GMT-0",
                  "GMT0",
                  "Greenwich",
                  "HST",
                  "Hongkong",
                  "Iceland",
                  "Indian/Antananarivo",
                  "Indian/Chagos",
                  "Indian/Christmas",
                  "Indian/Cocos",
                  "Indian/Comoro",
                  "Indian/Kerguelen",
                  "Indian/Mahe",
                  "Indian/Maldives",
                  "Indian/Mauritius",
                  "Indian/Mayotte",
                  "Indian/Reunion",
                  "Iran",
                  "Israel",
                  "Jamaica",
                  "Japan",
                  "Kwajalein",
                  "Libya",
                  "MET",
                  "MST",
                  "MST7MDT",
                  "Mexico/BajaNorte",
                  "Mexico/BajaSur",
                  "Mexico/General",
                  "NZ",
                  "NZ-CHAT",
                  "Navajo",
                  "PRC",
                  "PST8PDT",
                  "Pacific/Apia",
                  "Pacific/Auckland",
                  "Pacific/Bougainville",
                  "Pacific/Chatham",
                  "Pacific/Chuuk",
                  "Pacific/Easter",
                  "Pacific/Efate",
                  "Pacific/Enderbury",
                  "Pacific/Fakaofo",
                  "Pacific/Fiji",
                  "Pacific/Funafuti",
                  "Pacific/Galapagos",
                  "Pacific/Gambier",
                  "Pacific/Guadalcanal",
                  "Pacific/Guam",
                  "Pacific/Honolulu",
                  "Pacific/Johnston",
                  "Pacific/Kiritimati",
                  "Pacific/Kosrae",
                  "Pacific/Kwajalein",
                  "Pacific/Majuro",
                  "Pacific/Marquesas",
                  "Pacific/Midway",
                  "Pacific/Nauru",
                  "Pacific/Niue",
                  "Pacific/Norfolk",
                  "Pacific/Noumea",
                  "Pacific/Pago_Pago",
                  "Pacific/Palau",
                  "Pacific/Pitcairn",
                  "Pacific/Pohnpei",
                  "Pacific/Ponape",
                  "Pacific/Port_Moresby",
                  "Pacific/Rarotonga",
                  "Pacific/Saipan",
                  "Pacific/Samoa",
                  "Pacific/Tahiti",
                  "Pacific/Tarawa",
                  "Pacific/Tongatapu",
                  "Pacific/Truk",
                  "Pacific/Wake",
                  "Pacific/Wallis",
                  "Pacific/Yap",
                  "Poland",
                  "Portugal",
                  "ROC",
                  "ROK",
                  "Singapore",
                  "Turkey",
                  "UCT",
                  "US/Alaska",
                  "US/Aleutian",
                  "US/Arizona",
                  "US/Central",
                  "US/East-Indiana",
                  "US/Eastern",
                  "US/Hawaii",
                  "US/Indiana-Starke",
                  "US/Michigan",
                  "US/Mountain",
                  "US/Pacific",
                  "US/Samoa",
                  "UTC",
                  "Universal",
                  "W-SU",
                  "WET",
                  "Zulu"
                ],
                "type": "string",
                "description": "tz database style timezone string\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"
              },
              "failure_issue_threshold": {
                "type": "integer",
                "minimum": 1,
                "nullable": true,
                "description": "How many consecutive missed or failed check-ins in a row before creating a new issue."
              },
              "recovery_threshold": {
                "type": "integer",
                "minimum": 1,
                "nullable": true,
                "description": "How many successful check-ins in a row before resolving an issue."
              }
            },
            "required": [
              "schedule"
            ]
          },
          "contexts": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "trace": {
                    "type": "object",
                    "properties": {
                      "trace_id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": [
                      "trace_id"
                    ]
                  }
                }
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "status"
        ]
      },
      "MonitorList": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "alertRule": {},
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "slug": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "config": {},
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "project": {
              "type": "object",
              "properties": {
                "stats": {},
                "transactionStats": {},
                "sessionStats": {},
                "id": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "platform": {
                  "type": "string",
                  "nullable": true
                },
                "dateCreated": {
                  "type": "string",
                  "format": "date-time"
                },
                "isBookmarked": {
                  "type": "boolean"
                },
                "isMember": {
                  "type": "boolean"
                },
                "features": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "firstEvent": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "firstTransactionEvent": {
                  "type": "boolean"
                },
                "access": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "hasAccess": {
                  "type": "boolean"
                },
                "hasMinifiedStackTrace": {
                  "type": "boolean"
                },
                "hasMonitors": {
                  "type": "boolean"
                },
                "hasProfiles": {
                  "type": "boolean"
                },
                "hasReplays": {
                  "type": "boolean"
                },
                "hasSessions": {
                  "type": "boolean"
                },
                "isInternal": {
                  "type": "boolean"
                },
                "isPublic": {
                  "type": "boolean"
                },
                "avatar": {
                  "type": "object",
                  "properties": {
                    "avatarType": {
                      "type": "string"
                    },
                    "avatarUuid": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "avatarType",
                    "avatarUuid"
                  ]
                },
                "color": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "access",
                "avatar",
                "color",
                "dateCreated",
                "features",
                "firstEvent",
                "firstTransactionEvent",
                "hasAccess",
                "hasMinifiedStackTrace",
                "hasMonitors",
                "hasProfiles",
                "hasReplays",
                "hasSessions",
                "id",
                "isBookmarked",
                "isInternal",
                "isMember",
                "isPublic",
                "name",
                "platform",
                "slug",
                "status"
              ]
            },
            "environments": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "dateCreated": {
                  "type": "string",
                  "format": "date-time"
                },
                "lastCheckIn": {
                  "type": "string",
                  "format": "date-time"
                },
                "nextCheckIn": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "dateCreated",
                "lastCheckIn",
                "name",
                "nextCheckIn",
                "status"
              ]
            }
          },
          "required": [
            "config",
            "dateCreated",
            "environments",
            "id",
            "name",
            "project",
            "slug",
            "status",
            "type"
          ]
        }
      },
      "MonitorValidator": {
        "type": "object",
        "description": "Allows parameters to be defined in snake case, but passed as camel case.\n\nErrors are output in camel case.",
        "properties": {
          "project": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 128
          },
          "slug": {
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-z0-9_\\-]+$"
          },
          "status": {
            "enum": [
              "active",
              "disabled"
            ],
            "type": "string",
            "description": "* `active` - active\n* `disabled` - disabled",
            "default": "active"
          },
          "type": {
            "enum": [
              "cron_job"
            ],
            "type": "string",
            "description": "* `cron_job` - cron_job"
          },
          "config": {
            "type": "object",
            "properties": {
              "schedule_type": {
                "enum": [
                  "crontab",
                  "interval"
                ],
                "type": "string",
                "description": "Currently supports \"crontab\" or \"interval\"\n\n* `crontab` - crontab\n* `interval` - interval"
              },
              "schedule": {
                "description": "Varies depending on the schedule_type. Is either a crontab string, or a 2 element tuple for intervals (e.g. [1, 'day'])"
              },
              "checkin_margin": {
                "type": "integer",
                "minimum": 0,
                "nullable": true,
                "description": "How long (in minutes) after the expected checkin time will we wait until we consider the checkin to have been missed."
              },
              "max_runtime": {
                "type": "integer",
                "maximum": 40320,
                "minimum": 1,
                "nullable": true,
                "description": "How long (in minutes) is the checkin allowed to run for in CheckInStatus.IN_PROGRESS before it is considered failed."
              },
              "timezone": {
                "enum": [
                  "Africa/Abidjan",
                  "Africa/Accra",
                  "Africa/Addis_Ababa",
                  "Africa/Algiers",
                  "Africa/Asmara",
                  "Africa/Asmera",
                  "Africa/Bamako",
                  "Africa/Bangui",
                  "Africa/Banjul",
                  "Africa/Bissau",
                  "Africa/Blantyre",
                  "Africa/Brazzaville",
                  "Africa/Bujumbura",
                  "Africa/Cairo",
                  "Africa/Casablanca",
                  "Africa/Ceuta",
                  "Africa/Conakry",
                  "Africa/Dakar",
                  "Africa/Dar_es_Salaam",
                  "Africa/Djibouti",
                  "Africa/Douala",
                  "Africa/El_Aaiun",
                  "Africa/Freetown",
                  "Africa/Gaborone",
                  "Africa/Harare",
                  "Africa/Johannesburg",
                  "Africa/Juba",
                  "Africa/Kampala",
                  "Africa/Khartoum",
                  "Africa/Kigali",
                  "Africa/Kinshasa",
                  "Africa/Lagos",
                  "Africa/Libreville",
                  "Africa/Lome",
                  "Africa/Luanda",
                  "Africa/Lubumbashi",
                  "Africa/Lusaka",
                  "Africa/Malabo",
                  "Africa/Maputo",
                  "Africa/Maseru",
                  "Africa/Mbabane",
                  "Africa/Mogadishu",
                  "Africa/Monrovia",
                  "Africa/Nairobi",
                  "Africa/Ndjamena",
                  "Africa/Niamey",
                  "Africa/Nouakchott",
                  "Africa/Ouagadougou",
                  "Africa/Porto-Novo",
                  "Africa/Sao_Tome",
                  "Africa/Timbuktu",
                  "Africa/Tripoli",
                  "Africa/Tunis",
                  "Africa/Windhoek",
                  "America/Adak",
                  "America/Anchorage",
                  "America/Anguilla",
                  "America/Antigua",
                  "America/Araguaina",
                  "America/Argentina/Buenos_Aires",
                  "America/Argentina/Catamarca",
                  "America/Argentina/ComodRivadavia",
                  "America/Argentina/Cordoba",
                  "America/Argentina/Jujuy",
                  "America/Argentina/La_Rioja",
                  "America/Argentina/Mendoza",
                  "America/Argentina/Rio_Gallegos",
                  "America/Argentina/Salta",
                  "America/Argentina/San_Juan",
                  "America/Argentina/San_Luis",
                  "America/Argentina/Tucuman",
                  "America/Argentina/Ushuaia",
                  "America/Aruba",
                  "America/Asuncion",
                  "America/Atikokan",
                  "America/Atka",
                  "America/Bahia",
                  "America/Bahia_Banderas",
                  "America/Barbados",
                  "America/Belem",
                  "America/Belize",
                  "America/Blanc-Sablon",
                  "America/Boa_Vista",
                  "America/Bogota",
                  "America/Boise",
                  "America/Buenos_Aires",
                  "America/Cambridge_Bay",
                  "America/Campo_Grande",
                  "America/Cancun",
                  "America/Caracas",
                  "America/Catamarca",
                  "America/Cayenne",
                  "America/Cayman",
                  "America/Chicago",
                  "America/Chihuahua",
                  "America/Coral_Harbour",
                  "America/Cordoba",
                  "America/Costa_Rica",
                  "America/Creston",
                  "America/Cuiaba",
                  "America/Curacao",
                  "America/Danmarkshavn",
                  "America/Dawson",
                  "America/Dawson_Creek",
                  "America/Denver",
                  "America/Detroit",
                  "America/Dominica",
                  "America/Edmonton",
                  "America/Eirunepe",
                  "America/El_Salvador",
                  "America/Ensenada",
                  "America/Fort_Nelson",
                  "America/Fort_Wayne",
                  "America/Fortaleza",
                  "America/Glace_Bay",
                  "America/Godthab",
                  "America/Goose_Bay",
                  "America/Grand_Turk",
                  "America/Grenada",
                  "America/Guadeloupe",
                  "America/Guatemala",
                  "America/Guayaquil",
                  "America/Guyana",
                  "America/Halifax",
                  "America/Havana",
                  "America/Hermosillo",
                  "America/Indiana/Indianapolis",
                  "America/Indiana/Knox",
                  "America/Indiana/Marengo",
                  "America/Indiana/Petersburg",
                  "America/Indiana/Tell_City",
                  "America/Indiana/Vevay",
                  "America/Indiana/Vincennes",
                  "America/Indiana/Winamac",
                  "America/Indianapolis",
                  "America/Inuvik",
                  "America/Iqaluit",
                  "America/Jamaica",
                  "America/Jujuy",
                  "America/Juneau",
                  "America/Kentucky/Louisville",
                  "America/Kentucky/Monticello",
                  "America/Knox_IN",
                  "America/Kralendijk",
                  "America/La_Paz",
                  "America/Lima",
                  "America/Los_Angeles",
                  "America/Louisville",
                  "America/Lower_Princes",
                  "America/Maceio",
                  "America/Managua",
                  "America/Manaus",
                  "America/Marigot",
                  "America/Martinique",
                  "America/Matamoros",
                  "America/Mazatlan",
                  "America/Mendoza",
                  "America/Menominee",
                  "America/Merida",
                  "America/Metlakatla",
                  "America/Mexico_City",
                  "America/Miquelon",
                  "America/Moncton",
                  "America/Monterrey",
                  "America/Montevideo",
                  "America/Montreal",
                  "America/Montserrat",
                  "America/Nassau",
                  "America/New_York",
                  "America/Nipigon",
                  "America/Nome",
                  "America/Noronha",
                  "America/North_Dakota/Beulah",
                  "America/North_Dakota/Center",
                  "America/North_Dakota/New_Salem",
                  "America/Ojinaga",
                  "America/Panama",
                  "America/Pangnirtung",
                  "America/Paramaribo",
                  "America/Phoenix",
                  "America/Port-au-Prince",
                  "America/Port_of_Spain",
                  "America/Porto_Acre",
                  "America/Porto_Velho",
                  "America/Puerto_Rico",
                  "America/Punta_Arenas",
                  "America/Rainy_River",
                  "America/Rankin_Inlet",
                  "America/Recife",
                  "America/Regina",
                  "America/Resolute",
                  "America/Rio_Branco",
                  "America/Rosario",
                  "America/Santa_Isabel",
                  "America/Santarem",
                  "America/Santiago",
                  "America/Santo_Domingo",
                  "America/Sao_Paulo",
                  "America/Scoresbysund",
                  "America/Shiprock",
                  "America/Sitka",
                  "America/St_Barthelemy",
                  "America/St_Johns",
                  "America/St_Kitts",
                  "America/St_Lucia",
                  "America/St_Thomas",
                  "America/St_Vincent",
                  "America/Swift_Current",
                  "America/Tegucigalpa",
                  "America/Thule",
                  "America/Thunder_Bay",
                  "America/Tijuana",
                  "America/Toronto",
                  "America/Tortola",
                  "America/Vancouver",
                  "America/Virgin",
                  "America/Whitehorse",
                  "America/Winnipeg",
                  "America/Yakutat",
                  "America/Yellowknife",
                  "Antarctica/Casey",
                  "Antarctica/Davis",
                  "Antarctica/DumontDUrville",
                  "Antarctica/Macquarie",
                  "Antarctica/Mawson",
                  "Antarctica/McMurdo",
                  "Antarctica/Palmer",
                  "Antarctica/Rothera",
                  "Antarctica/South_Pole",
                  "Antarctica/Syowa",
                  "Antarctica/Troll",
                  "Antarctica/Vostok",
                  "Arctic/Longyearbyen",
                  "Asia/Aden",
                  "Asia/Almaty",
                  "Asia/Amman",
                  "Asia/Anadyr",
                  "Asia/Aqtau",
                  "Asia/Aqtobe",
                  "Asia/Ashgabat",
                  "Asia/Ashkhabad",
                  "Asia/Atyrau",
                  "Asia/Baghdad",
                  "Asia/Bahrain",
                  "Asia/Baku",
                  "Asia/Bangkok",
                  "Asia/Barnaul",
                  "Asia/Beirut",
                  "Asia/Bishkek",
                  "Asia/Brunei",
                  "Asia/Calcutta",
                  "Asia/Chita",
                  "Asia/Choibalsan",
                  "Asia/Chongqing",
                  "Asia/Chungking",
                  "Asia/Colombo",
                  "Asia/Dacca",
                  "Asia/Damascus",
                  "Asia/Dhaka",
                  "Asia/Dili",
                  "Asia/Dubai",
                  "Asia/Dushanbe",
                  "Asia/Famagusta",
                  "Asia/Gaza",
                  "Asia/Harbin",
                  "Asia/Hebron",
                  "Asia/Ho_Chi_Minh",
                  "Asia/Hong_Kong",
                  "Asia/Hovd",
                  "Asia/Irkutsk",
                  "Asia/Istanbul",
                  "Asia/Jakarta",
                  "Asia/Jayapura",
                  "Asia/Jerusalem",
                  "Asia/Kabul",
                  "Asia/Kamchatka",
                  "Asia/Karachi",
                  "Asia/Kashgar",
                  "Asia/Kathmandu",
                  "Asia/Katmandu",
                  "Asia/Khandyga",
                  "Asia/Kolkata",
                  "Asia/Krasnoyarsk",
                  "Asia/Kuala_Lumpur",
                  "Asia/Kuching",
                  "Asia/Kuwait",
                  "Asia/Macao",
                  "Asia/Macau",
                  "Asia/Magadan",
                  "Asia/Makassar",
                  "Asia/Manila",
                  "Asia/Muscat",
                  "Asia/Nicosia",
                  "Asia/Novokuznetsk",
                  "Asia/Novosibirsk",
                  "Asia/Omsk",
                  "Asia/Oral",
                  "Asia/Phnom_Penh",
                  "Asia/Pontianak",
                  "Asia/Pyongyang",
                  "Asia/Qatar",
                  "Asia/Qostanay",
                  "Asia/Qyzylorda",
                  "Asia/Rangoon",
                  "Asia/Riyadh",
                  "Asia/Saigon",
                  "Asia/Sakhalin",
                  "Asia/Samarkand",
                  "Asia/Seoul",
                  "Asia/Shanghai",
                  "Asia/Singapore",
                  "Asia/Srednekolymsk",
                  "Asia/Taipei",
                  "Asia/Tashkent",
                  "Asia/Tbilisi",
                  "Asia/Tehran",
                  "Asia/Tel_Aviv",
                  "Asia/Thimbu",
                  "Asia/Thimphu",
                  "Asia/Tokyo",
                  "Asia/Tomsk",
                  "Asia/Ujung_Pandang",
                  "Asia/Ulaanbaatar",
                  "Asia/Ulan_Bator",
                  "Asia/Urumqi",
                  "Asia/Ust-Nera",
                  "Asia/Vientiane",
                  "Asia/Vladivostok",
                  "Asia/Yakutsk",
                  "Asia/Yangon",
                  "Asia/Yekaterinburg",
                  "Asia/Yerevan",
                  "Atlantic/Azores",
                  "Atlantic/Bermuda",
                  "Atlantic/Canary",
                  "Atlantic/Cape_Verde",
                  "Atlantic/Faeroe",
                  "Atlantic/Faroe",
                  "Atlantic/Jan_Mayen",
                  "Atlantic/Madeira",
                  "Atlantic/Reykjavik",
                  "Atlantic/South_Georgia",
                  "Atlantic/St_Helena",
                  "Atlantic/Stanley",
                  "Australia/ACT",
                  "Australia/Adelaide",
                  "Australia/Brisbane",
                  "Australia/Broken_Hill",
                  "Australia/Canberra",
                  "Australia/Currie",
                  "Australia/Darwin",
                  "Australia/Eucla",
                  "Australia/Hobart",
                  "Australia/LHI",
                  "Australia/Lindeman",
                  "Australia/Lord_Howe",
                  "Australia/Melbourne",
                  "Australia/NSW",
                  "Australia/North",
                  "Australia/Perth",
                  "Australia/Queensland",
                  "Australia/South",
                  "Australia/Sydney",
                  "Australia/Tasmania",
                  "Australia/Victoria",
                  "Australia/West",
                  "Australia/Yancowinna",
                  "Brazil/Acre",
                  "Brazil/DeNoronha",
                  "Brazil/East",
                  "Brazil/West",
                  "CET",
                  "CST6CDT",
                  "Canada/Atlantic",
                  "Canada/Central",
                  "Canada/Eastern",
                  "Canada/Mountain",
                  "Canada/Newfoundland",
                  "Canada/Pacific",
                  "Canada/Saskatchewan",
                  "Canada/Yukon",
                  "Chile/Continental",
                  "Chile/EasterIsland",
                  "Cuba",
                  "EET",
                  "EST",
                  "EST5EDT",
                  "Egypt",
                  "Eire",
                  "Etc/GMT",
                  "Etc/GMT+0",
                  "Etc/GMT+1",
                  "Etc/GMT+10",
                  "Etc/GMT+11",
                  "Etc/GMT+12",
                  "Etc/GMT+2",
                  "Etc/GMT+3",
                  "Etc/GMT+4",
                  "Etc/GMT+5",
                  "Etc/GMT+6",
                  "Etc/GMT+7",
                  "Etc/GMT+8",
                  "Etc/GMT+9",
                  "Etc/GMT-0",
                  "Etc/GMT-1",
                  "Etc/GMT-10",
                  "Etc/GMT-11",
                  "Etc/GMT-12",
                  "Etc/GMT-13",
                  "Etc/GMT-14",
                  "Etc/GMT-2",
                  "Etc/GMT-3",
                  "Etc/GMT-4",
                  "Etc/GMT-5",
                  "Etc/GMT-6",
                  "Etc/GMT-7",
                  "Etc/GMT-8",
                  "Etc/GMT-9",
                  "Etc/GMT0",
                  "Etc/Greenwich",
                  "Etc/UCT",
                  "Etc/UTC",
                  "Etc/Universal",
                  "Etc/Zulu",
                  "Europe/Amsterdam",
                  "Europe/Andorra",
                  "Europe/Astrakhan",
                  "Europe/Athens",
                  "Europe/Belfast",
                  "Europe/Belgrade",
                  "Europe/Berlin",
                  "Europe/Bratislava",
                  "Europe/Brussels",
                  "Europe/Bucharest",
                  "Europe/Budapest",
                  "Europe/Busingen",
                  "Europe/Chisinau",
                  "Europe/Copenhagen",
                  "Europe/Dublin",
                  "Europe/Gibraltar",
                  "Europe/Guernsey",
                  "Europe/Helsinki",
                  "Europe/Isle_of_Man",
                  "Europe/Istanbul",
                  "Europe/Jersey",
                  "Europe/Kaliningrad",
                  "Europe/Kiev",
                  "Europe/Kirov",
                  "Europe/Lisbon",
                  "Europe/Ljubljana",
                  "Europe/London",
                  "Europe/Luxembourg",
                  "Europe/Madrid",
                  "Europe/Malta",
                  "Europe/Mariehamn",
                  "Europe/Minsk",
                  "Europe/Monaco",
                  "Europe/Moscow",
                  "Europe/Nicosia",
                  "Europe/Oslo",
                  "Europe/Paris",
                  "Europe/Podgorica",
                  "Europe/Prague",
                  "Europe/Riga",
                  "Europe/Rome",
                  "Europe/Samara",
                  "Europe/San_Marino",
                  "Europe/Sarajevo",
                  "Europe/Saratov",
                  "Europe/Simferopol",
                  "Europe/Skopje",
                  "Europe/Sofia",
                  "Europe/Stockholm",
                  "Europe/Tallinn",
                  "Europe/Tirane",
                  "Europe/Tiraspol",
                  "Europe/Ulyanovsk",
                  "Europe/Uzhgorod",
                  "Europe/Vaduz",
                  "Europe/Vatican",
                  "Europe/Vienna",
                  "Europe/Vilnius",
                  "Europe/Volgograd",
                  "Europe/Warsaw",
                  "Europe/Zagreb",
                  "Europe/Zaporozhye",
                  "Europe/Zurich",
                  "GB",
                  "GB-Eire",
                  "GMT",
                  "GMT+0",
                  "GMT-0",
                  "GMT0",
                  "Greenwich",
                  "HST",
                  "Hongkong",
                  "Iceland",
                  "Indian/Antananarivo",
                  "Indian/Chagos",
                  "Indian/Christmas",
                  "Indian/Cocos",
                  "Indian/Comoro",
                  "Indian/Kerguelen",
                  "Indian/Mahe",
                  "Indian/Maldives",
                  "Indian/Mauritius",
                  "Indian/Mayotte",
                  "Indian/Reunion",
                  "Iran",
                  "Israel",
                  "Jamaica",
                  "Japan",
                  "Kwajalein",
                  "Libya",
                  "MET",
                  "MST",
                  "MST7MDT",
                  "Mexico/BajaNorte",
                  "Mexico/BajaSur",
                  "Mexico/General",
                  "NZ",
                  "NZ-CHAT",
                  "Navajo",
                  "PRC",
                  "PST8PDT",
                  "Pacific/Apia",
                  "Pacific/Auckland",
                  "Pacific/Bougainville",
                  "Pacific/Chatham",
                  "Pacific/Chuuk",
                  "Pacific/Easter",
                  "Pacific/Efate",
                  "Pacific/Enderbury",
                  "Pacific/Fakaofo",
                  "Pacific/Fiji",
                  "Pacific/Funafuti",
                  "Pacific/Galapagos",
                  "Pacific/Gambier",
                  "Pacific/Guadalcanal",
                  "Pacific/Guam",
                  "Pacific/Honolulu",
                  "Pacific/Johnston",
                  "Pacific/Kiritimati",
                  "Pacific/Kosrae",
                  "Pacific/Kwajalein",
                  "Pacific/Majuro",
                  "Pacific/Marquesas",
                  "Pacific/Midway",
                  "Pacific/Nauru",
                  "Pacific/Niue",
                  "Pacific/Norfolk",
                  "Pacific/Noumea",
                  "Pacific/Pago_Pago",
                  "Pacific/Palau",
                  "Pacific/Pitcairn",
                  "Pacific/Pohnpei",
                  "Pacific/Ponape",
                  "Pacific/Port_Moresby",
                  "Pacific/Rarotonga",
                  "Pacific/Saipan",
                  "Pacific/Samoa",
                  "Pacific/Tahiti",
                  "Pacific/Tarawa",
                  "Pacific/Tongatapu",
                  "Pacific/Truk",
                  "Pacific/Wake",
                  "Pacific/Wallis",
                  "Pacific/Yap",
                  "Poland",
                  "Portugal",
                  "ROC",
                  "ROK",
                  "Singapore",
                  "Turkey",
                  "UCT",
                  "US/Alaska",
                  "US/Aleutian",
                  "US/Arizona",
                  "US/Central",
                  "US/East-Indiana",
                  "US/Eastern",
                  "US/Hawaii",
                  "US/Indiana-Starke",
                  "US/Michigan",
                  "US/Mountain",
                  "US/Pacific",
                  "US/Samoa",
                  "UTC",
                  "Universal",
                  "W-SU",
                  "WET",
                  "Zulu"
                ],
                "type": "string",
                "description": "tz database style timezone string\n\n* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"
              },
              "failure_issue_threshold": {
                "type": "integer",
                "minimum": 1,
                "nullable": true,
                "description": "How many consecutive missed or failed check-ins in a row before creating a new issue."
              },
              "recovery_threshold": {
                "type": "integer",
                "minimum": 1,
                "nullable": true,
                "description": "How many successful check-ins in a row before resolving an issue."
              }
            },
            "required": [
              "schedule"
            ]
          },
          "alert_rule": {
            "type": "object",
            "properties": {
              "environment": {
                "type": "string",
                "nullable": true,
                "description": "Name of the environment",
                "maxLength": 64
              },
              "targets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "target_identifier": {
                      "type": "integer",
                      "description": "ID of target object"
                    },
                    "target_type": {
                      "type": "string",
                      "description": "One of [Member, Team]"
                    }
                  },
                  "required": [
                    "target_identifier",
                    "target_type"
                  ]
                },
                "description": "Array of dictionaries with information of the user or team to be notified"
              }
            },
            "required": [
              "targets"
            ]
          }
        },
        "required": [
          "config",
          "name",
          "project",
          "type"
        ]
      },
      "OrganizationEventsResponseDict": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "fields"
            ]
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "OrganizationMemberSCIM": {
        "type": "object",
        "description": "Conforming to the SCIM RFC, this represents a Sentry Org Member\nas a SCIM user object.",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "name": {
            "type": "object",
            "properties": {
              "givenName": {
                "type": "string"
              },
              "familyName": {
                "type": "string"
              }
            },
            "required": [
              "familyName",
              "givenName"
            ]
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "primary": {
                  "type": "boolean"
                },
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "primary",
                "type",
                "value"
              ]
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string"
              }
            },
            "required": [
              "resourceType"
            ]
          },
          "sentryOrgRole": {
            "type": "string"
          }
        },
        "required": [
          "emails",
          "id",
          "meta",
          "name",
          "schemas",
          "sentryOrgRole",
          "userName"
        ]
      },
      "OrganizationMemberWithRoles": {
        "type": "object",
        "properties": {
          "externalUsers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "externalId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                },
                "teamId": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "externalName": {
                  "type": "string"
                },
                "integrationId": {
                  "type": "string"
                }
              },
              "required": [
                "externalName",
                "id",
                "integrationId",
                "provider"
              ]
            }
          },
          "groupOrgRoles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "desc": {
                  "type": "string"
                },
                "scopes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowed": {
                  "type": "boolean"
                },
                "isAllowed": {
                  "type": "boolean"
                },
                "isRetired": {
                  "type": "boolean"
                },
                "is_global": {
                  "type": "boolean"
                },
                "isGlobal": {
                  "type": "boolean"
                },
                "minimumTeamRole": {
                  "type": "string"
                }
              },
              "required": [
                "allowed",
                "desc",
                "id",
                "isAllowed",
                "isGlobal",
                "isRetired",
                "is_global",
                "minimumTeamRole",
                "name",
                "scopes"
              ]
            }
          },
          "role": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "identities": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "object",
                      "properties": {
                        "slug": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "slug"
                      ]
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    },
                    "dateVerified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateSynced": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "dateSynced",
                    "dateVerified",
                    "id",
                    "name",
                    "organization",
                    "provider"
                  ]
                }
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "avatarType": {
                    "type": "string"
                  },
                  "avatarUuid": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "avatarType",
                  "avatarUuid"
                ]
              },
              "authenticators": {
                "type": "array",
                "items": {}
              },
              "canReset2fa": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "avatarUrl": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "hasPasswordAuth": {
                "type": "boolean"
              },
              "isManaged": {
                "type": "boolean"
              },
              "dateJoined": {
                "type": "string",
                "format": "date-time"
              },
              "lastLogin": {
                "type": "string",
                "format": "date-time"
              },
              "has2fa": {
                "type": "boolean"
              },
              "lastActive": {
                "type": "string",
                "format": "date-time"
              },
              "isSuperuser": {
                "type": "boolean"
              },
              "isStaff": {
                "type": "boolean"
              },
              "experiments": {
                "type": "object",
                "additionalProperties": {}
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "is_verified": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "email",
                    "id",
                    "is_verified"
                  ]
                }
              }
            },
            "required": [
              "avatarUrl",
              "dateJoined",
              "email",
              "emails",
              "experiments",
              "has2fa",
              "hasPasswordAuth",
              "id",
              "isActive",
              "isManaged",
              "isStaff",
              "isSuperuser",
              "lastActive",
              "lastLogin",
              "name",
              "username"
            ]
          },
          "orgRole": {
            "type": "string"
          },
          "pending": {
            "type": "boolean"
          },
          "expired": {
            "type": "boolean"
          },
          "flags": {
            "type": "object",
            "properties": {
              "idp:provisioned": {
                "type": "boolean"
              },
              "idp:role-restricted": {
                "type": "boolean"
              },
              "sso:linked": {
                "type": "boolean"
              },
              "sso:invalid": {
                "type": "boolean"
              },
              "member-limit:restricted": {
                "type": "boolean"
              }
            },
            "required": [
              "idp:provisioned",
              "idp:role-restricted",
              "member-limit:restricted",
              "sso:invalid",
              "sso:linked"
            ]
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "inviteStatus": {
            "type": "string"
          },
          "inviterName": {
            "type": "string",
            "nullable": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teamRoles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "teamSlug": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                }
              },
              "required": [
                "role",
                "teamSlug"
              ]
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "desc": {
                  "type": "string"
                },
                "scopes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowed": {
                  "type": "boolean"
                },
                "isAllowed": {
                  "type": "boolean"
                },
                "isRetired": {
                  "type": "boolean"
                },
                "is_global": {
                  "type": "boolean"
                },
                "isGlobal": {
                  "type": "boolean"
                },
                "minimumTeamRole": {
                  "type": "string"
                }
              },
              "required": [
                "allowed",
                "desc",
                "id",
                "isAllowed",
                "isGlobal",
                "isRetired",
                "is_global",
                "minimumTeamRole",
                "name",
                "scopes"
              ]
            }
          },
          "invite_link": {
            "type": "string",
            "nullable": true
          },
          "isOnlyOwner": {
            "type": "boolean"
          },
          "orgRoleList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "desc": {
                  "type": "string"
                },
                "scopes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowed": {
                  "type": "boolean"
                },
                "isAllowed": {
                  "type": "boolean"
                },
                "isRetired": {
                  "type": "boolean"
                },
                "is_global": {
                  "type": "boolean"
                },
                "isGlobal": {
                  "type": "boolean"
                },
                "minimumTeamRole": {
                  "type": "string"
                }
              },
              "required": [
                "allowed",
                "desc",
                "id",
                "isAllowed",
                "isGlobal",
                "isRetired",
                "is_global",
                "minimumTeamRole",
                "name",
                "scopes"
              ]
            }
          },
          "teamRoleList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "desc": {
                  "type": "string"
                },
                "scopes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowed": {
                  "type": "boolean"
                },
                "isAllowed": {
                  "type": "boolean"
                },
                "isRetired": {
                  "type": "boolean"
                },
                "isMinimumRoleFor": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "allowed",
                "desc",
                "id",
                "isAllowed",
                "isMinimumRoleFor",
                "isRetired",
                "name",
                "scopes"
              ]
            }
          }
        },
        "required": [
          "dateCreated",
          "email",
          "expired",
          "flags",
          "id",
          "inviteStatus",
          "invite_link",
          "inviterName",
          "isOnlyOwner",
          "name",
          "orgRole",
          "orgRoleList",
          "pending",
          "teamRoleList",
          "teamRoles",
          "teams",
          "user"
        ]
      },
      "OrganizationMemberWithTeams": {
        "type": "object",
        "properties": {
          "externalUsers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "externalId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                },
                "teamId": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "externalName": {
                  "type": "string"
                },
                "integrationId": {
                  "type": "string"
                }
              },
              "required": [
                "externalName",
                "id",
                "integrationId",
                "provider"
              ]
            }
          },
          "groupOrgRoles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "desc": {
                  "type": "string"
                },
                "scopes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowed": {
                  "type": "boolean"
                },
                "isAllowed": {
                  "type": "boolean"
                },
                "isRetired": {
                  "type": "boolean"
                },
                "is_global": {
                  "type": "boolean"
                },
                "isGlobal": {
                  "type": "boolean"
                },
                "minimumTeamRole": {
                  "type": "string"
                }
              },
              "required": [
                "allowed",
                "desc",
                "id",
                "isAllowed",
                "isGlobal",
                "isRetired",
                "is_global",
                "minimumTeamRole",
                "name",
                "scopes"
              ]
            }
          },
          "role": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "identities": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "object",
                      "properties": {
                        "slug": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "slug"
                      ]
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    },
                    "dateVerified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateSynced": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "dateSynced",
                    "dateVerified",
                    "id",
                    "name",
                    "organization",
                    "provider"
                  ]
                }
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "avatarType": {
                    "type": "string"
                  },
                  "avatarUuid": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "avatarType",
                  "avatarUuid"
                ]
              },
              "authenticators": {
                "type": "array",
                "items": {}
              },
              "canReset2fa": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "avatarUrl": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "hasPasswordAuth": {
                "type": "boolean"
              },
              "isManaged": {
                "type": "boolean"
              },
              "dateJoined": {
                "type": "string",
                "format": "date-time"
              },
              "lastLogin": {
                "type": "string",
                "format": "date-time"
              },
              "has2fa": {
                "type": "boolean"
              },
              "lastActive": {
                "type": "string",
                "format": "date-time"
              },
              "isSuperuser": {
                "type": "boolean"
              },
              "isStaff": {
                "type": "boolean"
              },
              "experiments": {
                "type": "object",
                "additionalProperties": {}
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "is_verified": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "email",
                    "id",
                    "is_verified"
                  ]
                }
              }
            },
            "required": [
              "avatarUrl",
              "dateJoined",
              "email",
              "emails",
              "experiments",
              "has2fa",
              "hasPasswordAuth",
              "id",
              "isActive",
              "isManaged",
              "isStaff",
              "isSuperuser",
              "lastActive",
              "lastLogin",
              "name",
              "username"
            ]
          },
          "orgRole": {
            "type": "string"
          },
          "pending": {
            "type": "boolean"
          },
          "expired": {
            "type": "boolean"
          },
          "flags": {
            "type": "object",
            "properties": {
              "idp:provisioned": {
                "type": "boolean"
              },
              "idp:role-restricted": {
                "type": "boolean"
              },
              "sso:linked": {
                "type": "boolean"
              },
              "sso:invalid": {
                "type": "boolean"
              },
              "member-limit:restricted": {
                "type": "boolean"
              }
            },
            "required": [
              "idp:provisioned",
              "idp:role-restricted",
              "member-limit:restricted",
              "sso:invalid",
              "sso:linked"
            ]
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "inviteStatus": {
            "type": "string"
          },
          "inviterName": {
            "type": "string",
            "nullable": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teamRoles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "teamSlug": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                }
              },
              "required": [
                "role",
                "teamSlug"
              ]
            }
          }
        },
        "required": [
          "dateCreated",
          "email",
          "expired",
          "flags",
          "id",
          "inviteStatus",
          "inviterName",
          "name",
          "orgRole",
          "pending",
          "teamRoles",
          "teams",
          "user"
        ]
      },
      "OrganizationProjectResponseDict": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "latestDeploys": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "nullable": true
            },
            "stats": {},
            "transactionStats": {},
            "sessionStats": {},
            "id": {
              "type": "string"
            },
            "slug": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "platform": {
              "type": "string",
              "nullable": true
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "isBookmarked": {
              "type": "boolean"
            },
            "isMember": {
              "type": "boolean"
            },
            "features": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "firstEvent": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "firstTransactionEvent": {
              "type": "boolean"
            },
            "access": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "hasAccess": {
              "type": "boolean"
            },
            "hasMinifiedStackTrace": {
              "type": "boolean"
            },
            "hasMonitors": {
              "type": "boolean"
            },
            "hasProfiles": {
              "type": "boolean"
            },
            "hasReplays": {
              "type": "boolean"
            },
            "hasSessions": {
              "type": "boolean"
            },
            "team": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "slug"
              ],
              "nullable": true
            },
            "teams": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "slug"
                ]
              }
            },
            "eventProcessing": {
              "type": "object",
              "properties": {
                "symbolicationDegraded": {
                  "type": "boolean"
                }
              },
              "required": [
                "symbolicationDegraded"
              ]
            },
            "platforms": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "hasUserReports": {
              "type": "boolean"
            },
            "environments": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "latestRelease": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string"
                }
              },
              "required": [
                "version"
              ],
              "nullable": true
            }
          },
          "required": [
            "access",
            "dateCreated",
            "environments",
            "eventProcessing",
            "features",
            "firstEvent",
            "firstTransactionEvent",
            "hasAccess",
            "hasMinifiedStackTrace",
            "hasMonitors",
            "hasProfiles",
            "hasReplays",
            "hasSessions",
            "hasUserReports",
            "id",
            "isBookmarked",
            "isMember",
            "latestRelease",
            "name",
            "platform",
            "platforms",
            "slug",
            "team",
            "teams"
          ]
        }
      },
      "OutcomesResponse": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "intervals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "by": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "totals": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "series": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "required": [
                "by",
                "series",
                "totals"
              ]
            }
          }
        },
        "required": [
          "end",
          "groups",
          "intervals",
          "start"
        ]
      },
      "Project": {
        "type": "object",
        "properties": {
          "stats": {},
          "transactionStats": {},
          "sessionStats": {},
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "platform": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "isBookmarked": {
            "type": "boolean"
          },
          "isMember": {
            "type": "boolean"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstEvent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstTransactionEvent": {
            "type": "boolean"
          },
          "access": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAccess": {
            "type": "boolean"
          },
          "hasMinifiedStackTrace": {
            "type": "boolean"
          },
          "hasMonitors": {
            "type": "boolean"
          },
          "hasProfiles": {
            "type": "boolean"
          },
          "hasReplays": {
            "type": "boolean"
          },
          "hasSessions": {
            "type": "boolean"
          },
          "isInternal": {
            "type": "boolean"
          },
          "isPublic": {
            "type": "boolean"
          },
          "avatar": {
            "type": "object",
            "properties": {
              "avatarType": {
                "type": "string"
              },
              "avatarUuid": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "avatarType",
              "avatarUuid"
            ]
          },
          "color": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "access",
          "avatar",
          "color",
          "dateCreated",
          "features",
          "firstEvent",
          "firstTransactionEvent",
          "hasAccess",
          "hasMinifiedStackTrace",
          "hasMonitors",
          "hasProfiles",
          "hasReplays",
          "hasSessions",
          "id",
          "isBookmarked",
          "isInternal",
          "isMember",
          "isPublic",
          "name",
          "platform",
          "slug",
          "status"
        ]
      },
      "ProjectAdmin": {
        "type": "object",
        "properties": {
          "isBookmarked": {
            "type": "boolean"
          },
          "isSubscribed": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "maxLength": 200
          },
          "slug": {
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-z0-9_\\-]+$"
          },
          "team": {
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-z0-9_\\-]+$"
          },
          "digestsMinDelay": {
            "type": "integer",
            "maximum": 3600,
            "minimum": 60
          },
          "digestsMaxDelay": {
            "type": "integer",
            "maximum": 3600,
            "minimum": 60
          },
          "subjectPrefix": {
            "type": "string",
            "maxLength": 200
          },
          "subjectTemplate": {
            "type": "string",
            "maxLength": 200
          },
          "securityToken": {
            "type": "string",
            "maxLength": 255,
            "pattern": "^[-a-zA-Z0-9+/=\\s]+$"
          },
          "securityTokenHeader": {
            "type": "string",
            "maxLength": 20,
            "pattern": "^[a-zA-Z0-9_\\-]+$"
          },
          "verifySSL": {
            "type": "boolean"
          },
          "defaultEnvironment": {
            "type": "string",
            "nullable": true
          },
          "dataScrubber": {
            "type": "boolean"
          },
          "dataScrubberDefaults": {
            "type": "boolean"
          },
          "sensitiveFields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "safeFields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "storeCrashReports": {
            "type": "integer",
            "maximum": 100,
            "minimum": -1,
            "nullable": true
          },
          "relayPiiConfig": {
            "type": "string",
            "nullable": true
          },
          "builtinSymbolSources": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "symbolSources": {
            "type": "string",
            "nullable": true
          },
          "scrubIPAddresses": {
            "type": "boolean"
          },
          "groupingConfig": {
            "type": "string",
            "nullable": true
          },
          "groupingEnhancements": {
            "type": "string",
            "nullable": true
          },
          "fingerprintingRules": {
            "type": "string",
            "nullable": true
          },
          "secondaryGroupingConfig": {
            "type": "string",
            "nullable": true
          },
          "secondaryGroupingExpiry": {
            "type": "integer",
            "minimum": 1,
            "nullable": true
          },
          "groupingAutoUpdate": {
            "type": "boolean"
          },
          "scrapeJavaScript": {
            "type": "boolean"
          },
          "allowedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resolveAge": {
            "type": "integer",
            "nullable": true
          },
          "platform": {
            "type": "string",
            "nullable": true
          },
          "copy_from_project": {
            "type": "integer"
          },
          "dynamicSamplingBiases": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "enum": [
                    "boostEnvironments",
                    "boostKeyTransactions",
                    "boostLatestRelease",
                    "boostLowVolumeTransactions",
                    "boostReplayId",
                    "ignoreHealthChecks",
                    "recalibrationRule"
                  ],
                  "type": "string",
                  "description": "* `boostEnvironments` - boostEnvironments\n* `boostKeyTransactions` - boostKeyTransactions\n* `boostLatestRelease` - boostLatestRelease\n* `boostLowVolumeTransactions` - boostLowVolumeTransactions\n* `boostReplayId` - boostReplayId\n* `ignoreHealthChecks` - ignoreHealthChecks\n* `recalibrationRule` - recalibrationRule"
                },
                "active": {
                  "type": "boolean",
                  "default": false
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "performanceIssueCreationRate": {
            "type": "number",
            "format": "double",
            "maximum": 1,
            "minimum": 0
          },
          "performanceIssueCreationThroughPlatform": {
            "type": "boolean"
          },
          "performanceIssueSendToPlatform": {
            "type": "boolean"
          },
          "recapServerUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "recapServerToken": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "digestsMaxDelay",
          "digestsMinDelay",
          "isBookmarked",
          "isSubscribed",
          "name",
          "securityToken",
          "securityTokenHeader",
          "slug",
          "subjectPrefix",
          "subjectTemplate",
          "team"
        ]
      },
      "ProjectKey": {
        "type": "object",
        "description": "This represents a Sentry Project Client Key.",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "public": {
            "type": "string",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "nullable": true
          },
          "projectId": {
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          },
          "rateLimit": {
            "type": "object",
            "properties": {
              "window": {
                "type": "integer"
              },
              "count": {
                "type": "integer"
              }
            },
            "required": [
              "count",
              "window"
            ],
            "nullable": true
          },
          "dsn": {
            "type": "object",
            "properties": {
              "secret": {
                "type": "string"
              },
              "public": {
                "type": "string"
              },
              "csp": {
                "type": "string"
              },
              "security": {
                "type": "string"
              },
              "minidump": {
                "type": "string"
              },
              "unreal": {
                "type": "string"
              },
              "cdn": {
                "type": "string"
              }
            },
            "required": [
              "cdn",
              "csp",
              "minidump",
              "public",
              "secret",
              "security",
              "unreal"
            ]
          },
          "browserSdkVersion": {
            "type": "string"
          },
          "browserSdk": {
            "type": "object",
            "properties": {
              "choices": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "choices"
            ]
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dynamicSdkLoaderOptions": {
            "type": "object",
            "properties": {
              "hasReplay": {
                "type": "boolean"
              },
              "hasPerformance": {
                "type": "boolean"
              },
              "hasDebug": {
                "type": "boolean"
              }
            },
            "required": [
              "hasDebug",
              "hasPerformance",
              "hasReplay"
            ]
          }
        },
        "required": [
          "browserSdk",
          "browserSdkVersion",
          "dateCreated",
          "dsn",
          "dynamicSdkLoaderOptions",
          "id",
          "isActive",
          "label",
          "name",
          "projectId",
          "public",
          "rateLimit",
          "secret"
        ]
      },
      "ProjectKeyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 64
          },
          "public": {
            "type": "string",
            "nullable": true,
            "pattern": "^[a-f0-9]{32}$"
          },
          "secret": {
            "type": "string",
            "nullable": true,
            "pattern": "^[a-f0-9]{32}$"
          },
          "rateLimit": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer",
                    "minimum": 0,
                    "nullable": true
                  },
                  "window": {
                    "type": "integer",
                    "maximum": 86400,
                    "minimum": 0,
                    "nullable": true
                  }
                }
              }
            ],
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "browserSdkVersion": {
            "enum": [
              "latest",
              "7.x",
              "6.x",
              "5.x",
              "4.x"
            ],
            "type": "string",
            "description": "* `latest` - latest\n* `7.x` - 7.x\n* `6.x` - 6.x\n* `5.x` - 5.x\n* `4.x` - 4.x"
          },
          "dynamicSdkLoaderOptions": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "hasReplay": {
                    "type": "boolean"
                  },
                  "hasPerformance": {
                    "type": "boolean"
                  },
                  "hasDebug": {
                    "type": "boolean"
                  }
                }
              }
            ],
            "nullable": true
          }
        }
      },
      "ProjectOptions": {
        "type": "object",
        "properties": {
          "filters:react-hydration-errors": {
            "type": "boolean"
          },
          "filters:blacklisted_ips": {
            "type": "string"
          },
          "filters:releases": {
            "type": "string"
          },
          "filters:error_messages": {
            "type": "string"
          }
        }
      },
      "ProjectPost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 50,
            "pattern": "^[a-z0-9_\\-]+$"
          },
          "platform": {
            "type": "string",
            "nullable": true
          },
          "default_rules": {
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      },
      "ProjectWithTeam": {
        "type": "object",
        "properties": {
          "stats": {},
          "transactionStats": {},
          "sessionStats": {},
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "platform": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "isBookmarked": {
            "type": "boolean"
          },
          "isMember": {
            "type": "boolean"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstEvent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstTransactionEvent": {
            "type": "boolean"
          },
          "access": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAccess": {
            "type": "boolean"
          },
          "hasMinifiedStackTrace": {
            "type": "boolean"
          },
          "hasMonitors": {
            "type": "boolean"
          },
          "hasProfiles": {
            "type": "boolean"
          },
          "hasReplays": {
            "type": "boolean"
          },
          "hasSessions": {
            "type": "boolean"
          },
          "isInternal": {
            "type": "boolean"
          },
          "isPublic": {
            "type": "boolean"
          },
          "avatar": {
            "type": "object",
            "properties": {
              "avatarType": {
                "type": "string"
              },
              "avatarUuid": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "avatarType",
              "avatarUuid"
            ]
          },
          "color": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "team": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "slug"
            ]
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "slug"
              ]
            }
          }
        },
        "required": [
          "access",
          "avatar",
          "color",
          "dateCreated",
          "features",
          "firstEvent",
          "firstTransactionEvent",
          "hasAccess",
          "hasMinifiedStackTrace",
          "hasMonitors",
          "hasProfiles",
          "hasReplays",
          "hasSessions",
          "id",
          "isBookmarked",
          "isInternal",
          "isMember",
          "isPublic",
          "name",
          "platform",
          "slug",
          "status",
          "team",
          "teams"
        ]
      },
      "RateLimit": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0,
            "nullable": true
          },
          "window": {
            "type": "integer",
            "maximum": 86400,
            "minimum": 0,
            "nullable": true
          }
        }
      },
      "RateLimitParameter": {
        "type": "object",
        "properties": {
          "window": {
            "type": "integer"
          },
          "count": {
            "type": "integer"
          }
        }
      },
      "SCIMListResponseEnvelopeSCIMMemberIndexResponse": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalResults": {
            "type": "integer"
          },
          "startIndex": {
            "type": "integer"
          },
          "itemsPerPage": {
            "type": "integer"
          },
          "Resources": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Conforming to the SCIM RFC, this represents a Sentry Org Member\nas a SCIM user object.",
              "properties": {
                "active": {
                  "type": "boolean"
                },
                "schemas": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string"
                },
                "userName": {
                  "type": "string"
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "givenName": {
                      "type": "string"
                    },
                    "familyName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "familyName",
                    "givenName"
                  ]
                },
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "primary": {
                        "type": "boolean"
                      },
                      "value": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "primary",
                      "type",
                      "value"
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "resourceType"
                  ]
                },
                "sentryOrgRole": {
                  "type": "string"
                }
              },
              "required": [
                "emails",
                "id",
                "meta",
                "name",
                "schemas",
                "sentryOrgRole",
                "userName"
              ]
            }
          }
        },
        "required": [
          "Resources",
          "itemsPerPage",
          "schemas",
          "startIndex",
          "totalResults"
        ]
      },
      "SCIMListResponseEnvelopeSCIMTeamIndexResponse": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalResults": {
            "type": "integer"
          },
          "startIndex": {
            "type": "integer"
          },
          "itemsPerPage": {
            "type": "integer"
          },
          "Resources": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "schemas": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "resourceType"
                  ]
                },
                "members": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "display": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "display",
                      "value"
                    ]
                  }
                }
              },
              "required": [
                "displayName",
                "id",
                "meta",
                "schemas"
              ]
            }
          }
        },
        "required": [
          "Resources",
          "itemsPerPage",
          "schemas",
          "startIndex",
          "totalResults"
        ]
      },
      "SCIMMemberProvision": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "format": "email"
          },
          "sentryOrgRole": {
            "type": "string"
          }
        },
        "required": [
          "userName"
        ]
      },
      "SCIMPatchOperation": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "value": {},
          "path": {
            "type": "string"
          }
        },
        "required": [
          "op",
          "value"
        ]
      },
      "SCIMPatchRequest": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Operations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "op": {
                  "type": "string"
                },
                "value": {},
                "path": {
                  "type": "string"
                }
              },
              "required": [
                "op",
                "value"
              ]
            },
            "maxItems": 100
          }
        },
        "required": [
          "Operations"
        ]
      },
      "SCIMTeamPatchOperation": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "additionalProperties": {}
          },
          "path": {
            "type": "string"
          }
        },
        "required": [
          "op"
        ]
      },
      "SCIMTeamPatchRequest": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Operations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "op": {
                  "type": "string"
                },
                "value": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "path": {
                  "type": "string"
                }
              },
              "required": [
                "op"
              ]
            }
          }
        },
        "required": [
          "Operations",
          "schemas"
        ]
      },
      "SCIMTeamRequestBody": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayName": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "displayName",
          "members",
          "schemas"
        ]
      },
      "SourceMapDebug": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "additionalProperties": {},
                  "nullable": true
                }
              },
              "required": [
                "data",
                "message",
                "type"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "Team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "isMember": {
            "type": "boolean"
          },
          "teamRole": {
            "type": "string",
            "nullable": true
          },
          "flags": {
            "type": "object",
            "additionalProperties": {}
          },
          "access": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAccess": {
            "type": "boolean"
          },
          "isPending": {
            "type": "boolean"
          },
          "memberCount": {
            "type": "integer"
          },
          "avatar": {
            "type": "object",
            "properties": {
              "avatarType": {
                "type": "string"
              },
              "avatarUuid": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "avatarType",
              "avatarUuid"
            ]
          },
          "externalTeams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "externalId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                },
                "teamId": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "externalName": {
                  "type": "string"
                },
                "integrationId": {
                  "type": "string"
                }
              },
              "required": [
                "externalName",
                "id",
                "integrationId",
                "provider"
              ]
            }
          },
          "organization": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "status": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "name": {
                "type": "string"
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time"
              },
              "isEarlyAdopter": {
                "type": "boolean"
              },
              "require2FA": {
                "type": "boolean"
              },
              "requireEmailVerification": {
                "type": "boolean"
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "avatarType": {
                    "type": "string"
                  },
                  "avatarUuid": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "avatarType",
                  "avatarUuid"
                ]
              },
              "features": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "organizationUrl": {
                    "type": "string"
                  },
                  "regionUrl": {
                    "type": "string"
                  }
                },
                "required": [
                  "organizationUrl",
                  "regionUrl"
                ]
              },
              "hasAuthProvider": {
                "type": "boolean"
              }
            },
            "required": [
              "avatar",
              "dateCreated",
              "features",
              "hasAuthProvider",
              "id",
              "isEarlyAdopter",
              "links",
              "name",
              "require2FA",
              "requireEmailVerification",
              "slug",
              "status"
            ]
          },
          "projects": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "stats": {},
                "transactionStats": {},
                "sessionStats": {},
                "id": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "platform": {
                  "type": "string",
                  "nullable": true
                },
                "dateCreated": {
                  "type": "string",
                  "format": "date-time"
                },
                "isBookmarked": {
                  "type": "boolean"
                },
                "isMember": {
                  "type": "boolean"
                },
                "features": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "firstEvent": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "firstTransactionEvent": {
                  "type": "boolean"
                },
                "access": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "hasAccess": {
                  "type": "boolean"
                },
                "hasMinifiedStackTrace": {
                  "type": "boolean"
                },
                "hasMonitors": {
                  "type": "boolean"
                },
                "hasProfiles": {
                  "type": "boolean"
                },
                "hasReplays": {
                  "type": "boolean"
                },
                "hasSessions": {
                  "type": "boolean"
                },
                "isInternal": {
                  "type": "boolean"
                },
                "isPublic": {
                  "type": "boolean"
                },
                "avatar": {
                  "type": "object",
                  "properties": {
                    "avatarType": {
                      "type": "string"
                    },
                    "avatarUuid": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "avatarType",
                    "avatarUuid"
                  ]
                },
                "color": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "access",
                "avatar",
                "color",
                "dateCreated",
                "features",
                "firstEvent",
                "firstTransactionEvent",
                "hasAccess",
                "hasMinifiedStackTrace",
                "hasMonitors",
                "hasProfiles",
                "hasReplays",
                "hasSessions",
                "id",
                "isBookmarked",
                "isInternal",
                "isMember",
                "isPublic",
                "name",
                "platform",
                "slug",
                "status"
              ]
            }
          },
          "orgRole": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "access",
          "avatar",
          "dateCreated",
          "flags",
          "hasAccess",
          "id",
          "isMember",
          "isPending",
          "memberCount",
          "name",
          "slug",
          "teamRole"
        ]
      },
      "TeamPost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 64
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 50,
            "pattern": "^[a-z0-9_\\-]+$"
          },
          "idp_provisioned": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "TeamSCIM": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string"
              }
            },
            "required": [
              "resourceType"
            ]
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "display": {
                  "type": "string"
                }
              },
              "required": [
                "display",
                "value"
              ]
            }
          }
        },
        "required": [
          "displayName",
          "id",
          "meta",
          "schemas"
        ]
      },
      "TraceContextValidator": {
        "type": "object",
        "properties": {
          "trace_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "trace_id"
        ]
      },
      "data": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "project_id": {
              "type": "string"
            },
            "trace_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "error_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "environment": {
              "type": "string",
              "nullable": true
            },
            "tags": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "array",
                  "items": {}
                }
              ]
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "nullable": true
                },
                "username": {
                  "type": "string",
                  "nullable": true
                },
                "email": {
                  "type": "string",
                  "nullable": true
                },
                "ip": {
                  "type": "string",
                  "nullable": true
                },
                "display_name": {
                  "type": "string",
                  "nullable": true
                }
              }
            },
            "sdk": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true
                },
                "version": {
                  "type": "string",
                  "nullable": true
                }
              }
            },
            "os": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true
                },
                "version": {
                  "type": "string",
                  "nullable": true
                }
              }
            },
            "browser": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true
                },
                "version": {
                  "type": "string",
                  "nullable": true
                }
              }
            },
            "device": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true
                },
                "brand": {
                  "type": "string",
                  "nullable": true
                },
                "model": {
                  "type": "string",
                  "nullable": true
                },
                "family": {
                  "type": "string",
                  "nullable": true
                }
              }
            },
            "is_archived": {
              "type": "boolean",
              "nullable": true
            },
            "urls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "clicks": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {}
              }
            },
            "count_dead_clicks": {
              "type": "integer",
              "nullable": true
            },
            "count_rage_clicks": {
              "type": "integer",
              "nullable": true
            },
            "count_errors": {
              "type": "integer",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "nullable": true
            },
            "finished_at": {
              "type": "string",
              "nullable": true
            },
            "started_at": {
              "type": "string",
              "nullable": true
            },
            "activity": {
              "type": "integer",
              "nullable": true
            },
            "count_urls": {
              "type": "integer",
              "nullable": true
            },
            "replay_type": {
              "type": "string"
            },
            "count_segments": {
              "type": "integer",
              "nullable": true
            },
            "platform": {
              "type": "string",
              "nullable": true
            },
            "releases": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "dist": {
              "type": "string",
              "nullable": true
            }
          }
        }
      }
    },
    "securitySchemes": {
      "auth_token": {
        "type": "http",
        "scheme": "bearer"
      },
      "dsn": {
        "type": "http",
        "scheme": "DSN"
      }
    }
  },
  "servers": [
    {
      "url": "https://sentry.io"
    }
  ],
  "tags": [
    {
      "name": "Teams",
      "description": "Endpoints for teams",
      "x-display-description": false,
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/teams/&template=api_error_template.md"
      }
    },
    {
      "name": "Organizations",
      "description": "Endpoints for organizations",
      "x-display-description": false,
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/organizations/&template=api_error_template.md"
      }
    },
    {
      "name": "Projects",
      "description": "Endpoints for projects",
      "x-display-description": false,
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/projects/&template=api_error_template.md"
      }
    },
    {
      "name": "Events",
      "x-sidebar-name": "Events & Issues",
      "description": "Endpoints for events and issues",
      "x-display-description": false,
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/events/&template=api_error_template.md"
      }
    },
    {
      "name": "Releases",
      "description": "Endpoints for releases",
      "x-display-description": false,
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/releases/&template=api_error_template.md"
      }
    },
    {
      "name": "Integration",
      "x-sidebar-name": "Integration Platform",
      "description": "Endpoints for the integration platform",
      "x-display-description": false,
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/integration-platform/&template=api_error_template.md"
      }
    },
    {
      "name": "SCIM",
      "x-sidebar-name": "SCIM",
      "description": "System for Cross-Domain Identity Management ([SCIM](http://www.simplecloud.info/)) is a standard implemented by Identity Providers and applications in order to facilitate federated identity management. Through these APIs you can add and delete members as well as teams. Sentry SaaS customers must be on a Business Plan with SAML2 Enabled. SCIM uses a bearer token for authentication that is created when SCIM is enabled. For how to enable SCIM, see our docs [here](/product/accounts/sso/#scim-provisioning).\n Sentry's SCIM API does not currently support syncing passwords, or setting any User attributes other than `active`.",
      "x-display-description": true,
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/integration-platform/&template=api_error_template.md"
      }
    },
    {
      "name": "Discover",
      "x-sidebar-name": "Discover & Performance",
      "description": "Discover and Performance allow you to slice and dice your Error and Transaction events",
      "x-display-description": true,
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/integration-platform/&template=api_error_template.md"
      }
    },
    {
      "name": "Crons",
      "x-sidebar-name": "Crons (Beta)",
      "description": "Endpoints for Crons",
      "x-display-description": false,
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/integration-platform/&template=api_error_template.md"
      }
    },
    {
      "name": "Replays",
      "x-sidebar-name": "Replays",
      "description": "Endpoints for Replays",
      "x-display-description": false,
      "externalDocs": {
        "description": "Found an error? Let us know.",
        "url": "https://github.com/getsentry/sentry-docs/issues/new/?title=API%20Documentation%20Error:%20/api/integration-platform/&template=api_error_template.md"
      }
    }
  ]
}